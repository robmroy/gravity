{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/helper.js","webpack:///./src/launchpad.js","webpack:///./src/ball.js","webpack:///./src/obstacle.js","webpack:///./src/Sticky_planet.js","webpack:///./src/hole.js","webpack:///./src/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","dottedArc","ctx","x","y","radius","theta0","theta1","color","theta","numPieces","Math","ceil","dTheta","strokeStyle","beginPath","arc","stroke","vectorAngle","vector","PI","atan","launchpad_error","rect","document","getElementById","getBoundingClientRect","launchpad","[object Object]","game","normal","this","draw","move","launch","launchVx","launchVy","normalAngle","setVelocity","vx","vy","ball","stopped","event","cursor","clientX","clientY","dx","dy","console","log","ax","ay","logging","hole","checkForWin","abs","planets","forEach","planet","dz2","dz","ballData","error","sticky","currentPlanet","launchPad","setupLaunchPad","bounce","mass","obstacles","obstacle","checkForBall","fillStyle","fill","x1","y1","x2","y2","z","sqrt","vDotNormal","new_vx","new_vy","max","min","result","moveTo","lineTo","Sticky_planet","density","font","floor","fillText","width","flagColor","drawFlag","drawHole","src_game","level","canvas","getContext","start","func","e","addEventListener","removeEventListener","requestAnimationFrame","animate","delta","moveObjects","time","timeDelta","lastTime","step","height","fillRect"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const dottedArc = function(ctx, x, y, radius, theta0, theta1, color){\r\n    const a = .1;\r\n    let theta = theta1 - theta0;\r\n    let numPieces = 2* Math.ceil(.5*(theta/a - 1)) + 1;\r\n    let dTheta = theta/numPieces;\r\n    ctx.strokeStyle = color;\r\n    for (let i=0; i < numPieces; i++){ \r\n        ctx.beginPath();\r\n        if (i % 2 == 0){\r\n            ctx.arc(\r\n                x, y, radius, theta0 + i*dTheta, theta0+(i+1)*dTheta \r\n                );\r\n                ctx.stroke();\r\n            \r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const vectorAngle = function(vector){\r\n    const x = vector[0];\r\n    const y = vector[1];\r\n    if (x==0){\r\n        return y > 0 ? Math.PI/2 : -Math.PI/2;\r\n    }\r\n    \r\n    return x > 0 ? Math.atan(y/x) : Math.PI + Math.atan(y/x);\r\n    \r\n}","import {dottedArc, vectorAngle} from './helper';\r\nconst error = () => {let m = document.getElementById(\"game-canvas\");\r\nlet rect = m.getBoundingClientRect();\r\nreturn {x: rect.x, y: rect.y};\r\n}\r\n\r\nclass LaunchPad {\r\n   constructor(game, x = 0, y = 0, normal = [0,1], radius = 80,  color = \"white\"){\r\n      this.game = game;\r\n      this.x = x;\r\n      this.y = y;\r\n      this.normal = normal;\r\n      this.radius = radius;\r\n      this.color = color;\r\n      this.draw= this.draw.bind(this);\r\n      this.move = this.move.bind(this);\r\n      this.launch = this.launch.bind(this);\r\n      this.launchVx = 0;\r\n      this.launchVy=0;\r\n      this.normalAngle = vectorAngle(normal);\r\n      this.setVelocity = this.setVelocity.bind(this);\r\n\r\n  }\r\n\r\n  move(){\r\n      this.x += this.vx;\r\n      this.y += this.vy;\r\n  }\r\n  draw(ctx ) {\r\n   // ctx.beginPath();\r\n   // ctx.strokeStyle = this.color;\r\n   // ctx.arc(\r\n   //   this.x, this.y, this.radius, 0,  Math.PI\r\n   // );\r\n   // ctx.stroke();\r\n   //  \r\n   dottedArc(ctx, this.x, this.y, this.radius, \r\n      this.normalAngle - Math.PI/2, this.normalAngle + Math.PI/2, this.color)\r\n}\r\n\r\n    launch(){\r\n       this.game.ball.stopped = false;\r\n       this.game.ball.vx = this.launchVx;\r\n       this.game.ball.vy = this.launchVy;\r\n    }\r\n\r\n    setVelocity(ball, event){\r\n\r\n      const cursor = {x: event.clientX -error().x, y: event.clientY - error().y};\r\n      const dx = cursor.x - this.x;\r\n      const dy = cursor.y - this.y;\r\n      console.log(`this.normal is ${this.normal}`);\r\n      if (\r\n         dx**2 + dy**2 <= this.radius ** 2 &&\r\n          dx * this.normal[0] + dy * this.normal[1] >= 0\r\n          ) {\r\n            \r\n            \r\n            var coor = \"Choose Vector. X coords: \" + ball.x + \", Y coords: \" + ball.y;\r\n            coor += `Vector: [${dx}, ${dy}]`;\r\n            this.launchVx = dx/ 4;\r\n            this.launchVy = dy/ 4;\r\n            return true;\r\n         }   \r\n         return false;\r\n    }\r\n   }\r\n\r\n   export default LaunchPad;\r\n","import LaunchPad from \"./launchpad\";\r\n\r\nclass Ball {\r\n    constructor(game, x = 0, y = 0, radius = 5, color = \"white\", vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.ax = 0;\r\n        this.ay = 0;\r\n        this.stopped = true;\r\n        this.logging = false;\r\n    }\r\n    \r\n    move(){\r\n        if(this.logging){\r\n            console.log(`ballx is ${this.x}`);\r\n            console.log(`bally is ${this.y}`);\r\n        }\r\n        if (this.game.hole.checkForWin()){\r\n            this.stopped = true;\r\n        }\r\n        if (!this.stopped){\r\n            this.x += this.vx;\r\n            this.y += this.vy;\r\n            this.vx += this.ax;\r\n            this.vy +=this.ay;\r\n            // console.log(`vy is ${this.vy}`);\r\n            // console.log(`ay is ${this.ay}`);\r\n            \r\n\r\n            if (Math.abs(this.vx) + Math.abs(this.vy) < 0.4\r\n            && Math.abs(this.ax) + Math.abs(this.ay) <0.1){\r\n                this.stopped = true;}\r\n            this.ax = 0;\r\n            this.ay = 0;\r\n            \r\n            this.game.planets.forEach(planet => {\r\n                const {dx, dy, dz2, dz, normal} = planet.ballData();\r\n                if (dz <=  this.radius + planet.radius){\r\n                    let error = this.radius + planet.radius - dz;\r\n                    this.x += error * normal[0];\r\n                    this.y += error * normal[1];\r\n                    this.ax = 0;\r\n                    this.ay = 0;\r\n                  if (planet.sticky || Math.abs(this.vx) + Math.abs(this.vy)<1 ){\r\n                      this.stopped = true;\r\n                    this.game.currentPlanet = planet;\r\n                    this.game.launchPad = new LaunchPad(this.game, this.x, this.y, normal);\r\n                    this.game.setupLaunchPad();\r\n                }\r\n                  else{planet.bounce(normal);}\r\n                    \r\n                }\r\n                else{\r\n                this.ax -= (1/dz2)*planet.mass * dx/dz * .2;\r\n                this.ay -= (1/dz2)*planet.mass * dy/dz * .2;\r\n                } \r\n        });\r\n        this.game.obstacles.forEach(obstacle => {\r\n            if (obstacle.checkForBall()){\r\n                obstacle.bounce();\r\n            }\r\n        })\r\n    };\r\n    \r\n    }\r\n    draw(ctx ) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          this.x, this.y, this.radius, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default Ball;","\r\nclass Obstacle {\r\n    constructor(game, x1 = 0, y1 = 0, x2 = 100, y2 = 100, color = \"orange\"){\r\n        this.game = game;\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        let z = Math.sqrt((y1-y2)**2 + (x2 - x1)**2)\r\n        this.normal = [(y1 - y2)/z, (x2- x1)/z];\r\n        this.bounce = this.bounce.bind(this);\r\n        this.checkForBall = this.checkForBall.bind(this);\r\n    }\r\n    bounce(){\r\n        let ball = this.game.ball;\r\n        let normal = this.normal;\r\n        let vDotNormal = ball.vx * normal[0] + ball.vy * normal[1];\r\n        let new_vx = ball.vx - 2 * vDotNormal * normal[0];\r\n        let new_vy = ball.vy - 2 * vDotNormal * normal[1];\r\n        ball.vx = new_vx;\r\n        ball.vy = new_vy;\r\n    }\r\n    checkForBall(){\r\n        \r\n        let ball = this.game.ball;\r\n        ball.logging = false;\r\n        let {x1, x2, y1, y2} = this;\r\n        let {x, y, radius} = ball;\r\n        if (x - radius > Math.max(x1, x2) || x + radius < Math.min(x1, x2)){\r\n            return false;\r\n        }\r\n        if (y - radius > Math.max(y1, y2) || y + radius < Math.min(y1, y2)){\r\n            return false;\r\n        }\r\n        let d = ((y2-y1)*x - (x2-x1)*y+x2*y1-y2*x1)/Math.sqrt((y2-y1)**2 + (x2-x1)**2);\r\n        let result = -radius <= d && radius >= d;\r\n        if (result) {\r\n        return result;\r\n        }\r\n    }\r\n    move(){\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n    }\r\n    draw(ctx ) {\r\n        ctx.beginPath();\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.x1, this.y1);\r\n        ctx.lineTo(this.x2, this.y2);\r\n        ctx.strokeStyle = this.color;\r\n        ctx.stroke();\r\n      };\r\n}\r\n\r\nexport default Obstacle;","\r\nclass StickyPlanet {\r\n    constructor(game, x = 0, y = 0, radius = 10, color = \"grey\", density, vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.density = density || 1;\r\n        this.mass = this.density * this.radius**3;\r\n        this.sticky = true;\r\n    }\r\n\r\n    move(){\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n    }\r\n\r\n    ballData(){\r\n      const ball = this.game.ball;\r\n      const dx = ball.x - this.x;\r\n      const dy = ball.y - this.y;\r\n      const dz2 = ((dx)**2 + (dy)**2);\r\n      const dz = Math.sqrt(dz2);\r\n      const normal = [dx/dz, dy/dz];\r\n      return {dx, dy, dz2, dz, normal}\r\n  }\r\n\r\n    draw(ctx ) {\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          this.x, this.y, this.radius, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.font = `${Math.floor(.9 * this.radius)}px Arial`;\r\n        ctx.fill();\r\n        ctx.beginPath();\r\n        ctx.fillStyle = \"white\"\r\n        ctx.font = `${21}px Arial`;\r\n        ctx.fillText(`Density: ${this.density}`, \r\n        `${this.x -  this.radius - 10}`,\r\n         `${this.y +  this.radius + this.game.ball.radius * 2 +18}`);\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default StickyPlanet;","class Hole {\r\n    constructor(game, x = 600, y = 500, width = 100,  flagColor = \"red\"){\r\n       this.game = game;\r\n       this.x = x;\r\n       this.y = y;\r\n       this.width = width;\r\n       this.flagColor = flagColor;\r\n       this.drawFlag= this.drawFlag.bind(this);\r\n       this.drawHole= this.drawHole.bind(this);\r\n       this.move = this.move.bind(this);\r\n       this.launchVx = 0;\r\n       this.launchVy=0;\r\n   }\r\n \r\n   move(){\r\n       this.x += this.vx;\r\n       this.y += this.vy;\r\n   }\r\n   drawFlag(ctx ) {\r\n       let x = this.x;\r\n       let y = this.y;\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = \"gold\";\r\n      ctx.moveTo(x, y);\r\n      ctx.lineTo(x, y - 50)\r\n       ctx.stroke();\r\n       ctx.fillStyle = \"red\";\r\n       ctx.moveTo(x, y-50);\r\n       ctx.lineTo(x,y-70);\r\n       ctx.lineTo(x+ 25, y-60);\r\n       ctx.lineTo(x, y-50);\r\n       ctx.fill();\r\n     }\r\n     drawHole(ctx) {\r\n         let {x, y, width} = this;\r\n         let ball = this.game.ball;\r\n         if (ball.y - ball.radius <= y +20 && ball.vy > 0){\r\n             ctx.beginPath();\r\n             ctx.fillStyle = \"black\";\r\n             ctx.moveTo(x - width/2, y);\r\n             ctx.lineTo(x + width/2, y);\r\n             ctx.lineTo(x + width/2, y + 30);\r\n             ctx.lineTo(x - width/2, y + 30);\r\n             ctx.lineTo(x - width/2, y );\r\n             ctx.fill();\r\n         }\r\n         \r\n\r\n         \r\n        }\r\n        checkForWin(){\r\n            let {x, y, width} = this;\r\n            let ball = this.game.ball;\r\n            let result = ball.y -ball.radius> y \r\n            && ball.y-5*ball.radius < y\r\n            && Math.abs(ball.x - x) < width/2\r\n            && ball.vy >0;\r\n            if (result){\r\n                console.log('won, supposedly');\r\n            }\r\n            return result;\r\n        }\r\n \r\n    \r\n     \r\n    }\r\n \r\n    export default Hole;\r\n ","import Ball from './ball';\r\nimport LaunchPad from './launchpad';\r\nimport Obstacles from './obstacles';\r\nimport Planets from './planets';\r\nimport StickyPlanet from './Sticky_planet';\r\nimport Obstacle from './obstacle';\r\nimport BouncyPlanet from './bouncy_planet';\r\nimport Hole from './hole';\r\n\r\nclass Game {\r\n\r\n    constructor(level) {\r\n        this.canvas = document.getElementById(\"game-canvas\");\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        \r\n        this.ball = new Ball(this, 300, 100);\r\n        this.currentPlanet = new StickyPlanet(this, 300, 70, 25, \"#27753a\", .4);\r\n\r\n        this.launchPad = new LaunchPad(this, 300, 100);\r\n        this.planets = [\r\n            this.currentPlanet,\r\n            new StickyPlanet(this, 300, 400, 35), \r\n            new StickyPlanet(this, 620, 250, 15, \"orange\", 3),\r\n            \r\n        ]\r\n        this.hole = new Hole(this, 200, 200);\r\n        this.obstacles=[];\r\n        this.obstacles = [\r\n            new Obstacle(this, 90, 0, 90, 900)   \r\n        ];\r\n        this.draw = this.draw.bind(this);\r\n        this.start = this.start.bind(this);\r\n        this.setupLaunchPad = this.setupLaunchPad.bind(this);\r\n    }\r\n    setupLaunchPad(){\r\n        let func = e => this.launchPad.setVelocity(this.ball, e);\r\n        this.canvas.addEventListener(\r\n            'mousemove', \r\n        func\r\n        )\r\n        this.canvas.addEventListener(\r\n            \"click\",\r\n            e => {if (this.launchPad.launch()){\r\n                document.getElementById(\"game-canvas\").removeEventListener('mousemove', func);\r\n            }\r\n            })\r\n    }\r\n    start() {\r\n        this.setupLaunchPad();\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n    step(delta) {\r\n        this.moveObjects(delta);\r\n    }\r\n\r\n    moveObjects() {\r\n        this.ball.move();\r\n    }\r\n    animate(time) {\r\n        const timeDelta = time - this.lastTime;\r\n        this.step(timeDelta);\r\n        this.draw();\r\n        this.lastTime = time;\r\n\r\n        // every call to animate requests causes another call to animate\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n    draw() {\r\n        let ctx=this.ctx;\r\n        ctx.width = 1200;\r\n        ctx.height = 600;\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(0, 0, 1000, 600);\r\n        this.launchPad.draw(ctx);\r\n        this.hole.drawFlag(ctx);\r\n        this.ball.draw(ctx);\r\n        this.planets.forEach(planet => planet.draw(ctx));\r\n        this.obstacles.forEach(obstacle => obstacle.draw(ctx));\r\n        this.hole.drawHole(ctx);\r\n    }\r\n\r\n}\r\n\r\nexport default Game;","import Game from './game';\r\n\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n    const game = new Game(1);\r\n    game.start();\r\n});\r\n"],"sourceRoot":""}