{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ball.js","webpack:///./src/helper.js","webpack:///./src/launchpad.js","webpack:///./src/obstacle.js","webpack:///./src/Sticky_planet.js","webpack:///./src/bouncy_planet.js","webpack:///./src/hole.js","webpack:///./src/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ball","[object Object]","game","x","y","radius","color","vx","vy","this","draw","move","ax","ay","stopped","logging","console","log","hole","checkForWin","Math","abs","planets","forEach","planet","dx","dy","dz2","dz","normal","ballData","error","sticky","bounce","mass","obstacles","obstacle","checkForBall","ctx","beginPath","fillStyle","arc","PI","fill","dottedArc","theta0","theta1","theta","numPieces","ceil","dTheta","strokeStyle","stroke","vectorAngle","vector","atan","rect","document","getElementById","getBoundingClientRect","launchpad","launch","launchVx","launchVy","normalAngle","setVelocity","event","cursor","clientX","clientY","x1","y1","x2","y2","z","sqrt","vDotNormal","new_vx","new_vy","max","min","result","moveTo","lineTo","Sticky_planet","density","font","floor","fillText","bouncy_planet","bounce_coeff","dampen","vel","exp","width","flagColor","drawFlag","drawHole","src_game","level","canvas","getContext","currentPlanet","launchPad","start","func","e","addEventListener","removeEventListener","requestAnimationFrame","animate","delta","moveObjects","time","timeDelta","lastTime","step","height","fillRect"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,yCCLe,IAAAC,EA5Ef,MACAC,YAAAC,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,QAAAC,EAAA,EAAAC,EAAA,GACAC,KAAAP,OACAO,KAAAN,IACAM,KAAAL,IACAK,KAAAJ,SACAI,KAAAH,QACAG,KAAAC,KAAAD,KAAAC,KAAAlB,KAAAiB,MACAA,KAAAE,KAAAF,KAAAE,KAAAnB,KAAAiB,MACAA,KAAAF,KACAE,KAAAD,KACAC,KAAAG,GAAA,EACAH,KAAAI,GAAA,EACAJ,KAAAK,SAAA,EACAL,KAAAM,SAAA,EAGAd,OACAQ,KAAAM,UACAC,QAAAC,gBAAoCR,KAAAN,KACpCa,QAAAC,gBAAoCR,KAAAL,MAEpCK,KAAAP,KAAAgB,KAAAC,gBACAV,KAAAK,SAAA,GAEAL,KAAAK,UACAL,KAAAN,GAAAM,KAAAF,GACAE,KAAAL,GAAAK,KAAAD,GACAC,KAAAF,IAAAE,KAAAG,GACAH,KAAAD,IAAAC,KAAAI,GAKAO,KAAAC,IAAAZ,KAAAF,IAAAa,KAAAC,IAAAZ,KAAAD,IAAA,IACAY,KAAAC,IAAAZ,KAAAG,IAAAQ,KAAAC,IAAAZ,KAAAI,IAAA,KACAJ,KAAAK,SAAA,GACAL,KAAAG,GAAA,EACAH,KAAAI,GAAA,EAEAJ,KAAAP,KAAAoB,QAAAC,QAAAC,IACA,MAAAC,GAAuBA,EAAAC,KAAAC,MAAAC,KAAAC,UAAwBL,EAAAM,WAC/C,GAAAF,GAAAnB,KAAAJ,OAAAmB,EAAAnB,OAAA,CACA,IAAA0B,EAAAtB,KAAAJ,OAAAmB,EAAAnB,OAAAuB,EACAnB,KAAAN,GAAA4B,EAAAF,EAAA,GACApB,KAAAL,GAAA2B,EAAAF,EAAA,GACApB,KAAAG,GAAA,EACAH,KAAAI,GAAA,EACAW,EAAAQ,QAAAZ,KAAAC,IAAAZ,KAAAF,IAAAa,KAAAC,IAAAZ,KAAAD,IAAA,EAAiFC,KAAAK,SAAA,EAC1DU,EAAAS,OAAAJ,QAIvBpB,KAAAG,IAAA,EAAAe,EAAAH,EAAAU,KAAAT,EAAAG,EAAA,GACAnB,KAAAI,IAAA,EAAAc,EAAAH,EAAAU,KAAAR,EAAAE,EAAA,KAGAnB,KAAAP,KAAAiC,UAAAZ,QAAAa,IACAA,EAAAC,gBACAD,EAAAH,YAMAhC,KAAAqC,GACAA,EAAAC,YACAD,EAAAE,UAAA/B,KAAAH,MACAgC,EAAAC,YACAD,EAAAG,IACAhC,KAAAN,EAAAM,KAAAL,EAAAK,KAAAJ,OAAA,IAAAe,KAAAsB,IAAA,GAEAJ,EAAAK,SCzEO,MAAAC,EAAA,SAAAN,EAAAnC,EAAAC,EAAAC,EAAAwC,EAAAC,EAAAxC,GAEP,IAAAyC,EAAAD,EAAAD,EACAG,EAAA,EAAA5B,KAAA6B,KAAA,IAAAF,EAFA,GAEA,MACAG,EAAAH,EAAAC,EACAV,EAAAa,YAAA7C,EACA,QAAAtC,EAAA,EAAiBA,EAAAgF,EAAehF,IAChCsE,EAAAC,YACAvE,EAAA,OACAsE,EAAAG,IACAtC,EAAAC,EAAAC,EAAAwC,EAAA7E,EAAAkF,EAAAL,GAAA7E,EAAA,GAAAkF,GAEAZ,EAAAc,WAOOC,EAAA,SAAAC,GACP,MAAAnD,EAAAmD,EAAA,GACAlD,EAAAkD,EAAA,GACA,UAAAnD,EACAC,EAAA,EAAAgB,KAAAsB,GAAA,GAAAtB,KAAAsB,GAAA,EAGAvC,EAAA,EAAAiB,KAAAmC,KAAAnD,EAAAD,GAAAiB,KAAAsB,GAAAtB,KAAAmC,KAAAnD,EAAAD,ICzBA4B,EAAA,KAAqB,IACrByB,EADqBC,SAAAC,eAAA,eACrBC,wBACA,OAAQxD,EAAAqD,EAAArD,EAAAC,EAAAoD,EAAApD,IAiEU,IAAAwD,EA9DlB,MACA3D,YAAAC,EAAAC,EAAA,EAAAC,EAAA,EAAAyB,EAAA,MAAAxB,EAAA,GAAAC,EAAA,SACAG,KAAAP,OACAO,KAAAN,IACAM,KAAAL,IACAK,KAAAoB,SACApB,KAAAJ,SACAI,KAAAH,QACAG,KAAAC,KAAAD,KAAAC,KAAAlB,KAAAiB,MACAA,KAAAE,KAAAF,KAAAE,KAAAnB,KAAAiB,MACAA,KAAAoD,OAAApD,KAAAoD,OAAArE,KAAAiB,MACAA,KAAAqD,SAAA,EACArD,KAAAsD,SAAA,EACAtD,KAAAuD,YAAyBX,EAAWxB,GACpCpB,KAAAwD,YAAAxD,KAAAwD,YAAAzE,KAAAiB,MAIAR,OACAQ,KAAAN,GAAAM,KAAAF,GACAE,KAAAL,GAAAK,KAAAD,GAEAP,KAAAqC,GAQGM,EAASN,EAAA7B,KAAAN,EAAAM,KAAAL,EAAAK,KAAAJ,OACZI,KAAAuD,YAAA5C,KAAAsB,GAAA,EAAAjC,KAAAuD,YAAA5C,KAAAsB,GAAA,EAAAjC,KAAAH,OAGAL,SACAQ,KAAAP,KAAAF,KAAAc,SAAA,EACAL,KAAAP,KAAAF,KAAAO,GAAAE,KAAAqD,SACArD,KAAAP,KAAAF,KAAAQ,GAAAC,KAAAsD,SAGA9D,YAAAD,EAAAkE,GAEA,MAAAC,EAAsBD,EAAAE,QAAArC,IAAA5B,EAAtBgE,EAAsBD,EAAAG,QAAAtC,IAAA3B,EACtBqB,EAAA0C,EAAA1D,KAAAN,EACAuB,EAAAyC,EAAA1D,KAAAL,EAEA,OADAY,QAAAC,sBAAoCR,KAAAoB,UAEpCJ,GAAA,EAAAC,GAAA,GAAAjB,KAAAJ,QAAA,GACAoB,EAAAhB,KAAAoB,OAAA,GAAAH,EAAAjB,KAAAoB,OAAA,QAIA7B,EAAAG,EAAAH,EAAAI,EAEAK,KAAAqD,SAAArC,EAAA,EACAhB,KAAAsD,SAAArC,EAAA,GACA,KCLe,IAAAU,EAxDf,MACAnC,YAAAC,EAAAoE,EAAA,EAAAC,EAAA,EAAAC,EAAA,IAAAC,EAAA,IAAAnE,EAAA,UACAG,KAAAP,OACAO,KAAA6D,KACA7D,KAAA8D,KACA9D,KAAA+D,KACA/D,KAAAgE,KACAhE,KAAAH,QACAG,KAAAC,KAAAD,KAAAC,KAAAlB,KAAAiB,MACAA,KAAAE,KAAAF,KAAAE,KAAAnB,KAAAiB,MACA,IAAAiE,EAAAtD,KAAAuD,MAAAJ,EAAAE,IAAA,GAAAD,EAAAF,IAAA,GACA7D,KAAAoB,OAAA,EAAA0C,EAAAE,GAAAC,GAAAF,EAAAF,GAAAI,GACAjE,KAAAwB,OAAAxB,KAAAwB,OAAAzC,KAAAiB,MACAA,KAAA4B,aAAA5B,KAAA4B,aAAA7C,KAAAiB,MAEAR,SACA,IAAAD,EAAAS,KAAAP,KAAAF,KACA6B,EAAApB,KAAAoB,OACA+C,EAAA5E,EAAAO,GAAAsB,EAAA,GAAA7B,EAAAQ,GAAAqB,EAAA,GACAgD,EAAA7E,EAAAO,GAAA,EAAAqE,EAAA/C,EAAA,GACAiD,EAAA9E,EAAAQ,GAAA,EAAAoE,EAAA/C,EAAA,GACA7B,EAAAO,GAAAsE,EACA7E,EAAAQ,GAAAsE,EAEA7E,eAEA,IAAAD,EAAAS,KAAAP,KAAAF,KACAA,EAAAe,SAAA,EACA,IAAAuD,GAAaA,EAAAE,KAAAD,KAAAE,MAAehE,MAC5BN,EAAaA,EAAAC,IAAAC,UAAaL,EAC1B,GAAAG,EAAAE,EAAAe,KAAA2D,IAAAT,EAAAE,IAAArE,EAAAE,EAAAe,KAAA4D,IAAAV,EAAAE,GACA,SAEA,GAAApE,EAAAC,EAAAe,KAAA2D,IAAAR,EAAAE,IAAArE,EAAAC,EAAAe,KAAA4D,IAAAT,EAAAE,GACA,SAEA,IAAAnG,IAAAmG,EAAAF,GAAApE,GAAAqE,EAAAF,GAAAlE,EAAAoE,EAAAD,EAAAE,EAAAH,GAAAlD,KAAAuD,MAAAF,EAAAF,IAAA,GAAAC,EAAAF,IAAA,GACAW,GAAA5E,GAAA/B,GAAA+B,GAAA/B,EACA,OAAA2G,QAAA,EAIAhF,OACAQ,KAAAN,GAAAM,KAAAF,GACAE,KAAAL,GAAAK,KAAAD,GAEAP,KAAAqC,GACAA,EAAAC,YACAD,EAAAC,YACAD,EAAA4C,OAAAzE,KAAA6D,GAAA7D,KAAA8D,IACAjC,EAAA6C,OAAA1E,KAAA+D,GAAA/D,KAAAgE,IACAnC,EAAAa,YAAA1C,KAAAH,MACAgC,EAAAc,gBCHe,IAAAgC,EAjDf,MACAnF,YAAAC,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,GAAAC,EAAA,OAAA+E,EAAA9E,EAAA,EAAAC,EAAA,GACAC,KAAAP,OACAO,KAAAN,IACAM,KAAAL,IACAK,KAAAJ,SACAI,KAAAH,QACAG,KAAAC,KAAAD,KAAAC,KAAAlB,KAAAiB,MACAA,KAAAE,KAAAF,KAAAE,KAAAnB,KAAAiB,MACAA,KAAAF,KACAE,KAAAD,KACAC,KAAA4E,WAAA,EACA5E,KAAAyB,KAAAzB,KAAA4E,QAAA5E,KAAAJ,QAAA,EACAI,KAAAuB,QAAA,EAGA/B,OACAQ,KAAAN,GAAAM,KAAAF,GACAE,KAAAL,GAAAK,KAAAD,GAGAP,WACA,MAAAD,EAAAS,KAAAP,KAAAF,KACAyB,EAAAzB,EAAAG,EAAAM,KAAAN,EACAuB,EAAA1B,EAAAI,EAAAK,KAAAL,EACAuB,EAAA,UACAC,EAAAR,KAAAuD,KAAAhD,GAEA,OAAcF,KAAAC,KAAAC,MAAAC,KAAAC,OADd,CAAAJ,EAAAG,EAAAF,EAAAE,IAIA3B,KAAAqC,GACAA,EAAAE,UAAA/B,KAAAH,MACAgC,EAAAC,YACAD,EAAAG,IACAhC,KAAAN,EAAAM,KAAAL,EAAAK,KAAAJ,OAAA,IAAAe,KAAAsB,IAAA,GAEAJ,EAAAgD,QAAsBlE,KAAAmE,MAAA,GAAA9E,KAAAJ,kBACtBiC,EAAAK,OACAL,EAAAC,YACAD,EAAAE,UAAA,QACAF,EAAAgD,KAAA,aACAhD,EAAAkD,qBAAiC/E,KAAA4E,aACtB5E,KAAAN,EAAAM,KAAAJ,OAAA,QACCI,KAAAL,EAAAK,KAAAJ,OAAA,EAAAI,KAAAP,KAAAF,KAAAK,OAAA,MACZiC,EAAAK,SCee,IAAA8C,EA5Df,MACAxF,YAAAC,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,GAAAC,EAAA,OAAA+E,EACAK,EAAAnF,EAAA,EAAAC,EAAA,GACAC,KAAAP,OACAO,KAAAN,IACAM,KAAAL,IACAK,KAAAJ,SACAI,KAAAH,QACAG,KAAAC,KAAAD,KAAAC,KAAAlB,KAAAiB,MACAA,KAAAE,KAAAF,KAAAE,KAAAnB,KAAAiB,MACAA,KAAAF,KACAE,KAAAD,KACAC,KAAA4E,WAAA,EACA5E,KAAAyB,KAAAzB,KAAA4E,QAAA5E,KAAAJ,QAAA,EACAI,KAAAuB,QAAA,EACAvB,KAAAiF,gBAAA,GAGAzF,OAAA4B,GACA,IAAA7B,EAAAS,KAAAP,KAAAF,KACA,MAAA2F,EAAAC,GAAA,EAAAxE,KAAAyE,KAAA,GAAAzE,KAAAC,IAAAuE,IACA,IAAAhB,EAAA5E,EAAAO,GAAAsB,EAAA,GAAA7B,EAAAQ,GAAAqB,EAAA,GACAgD,EAAApE,KAAAiF,aAAAC,EAAA3F,EAAAO,KAAAP,EAAAO,GAAA,EAAAqE,EAAA/C,EAAA,IACAiD,EAAArE,KAAAiF,aAAAC,EAAA3F,EAAAQ,KAAAR,EAAAQ,GAAA,EAAAoE,EAAA/C,EAAA,IACA7B,EAAAO,GAAAsE,EACA7E,EAAAQ,GAAAsE,EAGA7E,OACAQ,KAAAN,GAAAM,KAAAF,GACAE,KAAAL,GAAAK,KAAAD,GAGAP,WACA,MAAAD,EAAAS,KAAAP,KAAAF,KACAyB,EAAAzB,EAAAG,EAAAM,KAAAN,EACAuB,EAAA1B,EAAAI,EAAAK,KAAAL,EACAuB,EAAA,UACAC,EAAAR,KAAAuD,KAAAhD,GAEA,OAAgBF,KAAAC,KAAAC,MAAAC,KAAAC,OADhB,CAAAJ,EAAAG,EAAAF,EAAAE,IAIA3B,KAAAqC,GACAA,EAAAE,UAAA/B,KAAAH,MACAgC,EAAAC,YACAD,EAAAG,IACAhC,KAAAN,EAAAM,KAAAL,EAAAK,KAAAJ,OAAA,IAAAe,KAAAsB,IAAA,GAEAJ,EAAAK,OACAL,EAAAC,YACAD,EAAAE,UAAA,QACAF,EAAAgD,KAAA,aACAhD,EAAAkD,qBAAiC/E,KAAA4E,aACtB5E,KAAAN,EAAAM,KAAAJ,OAAA,QACCI,KAAAL,EAAAK,KAAAJ,OAAA,EAAAI,KAAAP,KAAAF,KAAAK,OAAA,MACZiC,EAAAK,SCUmB,IAAAzB,EAnEnB,MACAjB,YAAAC,EAAAC,EAAA,IAAAC,EAAA,IAAA0F,EAAA,IAAAC,EAAA,OACAtF,KAAAP,OACAO,KAAAN,IACAM,KAAAL,IACAK,KAAAqF,QACArF,KAAAsF,YACAtF,KAAAuF,SAAAvF,KAAAuF,SAAAxG,KAAAiB,MACAA,KAAAwF,SAAAxF,KAAAwF,SAAAzG,KAAAiB,MACAA,KAAAE,KAAAF,KAAAE,KAAAnB,KAAAiB,MACAA,KAAAqD,SAAA,EACArD,KAAAsD,SAAA,EAGA9D,OACAQ,KAAAN,GAAAM,KAAAF,GACAE,KAAAL,GAAAK,KAAAD,GAEAP,SAAAqC,GACA,IAAAnC,EAAAM,KAAAN,EACAC,EAAAK,KAAAL,EACAkC,EAAAC,YACAD,EAAAa,YAAA,OACAb,EAAA4C,OAAA/E,EAAAC,GACAkC,EAAA6C,OAAAhF,EAAAC,EAAA,IACAkC,EAAAc,SACAd,EAAAE,UAAA,MACAF,EAAA4C,OAAA/E,EAAAC,EAAA,IACAkC,EAAA6C,OAAAhF,EAAAC,EAAA,IACAkC,EAAA6C,OAAAhF,EAAA,GAAAC,EAAA,IACAkC,EAAA6C,OAAAhF,EAAAC,EAAA,IACAkC,EAAAK,OAEA1C,SAAAqC,GACA,IAAAnC,EAAcA,EAAAC,IAAA0F,SAAYrF,KAC1BT,EAAAS,KAAAP,KAAAF,KACAA,EAAAI,EAAAJ,EAAAK,QAAAD,EAAA,IAAAJ,EAAAQ,GAAA,IACA8B,EAAAC,YACAD,EAAAE,UAAA,QACAF,EAAA4C,OAAA/E,EAAA2F,EAAA,EAAA1F,GACAkC,EAAA6C,OAAAhF,EAAA2F,EAAA,EAAA1F,GACAkC,EAAA6C,OAAAhF,EAAA2F,EAAA,EAAA1F,EAAA,IACAkC,EAAA6C,OAAAhF,EAAA2F,EAAA,EAAA1F,EAAA,IACAkC,EAAA6C,OAAAhF,EAAA2F,EAAA,EAAA1F,GACAkC,EAAAK,QAMA1C,cACA,IAAAE,EAAiBA,EAAAC,IAAA0F,SAAYrF,KAC7BT,EAAAS,KAAAP,KAAAF,KACAiF,EAAAjF,EAAAI,EAAAJ,EAAAK,OAAAD,GACAJ,EAAAI,EAAA,EAAAJ,EAAAK,OAAAD,GACAgB,KAAAC,IAAArB,EAAAG,KAAA2F,EAAA,GACA9F,EAAAQ,GAAA,EAIA,OAHAyE,GACAjE,QAAAC,IAAA,mBAEAgE,ICqBe,IAAAiB,EAxEf,MAEAjG,YAAAkG,GACA1F,KAAA2F,OAAA3C,SAAAC,eAAA,eACAjD,KAAA6B,IAAA7B,KAAA2F,OAAAC,WAAA,MAEA5F,KAAAT,KAAA,IAAwBA,EAAIS,KAAA,SAC5BA,KAAA6F,cAAA,IAAiClB,EAAY3E,KAAA,wBAE7CA,KAAA8F,UAAA,IAA6B3C,EAASnD,KAAA,SACtCA,KAAAa,QAAA,CACAb,KAAA6F,cACA,IAAgBb,EAAYhF,KAAA,YAC5B,IAAgBgF,EAAYhF,KAAA,wBAG5BA,KAAAS,KAAA,IAAwBA,EAAIT,KAAA,SAC5BA,KAAA0B,UAAA,GACA1B,KAAA0B,UAAA,CACA,IAAgBC,EAAQ3B,KAAA,cAExBA,KAAAC,KAAAD,KAAAC,KAAAlB,KAAAiB,MACAA,KAAA+F,MAAA/F,KAAA+F,MAAAhH,KAAAiB,MAEAR,QAGA,IAAAwG,EAAAC,GAAAjG,KAAA8F,UAAAtC,YAAAxD,KAAAT,KAAA0G,GACAjG,KAAA2F,OAAAO,iBACA,YACAF,GAEAhG,KAAA2F,OAAAO,iBACA,QACAD,IAAkBjG,KAAA8F,UAAA1C,UAClBJ,SAAAC,eAAA,eAAAkD,oBAAA,YAAAH,KAGAI,sBAAApG,KAAAqG,QAAAtH,KAAAiB,OAEAR,KAAA8G,GACAtG,KAAAuG,YAAAD,GAGA9G,cACAQ,KAAAT,KAAAW,OAEAV,QAAAgH,GACA,MAAAC,EAAAD,EAAAxG,KAAA0G,SACA1G,KAAA2G,KAAAF,GACAzG,KAAAC,OACAD,KAAA0G,SAAAF,EAGAJ,sBAAApG,KAAAqG,QAAAtH,KAAAiB,OAEAR,OACA,IAAAqC,EAAA7B,KAAA6B,IACAA,EAAAwD,MAAA,KACAxD,EAAA+E,OAAA,IACA/E,EAAAE,UAAA,QACAF,EAAAgF,SAAA,aACA7G,KAAA8F,UAAA7F,KAAA4B,GACA7B,KAAAS,KAAA8E,SAAA1D,GACA7B,KAAAT,KAAAU,KAAA4B,GACA7B,KAAAa,QAAAC,QAAAC,KAAAd,KAAA4B,IACA7B,KAAA0B,UAAAZ,QAAAa,KAAA1B,KAAA4B,IACA7B,KAAAS,KAAA+E,SAAA3D,KC1EAmB,SAAAkD,iBAAA,mBAAAzC,IACA,IAAqBgC,EAAI,GACzBM","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\nclass Ball {\r\n    constructor(game, x = 0, y = 0, radius = 5, color = \"white\", vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.ax = 0;\r\n        this.ay = 0;\r\n        this.stopped = true;\r\n        this.logging = false;\r\n    }\r\n    \r\n    move(){\r\n        if(this.logging){\r\n            console.log(`ballx is ${this.x}`);\r\n            console.log(`bally is ${this.y}`);\r\n        }\r\n        if (this.game.hole.checkForWin()){\r\n            this.stopped = true;\r\n        }\r\n        if (!this.stopped){\r\n            this.x += this.vx;\r\n            this.y += this.vy;\r\n            this.vx += this.ax;\r\n            this.vy +=this.ay;\r\n            // console.log(`vy is ${this.vy}`);\r\n            // console.log(`ay is ${this.ay}`);\r\n            \r\n\r\n            if (Math.abs(this.vx) + Math.abs(this.vy) < 0.4\r\n            && Math.abs(this.ax) + Math.abs(this.ay) <0.1){\r\n                this.stopped = true;}\r\n            this.ax = 0;\r\n            this.ay = 0;\r\n            \r\n            this.game.planets.forEach(planet => {\r\n                const {dx, dy, dz2, dz, normal} = planet.ballData();\r\n                if (dz <=  this.radius + planet.radius){\r\n                    let error = this.radius + planet.radius - dz;\r\n                    this.x += error * normal[0];\r\n                    this.y += error * normal[1];\r\n                    this.ax = 0;\r\n                    this.ay = 0;\r\n                  if (planet.sticky || Math.abs(this.vx) + Math.abs(this.vy)<1 ){this.stopped = true;}\r\n                  else{planet.bounce(normal);}\r\n                    \r\n                }\r\n                else{\r\n                this.ax -= (1/dz2)*planet.mass * dx/dz * .2;\r\n                this.ay -= (1/dz2)*planet.mass * dy/dz * .2;\r\n                } \r\n        });\r\n        this.game.obstacles.forEach(obstacle => {\r\n            if (obstacle.checkForBall()){\r\n                obstacle.bounce();\r\n            }\r\n        })\r\n    };\r\n    \r\n    }\r\n    draw(ctx ) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          this.x, this.y, this.radius, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default Ball;","export const dottedArc = function(ctx, x, y, radius, theta0, theta1, color){\r\n    const a = .1;\r\n    let theta = theta1 - theta0;\r\n    let numPieces = 2* Math.ceil(.5*(theta/a - 1)) + 1;\r\n    let dTheta = theta/numPieces;\r\n    ctx.strokeStyle = color;\r\n    for (let i=0; i < numPieces; i++){ \r\n        ctx.beginPath();\r\n        if (i % 2 == 0){\r\n            ctx.arc(\r\n                x, y, radius, theta0 + i*dTheta, theta0+(i+1)*dTheta \r\n                );\r\n                ctx.stroke();\r\n            \r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const vectorAngle = function(vector){\r\n    const x = vector[0];\r\n    const y = vector[1];\r\n    if (x==0){\r\n        return y > 0 ? Math.PI/2 : -Math.PI/2;\r\n    }\r\n    \r\n    return x > 0 ? Math.atan(y/x) : Math.PI + Math.atan(y/x);\r\n    \r\n}","import {dottedArc, vectorAngle} from './helper';\r\nconst error = () => {let m = document.getElementById(\"game-canvas\");\r\nlet rect = m.getBoundingClientRect();\r\nreturn {x: rect.x, y: rect.y};\r\n}\r\n\r\nclass LaunchPad {\r\n   constructor(game, x = 0, y = 0, normal = [0,1], radius = 80,  color = \"white\"){\r\n      this.game = game;\r\n      this.x = x;\r\n      this.y = y;\r\n      this.normal = normal;\r\n      this.radius = radius;\r\n      this.color = color;\r\n      this.draw= this.draw.bind(this);\r\n      this.move = this.move.bind(this);\r\n      this.launch = this.launch.bind(this);\r\n      this.launchVx = 0;\r\n      this.launchVy=0;\r\n      this.normalAngle = vectorAngle(normal);\r\n      this.setVelocity = this.setVelocity.bind(this);\r\n\r\n  }\r\n\r\n  move(){\r\n      this.x += this.vx;\r\n      this.y += this.vy;\r\n  }\r\n  draw(ctx ) {\r\n   // ctx.beginPath();\r\n   // ctx.strokeStyle = this.color;\r\n   // ctx.arc(\r\n   //   this.x, this.y, this.radius, 0,  Math.PI\r\n   // );\r\n   // ctx.stroke();\r\n   //  \r\n   dottedArc(ctx, this.x, this.y, this.radius, \r\n      this.normalAngle - Math.PI/2, this.normalAngle + Math.PI/2, this.color)\r\n}\r\n\r\n    launch(){\r\n       this.game.ball.stopped = false;\r\n       this.game.ball.vx = this.launchVx;\r\n       this.game.ball.vy = this.launchVy;\r\n    }\r\n\r\n    setVelocity(ball, event){\r\n\r\n      const cursor = {x: event.clientX -error().x, y: event.clientY - error().y};\r\n      const dx = cursor.x - this.x;\r\n      const dy = cursor.y - this.y;\r\n      console.log(`this.normal is ${this.normal}`);\r\n      if (\r\n         dx**2 + dy**2 <= this.radius ** 2 &&\r\n          dx * this.normal[0] + dy * this.normal[1] >= 0\r\n          ) {\r\n            \r\n            \r\n            var coor = \"Choose Vector. X coords: \" + ball.x + \", Y coords: \" + ball.y;\r\n            coor += `Vector: [${dx}, ${dy}]`;\r\n            this.launchVx = dx/ 4;\r\n            this.launchVy = dy/ 4;\r\n            return true;\r\n         }   \r\n         return false;\r\n    }\r\n   }\r\n\r\n   export default LaunchPad;\r\n","\r\nclass Obstacle {\r\n    constructor(game, x1 = 0, y1 = 0, x2 = 100, y2 = 100, color = \"orange\"){\r\n        this.game = game;\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        let z = Math.sqrt((y1-y2)**2 + (x2 - x1)**2)\r\n        this.normal = [(y1 - y2)/z, (x2- x1)/z];\r\n        this.bounce = this.bounce.bind(this);\r\n        this.checkForBall = this.checkForBall.bind(this);\r\n    }\r\n    bounce(){\r\n        let ball = this.game.ball;\r\n        let normal = this.normal;\r\n        let vDotNormal = ball.vx * normal[0] + ball.vy * normal[1];\r\n        let new_vx = ball.vx - 2 * vDotNormal * normal[0];\r\n        let new_vy = ball.vy - 2 * vDotNormal * normal[1];\r\n        ball.vx = new_vx;\r\n        ball.vy = new_vy;\r\n    }\r\n    checkForBall(){\r\n        \r\n        let ball = this.game.ball;\r\n        ball.logging = false;\r\n        let {x1, x2, y1, y2} = this;\r\n        let {x, y, radius} = ball;\r\n        if (x - radius > Math.max(x1, x2) || x + radius < Math.min(x1, x2)){\r\n            return false;\r\n        }\r\n        if (y - radius > Math.max(y1, y2) || y + radius < Math.min(y1, y2)){\r\n            return false;\r\n        }\r\n        let d = ((y2-y1)*x - (x2-x1)*y+x2*y1-y2*x1)/Math.sqrt((y2-y1)**2 + (x2-x1)**2);\r\n        let result = -radius <= d && radius >= d;\r\n        if (result) {\r\n        return result;\r\n        }\r\n    }\r\n    move(){\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n    }\r\n    draw(ctx ) {\r\n        ctx.beginPath();\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.x1, this.y1);\r\n        ctx.lineTo(this.x2, this.y2);\r\n        ctx.strokeStyle = this.color;\r\n        ctx.stroke();\r\n      };\r\n}\r\n\r\nexport default Obstacle;","\r\nclass StickyPlanet {\r\n    constructor(game, x = 0, y = 0, radius = 10, color = \"grey\", density, vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.density = density || 1;\r\n        this.mass = this.density * this.radius**3;\r\n        this.sticky = true;\r\n    }\r\n\r\n    move(){\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n    }\r\n\r\n    ballData(){\r\n      const ball = this.game.ball;\r\n      const dx = ball.x - this.x;\r\n      const dy = ball.y - this.y;\r\n      const dz2 = ((dx)**2 + (dy)**2);\r\n      const dz = Math.sqrt(dz2);\r\n      const normal = [dx/dz, dy/dz];\r\n      return {dx, dy, dz2, dz, normal}\r\n  }\r\n\r\n    draw(ctx ) {\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          this.x, this.y, this.radius, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.font = `${Math.floor(.9 * this.radius)}px Arial`;\r\n        ctx.fill();\r\n        ctx.beginPath();\r\n        ctx.fillStyle = \"white\"\r\n        ctx.font = `${21}px Arial`;\r\n        ctx.fillText(`Density: ${this.density}`, \r\n        `${this.x -  this.radius - 10}`,\r\n         `${this.y +  this.radius + this.game.ball.radius * 2 +18}`);\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default StickyPlanet;","\r\nclass BouncyPlanet {\r\n    constructor(game, x = 0, y = 0, radius = 10, color = \"pink\", density, \r\n    bounce_coeff, vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.density = density || 1;\r\n        this.mass = this.density * this.radius**3;\r\n        this.sticky = false;\r\n        this.bounce_coeff = bounce_coeff || .9;\r\n    }\r\n\r\n    bounce(normal){\r\n        let ball = this.game.ball;\r\n        const dampen = vel => 1 - Math.exp(-.5*Math.abs(vel));\r\n        let vDotNormal = ball.vx * normal[0] + ball.vy * normal[1];\r\n        let new_vx = this.bounce_coeff*(dampen(ball.vx))*(ball.vx - 2 * vDotNormal * normal[0]);\r\n        let new_vy = this.bounce_coeff*(dampen(ball.vy))*(ball.vy - 2 * vDotNormal * normal[1]);\r\n        ball.vx = new_vx;\r\n        ball.vy = new_vy;\r\n    }\r\n    \r\n    move(){\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n    }\r\n\r\n    ballData(){\r\n        const ball = this.game.ball;\r\n        const dx = ball.x - this.x;\r\n        const dy = ball.y - this.y;\r\n        const dz2 = ((dx)**2 + (dy)**2);\r\n        const dz = Math.sqrt(dz2);\r\n        const normal = [dx/dz, dy/dz];\r\n        return {dx, dy, dz2, dz, normal}\r\n    }\r\n\r\n    draw(ctx ) {\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          this.x, this.y, this.radius, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.fill();\r\n        ctx.beginPath();\r\n        ctx.fillStyle = \"white\"\r\n        ctx.font = `${21}px Arial`;\r\n        ctx.fillText(`Density: ${this.density}`, \r\n        `${this.x -  this.radius - 10}`,\r\n         `${this.y +  this.radius + this.game.ball.radius * 2 +18}`);\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default BouncyPlanet;","class Hole {\r\n    constructor(game, x = 600, y = 500, width = 100,  flagColor = \"red\"){\r\n       this.game = game;\r\n       this.x = x;\r\n       this.y = y;\r\n       this.width = width;\r\n       this.flagColor = flagColor;\r\n       this.drawFlag= this.drawFlag.bind(this);\r\n       this.drawHole= this.drawHole.bind(this);\r\n       this.move = this.move.bind(this);\r\n       this.launchVx = 0;\r\n       this.launchVy=0;\r\n   }\r\n \r\n   move(){\r\n       this.x += this.vx;\r\n       this.y += this.vy;\r\n   }\r\n   drawFlag(ctx ) {\r\n       let x = this.x;\r\n       let y = this.y;\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = \"gold\";\r\n      ctx.moveTo(x, y);\r\n      ctx.lineTo(x, y - 50)\r\n       ctx.stroke();\r\n       ctx.fillStyle = \"red\";\r\n       ctx.moveTo(x, y-50);\r\n       ctx.lineTo(x,y-70);\r\n       ctx.lineTo(x+ 25, y-60);\r\n       ctx.lineTo(x, y-50);\r\n       ctx.fill();\r\n     }\r\n     drawHole(ctx) {\r\n         let {x, y, width} = this;\r\n         let ball = this.game.ball;\r\n         if (ball.y - ball.radius <= y +20 && ball.vy > 0){\r\n             ctx.beginPath();\r\n             ctx.fillStyle = \"black\";\r\n             ctx.moveTo(x - width/2, y);\r\n             ctx.lineTo(x + width/2, y);\r\n             ctx.lineTo(x + width/2, y + 30);\r\n             ctx.lineTo(x - width/2, y + 30);\r\n             ctx.lineTo(x - width/2, y );\r\n             ctx.fill();\r\n         }\r\n         \r\n\r\n         \r\n        }\r\n        checkForWin(){\r\n            let {x, y, width} = this;\r\n            let ball = this.game.ball;\r\n            let result = ball.y -ball.radius> y \r\n            && ball.y-5*ball.radius < y\r\n            && Math.abs(ball.x - x) < width/2\r\n            && ball.vy >0;\r\n            if (result){\r\n                console.log('won, supposedly');\r\n            }\r\n            return result;\r\n        }\r\n \r\n    \r\n     \r\n    }\r\n \r\n    export default Hole;\r\n ","import Ball from './ball';\r\nimport LaunchPad from './launchpad';\r\nimport Obstacles from './obstacles';\r\nimport Planets from './planets';\r\nimport StickyPlanet from './Sticky_planet';\r\nimport Obstacle from './obstacle';\r\nimport BouncyPlanet from './bouncy_planet';\r\nimport Hole from './hole';\r\n\r\nclass Game {\r\n\r\n    constructor(level) {\r\n        this.canvas = document.getElementById(\"game-canvas\");\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        \r\n        this.ball = new Ball(this, 300, 100);\r\n        this.currentPlanet = new StickyPlanet(this, 300, 70, 25, \"#27753a\", .4);\r\n\r\n        this.launchPad = new LaunchPad(this, 300, 100);\r\n        this.planets = [\r\n            this.currentPlanet,\r\n            new BouncyPlanet(this, 300, 400, 35), \r\n            new BouncyPlanet(this, 620, 250, 15, \"orange\", 3),\r\n            \r\n        ]\r\n        this.hole = new Hole(this, 200, 200);\r\n        this.obstacles=[];\r\n        this.obstacles = [\r\n            new Obstacle(this, 90, 0, 90, 900)   \r\n        ];\r\n        this.draw = this.draw.bind(this);\r\n        this.start = this.start.bind(this);\r\n    }\r\n    start() {\r\n        // this.bindKeyHandlers();\r\n        // this.lastTime = 0;\r\n        let func = e => this.launchPad.setVelocity(this.ball, e);\r\n        this.canvas.addEventListener(\r\n            'mousemove', \r\n        func\r\n        )\r\n        this.canvas.addEventListener(\r\n            \"click\",\r\n            e => {if (this.launchPad.launch()){\r\n                document.getElementById(\"game-canvas\").removeEventListener('mousemove', func);\r\n            }\r\n            })\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n    step(delta) {\r\n        this.moveObjects(delta);\r\n    }\r\n\r\n    moveObjects() {\r\n        this.ball.move();\r\n    }\r\n    animate(time) {\r\n        const timeDelta = time - this.lastTime;\r\n        this.step(timeDelta);\r\n        this.draw();\r\n        this.lastTime = time;\r\n\r\n        // every call to animate requests causes another call to animate\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n    draw() {\r\n        let ctx=this.ctx;\r\n        ctx.width = 1200;\r\n        ctx.height = 600;\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(0, 0, 1000, 600);\r\n        this.launchPad.draw(ctx);\r\n        this.hole.drawFlag(ctx);\r\n        this.ball.draw(ctx);\r\n        this.planets.forEach(planet => planet.draw(ctx));\r\n        this.obstacles.forEach(obstacle => obstacle.draw(ctx));\r\n        this.hole.drawHole(ctx);\r\n    }\r\n\r\n}\r\n\r\nexport default Game;","import Game from './game';\r\n\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n    const game = new Game(1);\r\n    game.start();\r\n});\r\n"],"sourceRoot":""}