{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/helper.js","webpack:///./src/launchpad.js","webpack:///./src/ball.js","webpack:///./src/Sticky_planet.js","webpack:///./src/obstacle.js","webpack:///./src/hole.js","webpack:///./src/levels/level1.js","webpack:///./src/levels/level2.js","webpack:///./src/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","dottedArc","ctx","x","y","radius","theta0","theta1","color","theta","numPieces","Math","ceil","dTheta","strokeStyle","beginPath","arc","stroke","vectorAngle","vector","PI","atan","intervalsIntersect","interval1","interval2","a1","b1","a2","b2","launchpad_error","rect","document","getElementById","getBoundingClientRect","launchpad","[object Object]","game","normal","this","draw","move","launch","launchVx","launchVy","normalAngle","setVelocity","arrowTip","vx","vy","setLineDash","moveTo","lineTo","drawArrowBits","fillStyle","font","fillText","sqrt","toFixed","fill","cos","sin","ball","stopped","event","cursor","clientX","clientY","dx","dy","src_ball","ax","ay","logging","console","log","abs","planets","forEach","planet","dz2","dz","ballData","error","sticky","currentPlanet","launchPad","setupLaunchPad","bounce","mass","obstacles","obstacle","checkForBall","Sticky_planet","density","floor","x1","y1","x2","y2","z","vDotNormal","new_vx","new_vy","hole","width","flagColor","drawFlag","drawHole","checkForWin","level1","invSqrt","level2","src_game","canvas","getContext","levels","currentLevelNumber","initiateLevel","length","victoryMessage","level","requestAnimationFrame","animate","func","e","onmousemove","addEventListener","removeEventListener","delta","moveObjects","time","timeDelta","lastTime","step","height","fillRect"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const dottedArc = function(ctx, x, y, radius, theta0, theta1, color){\r\n    const a = .1;\r\n    let theta = theta1 - theta0;\r\n    let numPieces = 2* Math.ceil(.5*(theta/a - 1)) + 1;\r\n    let dTheta = theta/numPieces;\r\n    ctx.strokeStyle = color;\r\n    for (let i=0; i < numPieces; i++){ \r\n        ctx.beginPath();\r\n        if (i % 2 == 0){\r\n            ctx.arc(\r\n                x, y, radius, theta0 + i*dTheta, theta0+(i+1)*dTheta \r\n                );\r\n                ctx.stroke();\r\n            \r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const vectorAngle = function(vector){\r\n    const x = vector[0];\r\n    const y = vector[1];\r\n    if (x==0){\r\n        return y > 0 ? Math.PI/2 : -Math.PI/2;\r\n    }\r\n    \r\n    return x > 0 ? Math.atan(y/x) : Math.PI + Math.atan(y/x);\r\n    \r\n}\r\n\r\n\r\nexport const intervalsIntersect = function (interval1, interval2){\r\n    let [a1, b1] = interval1;\r\n    let [a2, b2] = interval2;\r\n    return (b2 - a1)*(a2-a1) <= 0 ||  (b2 - b1)*(a2-b1) <= 0\r\n    || (b1 - a2) * (a1-a2) <=0 || (b1 - b2) * (a1-b2) <=0;\r\n}","import {dottedArc, vectorAngle} from './helper';\r\nconst error = () => {let m = document.getElementById(\"game-canvas\");\r\nlet rect = m.getBoundingClientRect();\r\nreturn {x: rect.x, y: rect.y};\r\n}\r\n\r\nclass LaunchPad {\r\n   constructor(game, x = 0, y = 0, normal = [0,1], radius = 100,  color = \"white\"){\r\n      this.game = game;\r\n      this.x = x;\r\n      this.y = y;\r\n      this.normal = normal;\r\n      this.radius = radius;\r\n      this.color = color;\r\n      this.draw= this.draw.bind(this);\r\n      this.move = this.move.bind(this);\r\n      this.launch = this.launch.bind(this);\r\n      this.launchVx = 0;\r\n      this.launchVy=0;\r\n      this.normalAngle = vectorAngle(normal);\r\n      this.setVelocity = this.setVelocity.bind(this);\r\n      this.arrowTip = {x: null, y: null};\r\n\r\n  }\r\n\r\n  move(){\r\n      this.x += this.vx;\r\n      this.y += this.vy;\r\n  }\r\n  draw(ctx ) {\r\n   // ctx.beginPath();\r\n   // ctx.strokeStyle = this.color;\r\n   // ctx.arc(\r\n   //   this.x, this.y, this.radius, 0,  Math.PI\r\n   // );\r\n   // ctx.stroke();\r\n   //  \r\n   dottedArc(ctx, this.x, this.y, this.radius, \r\n      this.normalAngle - Math.PI/2, this.normalAngle + Math.PI/2, this.color);\r\n   if (this.arrowTip.x !== null){\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = \"white\";\r\n      ctx.setLineDash([5,5]);\r\n     ctx.moveTo(this.x, this.y);\r\n     ctx.lineTo(this.arrowTip.x, this.arrowTip.y)\r\n     ctx.stroke();\r\n     this.drawArrowBits(ctx);\r\n     ctx.beginPath();\r\n        ctx.fillStyle = \"purple\"\r\n        ctx.font = `${21}px Arial`;\r\n        ctx.fillText(`Initial speed: ${Math.sqrt(this.launchVx **2 + this.launchVy **2).toFixed(2)}`, \r\n        `${0.5 * (this.x + this.arrowTip.x)}`,\r\n         `${0.5 * (this.y + this.arrowTip.y)}`);\r\n        ctx.fill();\r\n     \r\n   }\r\n}\r\n   drawArrowBits (ctx) {\r\n      let {x, y, arrowTip} = this;\r\n      const theta = vectorAngle([arrowTip.x - x, arrowTip.y -y] );\r\n      ctx.setLineDash([]);\r\n      ctx.beginPath();\r\n      ctx.moveTo(arrowTip.x, arrowTip.y);\r\n      ctx.lineTo(\r\n         arrowTip.x + 12 * Math.cos(theta + 3*Math.PI/4), \r\n         arrowTip.y + 12* Math.sin(theta + 3*Math.PI/4));\r\n      ctx.moveTo(arrowTip.x, arrowTip.y);\r\n      ctx.lineTo(\r\n         arrowTip.x + 12 * Math.cos(theta - 3*Math.PI/4), \r\n         arrowTip.y + 12* Math.sin(theta - 3*Math.PI/4));\r\n      ctx.stroke();\r\n\r\n   }\r\n\r\n    launch(){\r\n       if (this.arrowTip.x === null){\r\n          return false;\r\n       }\r\n       this.game.ball.stopped = false;\r\n       this.game.ball.vx = this.launchVx;\r\n       this.game.ball.vy = this.launchVy;\r\n       return true;\r\n    }\r\n\r\n    setVelocity(event){\r\n\r\n      const cursor = {x: event.clientX -error().x, y: event.clientY - error().y};\r\n      const dx = cursor.x - this.x;\r\n      const dy = cursor.y - this.y;\r\n      if (\r\n         dx**2 + dy**2 <= this.radius ** 2 &&\r\n          dx * this.normal[0] + dy * this.normal[1] >= 0\r\n          ) {\r\n             this.arrowTip.x = cursor.x;\r\n             this.arrowTip.y = cursor.y;\r\n\r\n            this.launchVx = dx/ 4;\r\n            this.launchVy = dy/ 4;\r\n           \r\n            \r\n         }   \r\n         else {this.arrowTip.x = null;}\r\n    }\r\n   }\r\n\r\n   export default LaunchPad;\r\n","import LaunchPad from \"./launchpad\";\r\n\r\nclass Ball {\r\n    constructor(game, x = 0, y = 0, radius = 5, color = \"white\", vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.ax = 0;\r\n        this.ay = 0;\r\n        this.stopped = true;\r\n        this.logging = false;\r\n    }\r\n    \r\n    move(){\r\n        if(this.logging){\r\n            console.log(`ballx is ${this.x}`);\r\n            console.log(`bally is ${this.y}`);\r\n        }\r\n        if (this.stopped){\r\n            console.log(\"stopped\");\r\n        }\r\n        \r\n        if (!this.stopped){\r\n            this.x += this.vx;\r\n            this.y += this.vy;\r\n            this.vx += this.ax;\r\n            this.vy +=this.ay;\r\n            \r\n\r\n            if (Math.abs(this.vx) + Math.abs(this.vy) < 0.4\r\n            && Math.abs(this.ax) + Math.abs(this.ay) <0.1){\r\n                this.stopped = true;}\r\n            this.ax = 0;\r\n            this.ay = 0;\r\n            \r\n            this.game.planets.forEach(planet => {\r\n                const {dx, dy, dz2, dz, normal} = planet.ballData();\r\n                if (dz <=  this.radius + planet.radius){\r\n                    let error = this.radius + planet.radius - dz;\r\n                    this.x += error * normal[0];\r\n                    this.y += error * normal[1];\r\n                    this.ax = 0;\r\n                    this.ay = 0;\r\n                  if (planet.sticky || Math.abs(this.vx) + Math.abs(this.vy)<1 ){\r\n                      this.stopped = true;\r\n                    this.game.currentPlanet = planet;\r\n                    this.game.launchPad = new LaunchPad(this.game, this.x, this.y, normal);\r\n                    this.game.setupLaunchPad();\r\n                }\r\n                  else{planet.bounce(normal);}\r\n                    \r\n                }\r\n                else{\r\n                this.ax -= (1/dz2)*planet.mass * dx/dz * .2;\r\n                this.ay -= (1/dz2)*planet.mass * dy/dz * .2;\r\n                } \r\n        });\r\n        this.game.obstacles.forEach(obstacle => {\r\n            if (obstacle.checkForBall()){\r\n                obstacle.bounce();\r\n            }\r\n        })\r\n    };\r\n    \r\n    }\r\n    draw(ctx ) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          this.x, this.y, this.radius, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default Ball;","\r\nclass StickyPlanet {\r\n    constructor(game, x = 0, y = 0, radius = 10, color = \"grey\", density, vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.density = density || 1;\r\n        this.mass = this.density * this.radius**3;\r\n        this.sticky = true;\r\n    }\r\n\r\n    move(){\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n    }\r\n\r\n    ballData(){\r\n      const ball = this.game.ball;\r\n      const dx = ball.x - this.x;\r\n      const dy = ball.y - this.y;\r\n      const dz2 = ((dx)**2 + (dy)**2);\r\n      const dz = Math.sqrt(dz2);\r\n      const normal = [dx/dz, dy/dz];\r\n      return {dx, dy, dz2, dz, normal}\r\n  }\r\n\r\n    draw(ctx ) {\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          this.x, this.y, this.radius, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.font = `${Math.floor(.9 * this.radius)}px Arial`;\r\n        ctx.fill();\r\n        ctx.beginPath();\r\n        ctx.fillStyle = \"#3e78ad\"\r\n        ctx.font = `${14}px Arial`;\r\n        ctx.fillText(`Escape vel. approx. ${(this.radius * this.density **.45 *.504 ).toFixed(2)}`, \r\n        `${this.x +  this.radius + 2}`,\r\n         `${this.y + .5 * this.radius}`);\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default StickyPlanet;","import {intervalsIntersect} from './helper';\r\nclass Obstacle {\r\n    constructor(game, x1 = 0, y1 = 0, x2 = 100, y2 = 100, color = \"orange\"){\r\n        this.game = game;\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        let z = Math.sqrt((y1-y2)**2 + (x2 - x1)**2)\r\n        this.normal = [(y1 - y2)/z, (x2- x1)/z];\r\n        this.bounce = this.bounce.bind(this);\r\n        this.checkForBall = this.checkForBall.bind(this);\r\n    }\r\n    bounce(){\r\n        let ball = this.game.ball;\r\n        let normal = this.normal;\r\n        let vDotNormal = ball.vx * normal[0] + ball.vy * normal[1];\r\n        let new_vx = ball.vx - 2 * vDotNormal * normal[0];\r\n        let new_vy = ball.vy - 2 * vDotNormal * normal[1];\r\n        ball.vx = new_vx;\r\n        ball.vy = new_vy;\r\n    }\r\n    checkForBall(){\r\n        \r\n        let ball = this.game.ball;\r\n        ball.logging = false;\r\n        let {x1, x2, y1, y2} = this;\r\n        let normal = [y1-y2, x2-x1]\r\n        let {x, y, radius, vx, vy} = ball;\r\n        // if (x - radius > Math.max(x1, x2) || x + radius < Math.min(x1, x2)){\r\n        //     return false;\r\n        // }\r\n        // if (y - radius > Math.max(y1, y2) || y + radius < Math.min(y1, y2)){\r\n        //     return false;\r\n        // }\r\n        // let d = ((y2-y1)*x - (x2-x1)*y+x2*y1-y2*x1)/Math.sqrt((y2-y1)**2 + (x2-x1)**2);\r\n        // let result = -1.5*radius <= d && 1.5*radius >= d;\r\n        // if (result) {\r\n        // return result;\r\n        // }\r\n        let perpComponent = normal[0] * (x - x1) + normal[1]*(y-y1);\r\n        let nextPerpComponent = normal[0] * (x + vx - x1) + normal[1]*(y+vy-y1);\r\n        return perpComponent * nextPerpComponent <= 0 \r\n        && intervalsIntersect([x, x+vx], [x1, x2]) \r\n        && intervalsIntersect([y, y+vy], [y1, y2]);\r\n    }\r\n    move(){\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n    }\r\n    draw(ctx ) {\r\n        ctx.setLineDash([]);\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.x1, this.y1);\r\n        ctx.lineTo(this.x2, this.y2);\r\n        ctx.strokeStyle = this.color;\r\n        ctx.stroke();\r\n      };\r\n}\r\n\r\nexport default Obstacle;","class Hole {\r\n    constructor(game, x = 600, y = 500, width = 100,  flagColor = \"red\"){\r\n       this.game = game;\r\n       this.x = x;\r\n       this.y = y;\r\n       this.width = width;\r\n       this.flagColor = flagColor;\r\n       this.drawFlag= this.drawFlag.bind(this);\r\n       this.drawHole= this.drawHole.bind(this);\r\n       this.move = this.move.bind(this);\r\n       this.launchVx = 0;\r\n       this.launchVy=0;\r\n       this.checkForWin=this.checkForWin.bind(this);\r\n   }\r\n \r\n   move(){\r\n       this.x += this.vx;\r\n       this.y += this.vy;\r\n   }\r\n   drawFlag(ctx ) {\r\n       let x = this.x;\r\n       let y = this.y;\r\n       ctx.setLineDash([]);\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = \"gold\";\r\n      ctx.moveTo(x, y);\r\n      ctx.lineTo(x, y - 50)\r\n       ctx.stroke();\r\n       ctx.fillStyle = \"red\";\r\n       ctx.moveTo(x, y-50);\r\n       ctx.lineTo(x,y-70);\r\n       ctx.lineTo(x+ 25, y-60);\r\n       ctx.lineTo(x, y-50);\r\n       ctx.fill();\r\n     }\r\n     drawHole(ctx) {\r\n         let {x, y, width} = this;\r\n         let ball = this.game.ball;\r\n         if (ball.y - ball.radius <= y +20 && ball.vy > 0){\r\n             ctx.beginPath();\r\n             ctx.fillStyle = \"black\";\r\n             ctx.moveTo(x - width/2, y);\r\n             ctx.lineTo(x + width/2, y);\r\n             ctx.lineTo(x + width/2, y + 30);\r\n             ctx.lineTo(x - width/2, y + 30);\r\n             ctx.lineTo(x - width/2, y );\r\n             ctx.fill();\r\n         }\r\n         \r\n\r\n         \r\n        }\r\n        checkForWin(){\r\n            let {x, y, width} = this;\r\n            let ball = this.game.ball;\r\n            let result = ball.y -ball.radius> y \r\n            && ball.y-5*ball.radius < y\r\n            && Math.abs(ball.x - x) < width/2\r\n            && ball.vy >0;\r\n            \r\n            return result;\r\n        }\r\n \r\n    \r\n     \r\n    }\r\n \r\n    export default Hole;\r\n ","import Ball from '../ball';\r\nimport LaunchPad from '../launchpad';\r\nimport StickyPlanet from '../Sticky_planet';\r\nimport Obstacle from '../obstacle';\r\nimport BouncyPlanet from '../bouncy_planet';\r\nimport Hole from '../hole';\r\n\r\nclass Level1 {\r\n    constructor(game){\r\n        const invSqrt = 1/Math.sqrt(2);\r\n    this.ball = new Ball(game, 100 + (25 + 5)*invSqrt, 40 + (25 + 5)*invSqrt);\r\n        this.currentPlanet = new StickyPlanet(game, 100, 40, 25, \"#27753a\", 1);\r\n\r\n        this.launchPad = new LaunchPad(game, this.ball.x, this.ball.y, [invSqrt, invSqrt]);\r\n        this.planets = [\r\n            this.currentPlanet,\r\n            // new StickyPlanet(game, 300, 400, 35), \r\n            new StickyPlanet(game, 670, 490, 25, \"orange\", 3),\r\n            \r\n        ]\r\n        this.hole = new Hole(game, 670, 450);\r\n        this.obstacles=[];\r\n        this.obstacles = [\r\n            // new Obstacle(game, 90, 0, 90, 900)   ,\r\n            new Obstacle(game, 350, 260, 665, 420),\r\n            new Obstacle(game, 360, 220, 790, 470)\r\n\r\n        ]\r\n        }\r\n}\r\n\r\nexport default Level1;","import Ball from '../ball';\r\nimport LaunchPad from '../launchpad';\r\nimport StickyPlanet from '../Sticky_planet';\r\nimport Obstacle from '../obstacle';\r\nimport BouncyPlanet from '../bouncy_planet';\r\nimport Hole from '../hole';\r\n\r\nclass Level2 {\r\n    constructor(game){\r\n    this.ball = new Ball(game, 300, 100);\r\n        this.currentPlanet = new StickyPlanet(game, 300, 70, 25, \"#27753a\", .4);\r\n\r\n        this.launchPad = new LaunchPad(game, 300, 100);\r\n        this.planets = [\r\n            this.currentPlanet,\r\n            new StickyPlanet(game, 300, 400, 35), \r\n            new StickyPlanet(game, 520, 250, 30, \"orange\"),\r\n            new StickyPlanet(game, 580, 450, 30, \"orange\"),\r\n\r\n            \r\n        ]\r\n        this.hole = new Hole(game, 700, 500);\r\n        this.obstacles=[];\r\n        this.obstacles = [\r\n            new Obstacle(game, 90, 0, 90, 900)   ,\r\n            new Obstacle(game, 600, 40, 850, 300)\r\n        ]\r\n        }\r\n}\r\n\r\nexport default Level2;","import Ball from './ball';\r\nimport LaunchPad from './launchpad';\r\nimport StickyPlanet from './Sticky_planet';\r\nimport Obstacle from './obstacle';\r\nimport BouncyPlanet from './bouncy_planet';\r\nimport Hole from './hole';\r\nimport Level1 from './levels/level1';\r\nimport Level2 from './levels/level2';\r\n\r\nclass Game {\r\n\r\n    constructor() {\r\n        this.canvas = document.getElementById(\"game-canvas\");\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        this.levels = [null, Level1, Level2];\r\n        this.currentLevelNumber = 0;\r\n       \r\n        // this.ball = new Ball(this, 300, 100);\r\n        // this.currentPlanet = new StickyPlanet(this, 300, 70, 25, \"#27753a\", .4);\r\n\r\n        // this.launchPad = new LaunchPad(this, 300, 100);\r\n        // this.planets = [\r\n        //     this.currentPlanet,\r\n        //     new StickyPlanet(this, 300, 400, 35), \r\n        //     new StickyPlanet(this, 520, 250, 30, \"orange\"),\r\n        //     new StickyPlanet(this, 620, 450, 30, \"orange\"),\r\n\r\n            \r\n        // ]\r\n        // this.hole = new Hole(this, 700, 600);\r\n        // this.obstacles=[];\r\n        // this.obstacles = [\r\n        //     new Obstacle(this, 90, 0, 90, 900)   ,\r\n        //     new Obstacle(this, 600, 40, 850, 300)\r\n        // ];\r\n        \r\n\r\n        this.draw = this.draw.bind(this);\r\n        this.initiateLevel = this.initiateLevel.bind(this);\r\n        this.setupLaunchPad = this.setupLaunchPad.bind(this);\r\n    }\r\n\r\n    initiateLevel() {\r\n\r\n        this.currentLevelNumber += 1;\r\n        if (this.currentLevelNumber >= this.levels.length){\r\n            this.ball.stopped = true;\r\n            return this.victoryMessage();\r\n        }\r\n        const level = new this.levels[this.currentLevelNumber](this);\r\n        this.ball = level.ball;\r\n        this.currentPlanet = level.currentPlanet;\r\n        this.launchPad = level.launchPad;\r\n        this.planets=level.planets;\r\n        this.hole = level.hole;\r\n        this.obstacles = level.obstacles;\r\n        this.setupLaunchPad();\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n\r\n    victoryMessage(){\r\n        const ctx = this.ctx;\r\n        ctx.beginPath();\r\n        ctx.fillStyle = \"white\"\r\n        ctx.font = `${30}px Arial`;\r\n        ctx.fillText('You win!', \r\n       400, 400);\r\n        ctx.fill();\r\n    }\r\n    \r\n    setupLaunchPad(){\r\n        let func = e => this.launchPad.setVelocity(e);\r\n        this.canvas.onmousemove= func;\r\n        \r\n        this.canvas.addEventListener(\r\n            \"click\",\r\n            e => {if (this.launchPad.launch()){\r\n                document.getElementById(\"game-canvas\").removeEventListener('mousemove', func);\r\n            }\r\n            })\r\n    }\r\n    \r\n    step(delta) {\r\n        this.moveObjects(delta);\r\n    }\r\n\r\n    moveObjects() {\r\n        this.ball.move();\r\n    }\r\n    animate(time) {\r\n        if (this.hole.checkForWin()){\r\n            this.ball.stopped = true;\r\n            return this.initiateLevel();\r\n        }\r\n        const timeDelta = time - this.lastTime;\r\n        this.step(timeDelta);\r\n        this.draw();\r\n        this.lastTime = time;\r\n\r\n        // every call to animate requests causes another call to animate\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n    draw() {\r\n        let ctx=this.ctx;\r\n        ctx.width = 1200;\r\n        ctx.height = 600;\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(0, 0, 1000, 600);\r\n        this.launchPad.draw(ctx);\r\n        this.hole.drawFlag(ctx);\r\n        this.ball.draw(ctx);\r\n        this.obstacles.forEach(obstacle => obstacle.draw(ctx));\r\n        this.hole.drawHole(ctx);\r\n        this.planets.forEach(planet => planet.draw(ctx));\r\n    }\r\n\r\n}\r\n\r\nexport default Game;","import Game from './game';\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n    const game = new Game();\r\n    game.initiateLevel();\r\n});\r\n"],"sourceRoot":""}