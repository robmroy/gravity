{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/helper.js","webpack:///./src/launchpad.js","webpack:///./src/ball.js","webpack:///./src/Sticky_planet.js","webpack:///./src/obstacle.js","webpack:///./src/hole.js","webpack:///./src/start_button.js","webpack:///./src/levels/level1.js","webpack:///./src/levels/level2.js","webpack:///./src/timedMessage.js","webpack:///./src/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","dottedArc","ctx","x","y","radius","theta0","theta1","color","theta","numPieces","Math","ceil","dTheta","strokeStyle","beginPath","arc","stroke","vectorAngle","vector","PI","atan","vectorLength","sqrt","intervalsIntersect","interval1","interval2","a1","b1","a2","b2","launchpad_error","rect","document","getElementById","getBoundingClientRect","launchpad","[object Object]","game","normal","this","draw","move","launch","arrowVector","updatePolar","updateArrowTip","updateLaunchVelocity","launchVx","launchVy","normalAngle","setVelocity","arrowTip","arrowAngle","arrowLength","vx","vy","cos","sin","setLineDash","moveTo","lineTo","drawArrowBits","fillStyle","font","fillText","toFixed","fill","ball","stopped","event","cursor","clientX","clientY","dx","dy","callback","keyCode","includes","src_ball","playSpeed","ax","ay","prevx","prevy","corners","logging","console","log","abs","planets","forEach","planet","dz2","dz","ballData","error","sticky","currentPlanet","launchPad","setupLaunchPad","bounce","mass","obstacles","obstacle","checkForBall","Sticky_planet","density","floor","x1","y1","x2","y2","z","vDotNormal","new_vx","new_vy","hole","width","drawFlag","drawHole","start_button_error","start_button","clickHandler","canvas","addEventListener","visible","removeEventListener","level1","invSqrt","startButton","level2","timedMessage","text","duration","src_game","setAttribute","getContext","levels","currentLevelNumber","initiateLevel","num","fractional","setPlaySpeed","frameCount","playSpeedMessage","length","victoryMessage","level","requestAnimationFrame","animate","setVelocityWithMouse","e","launchBallWithMouse","keyDownHandler","setVelocityByArrowKeys","delta","moveObjects","checkRectangle","restartLevel","time","checkForWin","timeDelta","lastTime","step","height","fillRect","residue"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,yCClFO,MAAAC,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEP,IAAAC,EAAAF,EAAAD,EACAI,EAAA,EAAAC,KAAAC,KAAA,IAAAH,EAFA,GAEA,MACAI,EAAAJ,EAAAC,EACAR,EAAAY,YAAAN,EACA,QAAAvC,EAAA,EAAiBA,EAAAyC,EAAezC,IAChCiC,EAAAa,YACA9C,EAAA,OACAiC,EAAAc,IACAb,EAAAC,EAAAC,EAAAC,EAAArC,EAAA4C,EAAAP,GAAArC,EAAA,GAAA4C,GAEAX,EAAAe,WAOOC,EAAA,SAAAC,GACP,MAAAhB,EAAAgB,EAAA,GACAf,EAAAe,EAAA,GACA,UAAAhB,EACAC,EAAA,EAAAO,KAAAS,GAAA,GAAAT,KAAAS,GAAA,EAGAjB,EAAA,EAAAQ,KAAAU,KAAAjB,EAAAD,GAAAQ,KAAAS,GAAAT,KAAAU,KAAAjB,EAAAD,IAIOmB,EAAA,SAAAH,GACP,OAAAR,KAAAY,KAAAJ,EAAA,MAAAA,EAAA,QAIOK,EAAA,SAAAC,EAAAC,GACP,IAAAC,EAAAC,GAAAH,GACAI,EAAAC,GAAAJ,EACA,OAAAI,EAAAH,IAAAE,EAAAF,IAAA,IAAAG,EAAAF,IAAAC,EAAAD,IAAA,IACAA,EAAAC,IAAAF,EAAAE,IAAA,IAAAD,EAAAE,IAAAH,EAAAG,IAAA,GCtCMC,EAAK,KAAU,IACrBC,EADqBC,SAAAC,eAAA,eACrBC,wBACA,OAAQhC,EAAA6B,EAAA7B,EAAAC,EAAA4B,EAAA5B,IAoJU,IAAAgC,EAjJlB,MACAC,YAAAC,EAAAnC,EAAA,EAAAC,EAAA,EAAAmC,EAAA,MAAAlC,EAAA,IAAAG,EAAA,SACAgC,KAAAF,OACAE,KAAArC,IACAqC,KAAApC,IACAoC,KAAAD,SACAC,KAAAnC,SACAmC,KAAAhC,QACAgC,KAAAC,KAAAD,KAAAC,KAAAhD,KAAA+C,MACAA,KAAAE,KAAAF,KAAAE,KAAAjD,KAAA+C,MACAA,KAAAG,OAAAH,KAAAG,OAAAlD,KAAA+C,MACAA,KAAAI,YAAAJ,KAAAI,YAAAnD,KAAA+C,MACAA,KAAAK,YAAAL,KAAAK,YAAApD,KAAA+C,MACAA,KAAAM,eAAAN,KAAAM,eAAArD,KAAA+C,MACAA,KAAAO,qBAAAP,KAAAO,qBAAAtD,KAAA+C,MACAA,KAAAQ,SAAA,EACAR,KAAAS,SAAA,EACAT,KAAAU,YAAyBhC,EAAWqB,GACpCC,KAAAW,YAAAX,KAAAW,YAAA1D,KAAA+C,MACAA,KAAAY,SAAA,CAAuBjD,EAAA,KAAAC,EAAA,MACvBoC,KAAAa,WAAAb,KAAAU,YACAV,KAAAc,YAAA,GAGAjB,OACAG,KAAArC,GAAAqC,KAAAe,GACAf,KAAApC,GAAAoC,KAAAgB,GAGAnB,cACA,OAAAG,KAAAY,SAAAjD,EAAAqC,KAAArC,EAAAqC,KAAAY,SAAAhD,EAAAoC,KAAApC,GAEAiC,cACAG,KAAAc,YAAsBhC,EAAYkB,KAAAI,eAClCJ,KAAAa,WAAqBnC,EAAWsB,KAAAI,eAEhCP,iBACAG,KAAAY,SAAAjD,EAAAqC,KAAArC,EAAAqC,KAAAc,YAAA3C,KAAA8C,IAAAjB,KAAAa,YACAb,KAAAY,SAAAhD,EAAAoC,KAAApC,EAAAoC,KAAAc,YAAA3C,KAAA+C,IAAAlB,KAAAa,YAEAhB,uBACAG,KAAAQ,SAAAR,KAAAI,cAAA,KACAJ,KAAAS,SAAAT,KAAAI,cAAA,KAEAP,KAAAnC,GAQGD,EAASC,EAAAsC,KAAArC,EAAAqC,KAAApC,EAAAoC,KAAAnC,OACZmC,KAAAU,YAAAvC,KAAAS,GAAA,EAAAoB,KAAAU,YAAAvC,KAAAS,GAAA,EAAAoB,KAAAhC,OACA,OAAAgC,KAAAY,SAAAjD,IACAD,EAAAa,YACAb,EAAAY,YAAA,QACAZ,EAAAyD,YAAA,OACAzD,EAAA0D,OAAApB,KAAArC,EAAAqC,KAAApC,GACAF,EAAA2D,OAAArB,KAAAY,SAAAjD,EAAAqC,KAAAY,SAAAhD,GACAF,EAAAe,SACAuB,KAAAsB,cAAA5D,GACAA,EAAAa,YACAb,EAAA6D,UAAA,SACA7D,EAAA8D,KAAA,aACA9D,EAAA+D,4BAAuCzB,KAAAc,YAAA,GAAAY,QAAA,QAC5B,IAAA1B,KAAArC,EAAAqC,KAAAY,SAAAjD,QACC,IAAAqC,KAAApC,EAAAoC,KAAAY,SAAAhD,MACZF,EAAAiE,QAIA9B,cAAAnC,GACA,IAAAC,EAAWA,EAAAC,IAAAgD,YAAeZ,KAC1B,MAAA/B,EAAoBS,EAAW,CAAAkC,EAAAjD,IAAAiD,EAAAhD,MAC/BF,EAAAyD,YAAA,IACAzD,EAAAa,YACAb,EAAA0D,OAAAR,EAAAjD,EAAAiD,EAAAhD,GACAF,EAAA2D,OACAT,EAAAjD,EAAA,GAAAQ,KAAA8C,IAAAhD,EAAA,EAAAE,KAAAS,GAAA,GACAgC,EAAAhD,EAAA,GAAAO,KAAA+C,IAAAjD,EAAA,EAAAE,KAAAS,GAAA,IACAlB,EAAA0D,OAAAR,EAAAjD,EAAAiD,EAAAhD,GACAF,EAAA2D,OACAT,EAAAjD,EAAA,GAAAQ,KAAA8C,IAAAhD,EAAA,EAAAE,KAAAS,GAAA,GACAgC,EAAAhD,EAAA,GAAAO,KAAA+C,IAAAjD,EAAA,EAAAE,KAAAS,GAAA,IACAlB,EAAAe,SAIAoB,SACA,cAAAG,KAAAY,SAAAjD,IAGAqC,KAAAF,KAAA8B,KAAAC,SAAA,EACA7B,KAAAF,KAAA8B,KAAAb,GAAAf,KAAAQ,SACAR,KAAAF,KAAA8B,KAAAZ,GAAAhB,KAAAS,UACA,GAGAZ,YAAAiC,GAEA,MAAAC,EAAA,CAAsBpE,EAAAmE,EAAAE,QAAkBzC,IAAK5B,EAAAC,EAAAkE,EAAAG,QAAyB1C,IAAK3B,GAC3EsE,EAAAH,EAAApE,EAAAqC,KAAArC,EACAwE,EAAAJ,EAAAnE,EAAAoC,KAAApC,EAEAsE,GAAA,EAAAC,GAAA,GAAAnC,KAAAnC,QAAA,GACAqE,EAAAlC,KAAAD,OAAA,GAAAoC,EAAAnC,KAAAD,OAAA,OAEAC,KAAAY,SAAAjD,EAAAoE,EAAApE,EACAqC,KAAAY,SAAAhD,EAAAmE,EAAAnE,EAEAoC,KAAAO,uBAEAP,KAAAK,eAGeL,KAAAY,SAAAjD,EAAA,KAEfkC,uBAAAiC,EAAAM,GACAjE,KAAA8C,IAAAjB,KAAAa,YACA1C,KAAA+C,IAAAlB,KAAAa,YAEA,KAAAiB,EAAAO,UACArC,KAAAc,aAAA,IAEA,KAAAgB,EAAAO,UACArC,KAAAc,aAAA,IAEA,KAAAgB,EAAAO,UACArC,KAAAa,YAAA,KAEA,KAAAiB,EAAAO,UACArC,KAAAa,YAAA,KAEA,QAAAyB,SAAAR,EAAAO,UACArC,KAAAG,UACAiC,IAGApC,KAAAM,iBACAN,KAAAO,yBC3Ce,IAAAgC,EAtGf,MACA1C,YAAAC,EAAAnC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAA2E,EAAA,EAAAxE,EAAA,QAAA+C,EAAA,EAAAC,EAAA,GACAhB,KAAAF,OACAE,KAAArC,IACAqC,KAAApC,IACAoC,KAAAnC,SACAmC,KAAAhC,QACAgC,KAAAC,KAAAD,KAAAC,KAAAhD,KAAA+C,MACAA,KAAAE,KAAAF,KAAAE,KAAAjD,KAAA+C,MACAA,KAAAe,KACAf,KAAAgB,KACAhB,KAAAwC,YAGAxC,KAAAyC,GAAA,EACAzC,KAAA0C,GAAA,EACA1C,KAAA6B,SAAA,EACA7B,KAAA2C,MAAAhF,EACAqC,KAAA4C,MAAAhF,EAIAiC,eAAAgD,GACA,MAAAlF,EAAeA,EAAAC,KAAKoC,KACpB,OAAArC,EAAAkF,EAAA,OAAAlF,EAAAkF,EAAA,OAAAjF,EAAAiF,EAAA,OAAAjF,EAAAiF,EAAA,MAYAhD,OACAG,KAAA8C,UACAC,QAAAC,gBAAoChD,KAAArC,KACpCoF,QAAAC,gBAAoChD,KAAApC,MAGpCoC,KAAA2C,MAAA3C,KAAArC,EACAqC,KAAA4C,MAAA5C,KAAApC,EACAoC,KAAA6B,UAKA7B,KAAArC,GAAAqC,KAAAe,GACAf,KAAApC,GAAAoC,KAAAgB,GACAhB,KAAAe,IAAAf,KAAAyC,GACAzC,KAAAgB,IAAAhB,KAAA0C,GAEAvE,KAAA8E,IAAAjD,KAAAe,IAAA5C,KAAA8E,IAAAjD,KAAAgB,IAAA,IACA7C,KAAA8E,IAAAjD,KAAAyC,IAAAtE,KAAA8E,IAAAjD,KAAA0C,IAAA,KACA1C,KAAA6B,SAAA,GAEA7B,KAAAyC,GAAA,EACAzC,KAAA0C,GAAA,EAEA1C,KAAAF,KAAAoD,QAAAC,QAAAC,IACA,MAAAlB,GAAmBA,EAAAC,KAAAkB,MAAAC,KAAAvD,UAAwBqD,EAAAG,WAC3C,GAAAD,GAAAtD,KAAAnC,OAAAuF,EAAAvF,OAAA,CACA,IAAA2F,EAAAxD,KAAAnC,OAAAuF,EAAAvF,OAAAyF,EACAtD,KAAArC,GAAA6F,EAAAzD,EAAA,GACAC,KAAApC,GAAA4F,EAAAzD,EAAA,GACAC,KAAAyC,GAAA,EACAzC,KAAA0C,GAAA,EACAU,EAAAK,QAAAtF,KAAA8E,IAAAjD,KAAAe,IAAA5C,KAAA8E,IAAAjD,KAAAgB,IAAA,GACAhB,KAAA6B,SAAA,EACA7B,KAAAF,KAAA4D,cAAAN,EACApD,KAAAF,KAAA6D,UAAA,IAA0C/D,EAASI,KAAAF,KAAAE,KAAArC,EAAAqC,KAAApC,EAAAmC,GACnDC,KAAAF,KAAA8D,kBAEqBR,EAAAS,OAAA9D,QAIrBC,KAAAyC,IAAA,EAAAY,EAAAD,EAAAU,KAAA5B,EAAAoB,EAAA,GACAtD,KAAA0C,IAAA,EAAAW,EAAAD,EAAAU,KAAA3B,EAAAmB,EAAA,KAGAtD,KAAAF,KAAAiE,UAAAZ,QAAAa,IACAA,EAAAC,gBACAD,EAAAH,YAMAhE,KAAAnC,EAAAC,EAAAqC,KAAArC,EAAAC,EAAAoC,KAAApC,GACAF,EAAAa,YACAb,EAAA6D,UAAAvB,KAAAhC,MACAN,EAAAa,YACAb,EAAAc,IACAb,EAAAC,EAAAoC,KAAAnC,OAAA,IAAAM,KAAAS,IAAA,GAEAlB,EAAAiE,SCjDe,IAAAuC,EAjDf,MACArE,YAAAC,EAAAnC,EAAA,EAAAC,EAAA,EAAAC,EAAA,GAAAG,EAAA,OAAAmG,EAAApD,EAAA,EAAAC,EAAA,GACAhB,KAAAF,OACAE,KAAArC,IACAqC,KAAApC,IACAoC,KAAAnC,SACAmC,KAAAhC,QACAgC,KAAAC,KAAAD,KAAAC,KAAAhD,KAAA+C,MACAA,KAAAE,KAAAF,KAAAE,KAAAjD,KAAA+C,MACAA,KAAAe,KACAf,KAAAgB,KACAhB,KAAAmE,WAAA,EACAnE,KAAA8D,KAAA9D,KAAAmE,QAAAnE,KAAAnC,QAAA,EACAmC,KAAAyD,QAAA,EAGA5D,OACAG,KAAArC,GAAAqC,KAAAe,GACAf,KAAApC,GAAAoC,KAAAgB,GAGAnB,WACA,MAAA+B,EAAA5B,KAAAF,KAAA8B,KACAM,EAAAN,EAAAjE,EAAAqC,KAAArC,EACAwE,EAAAP,EAAAhE,EAAAoC,KAAApC,EACAyF,EAAA,UACAC,EAAAnF,KAAAY,KAAAsE,GAEA,OAAcnB,KAAAC,KAAAkB,MAAAC,KAAAvD,OADd,CAAAmC,EAAAoB,EAAAnB,EAAAmB,IAIAzD,KAAAnC,GACAA,EAAA6D,UAAAvB,KAAAhC,MACAN,EAAAa,YACAb,EAAAc,IACAwB,KAAArC,EAAAqC,KAAApC,EAAAoC,KAAAnC,OAAA,IAAAM,KAAAS,IAAA,GAEAlB,EAAA8D,QAAsBrD,KAAAiG,MAAA,GAAApE,KAAAnC,kBACtBH,EAAAiE,OACAjE,EAAAa,YACAb,EAAA6D,UAAA,UACA7D,EAAA8D,KAAA,aACA9D,EAAA+D,iCAA4CzB,KAAAnC,OAAAmC,KAAAmE,SAAA,UAAAzC,QAAA,QACjC1B,KAAArC,EAAAqC,KAAAnC,OAAA,OACCmC,KAAApC,EAAA,GAAAoC,KAAAnC,UACZH,EAAAiE,SCiBe,IAAAqC,EA9Df,MACAnE,YAAAC,EAAAuE,EAAA,EAAAC,EAAA,EAAAC,EAAA,IAAAC,EAAA,IAAAxG,EAAA,UACAgC,KAAAF,OACAE,KAAAqE,KACArE,KAAAsE,KACAtE,KAAAuE,KACAvE,KAAAwE,KACAxE,KAAAhC,QACAgC,KAAAC,KAAAD,KAAAC,KAAAhD,KAAA+C,MACAA,KAAAE,KAAAF,KAAAE,KAAAjD,KAAA+C,MACA,IAAAyE,EAAAtG,KAAAY,MAAAuF,EAAAE,IAAA,GAAAD,EAAAF,IAAA,GACArE,KAAAD,OAAA,EAAAuE,EAAAE,GAAAC,GAAAF,EAAAF,GAAAI,GACAzE,KAAA6D,OAAA7D,KAAA6D,OAAA5G,KAAA+C,MACAA,KAAAiE,aAAAjE,KAAAiE,aAAAhH,KAAA+C,MAEAH,SACA,IAAA+B,EAAA5B,KAAAF,KAAA8B,KACA7B,EAAAC,KAAAD,OACA2E,EAAA9C,EAAAb,GAAAhB,EAAA,GAAA6B,EAAAZ,GAAAjB,EAAA,GACA4E,EAAA/C,EAAAb,GAAA,EAAA2D,EAAA3E,EAAA,GACA6E,EAAAhD,EAAAZ,GAAA,EAAA0D,EAAA3E,EAAA,GACA6B,EAAAb,GAAA4D,EACA/C,EAAAZ,GAAA4D,EAEA/E,eAEA,IAAA+B,EAAA5B,KAAAF,KAAA8B,KACAA,EAAAkB,SAAA,EACA,IAAAuB,GAAaA,EAAAE,KAAAD,KAAAE,MAAexE,KAC5BD,EAAA,CAAAuE,EAAAE,EAAAD,EAAAF,IACA1G,EAAaA,EAAAC,IAAAC,SAAAkD,KAAAC,MAAqBY,EAclC,OAFA7B,EAAA,IAAApC,EAAA0G,GAAAtE,EAAA,IAAAnC,EAAA0G,KACAvE,EAAA,IAAApC,EAAAoD,EAAAsD,GAAAtE,EAAA,IAAAnC,EAAAoD,EAAAsD,KACA,GACWtF,EAAkB,CAAArB,IAAAoD,GAAA,CAAAsD,EAAAE,KAClBvF,EAAkB,CAAApB,IAAAoD,GAAA,CAAAsD,EAAAE,IAE7B3E,OACAG,KAAArC,GAAAqC,KAAAe,GACAf,KAAApC,GAAAoC,KAAAgB,GAEAnB,KAAAnC,GACAA,EAAAyD,YAAA,IACAzD,EAAAa,YACAb,EAAA0D,OAAApB,KAAAqE,GAAArE,KAAAsE,IACA5G,EAAA2D,OAAArB,KAAAuE,GAAAvE,KAAAwE,IACA9G,EAAAY,YAAA0B,KAAAhC,MACAN,EAAAe,WCemB,IAAAoG,EAzEnB,MACAhF,YAAAC,EAAAnC,EAAAC,EAAAmC,EAAA,MAAA+E,EAAA,KACA9E,KAAAF,OACAE,KAAArC,IACAqC,KAAApC,IACAoC,KAAA8E,QACA9E,KAAA+E,SAAA/E,KAAA+E,SAAA9H,KAAA+C,MACAA,KAAAgF,SAAAhF,KAAAgF,SAAA/H,KAAA+C,MACAA,KAAAD,SACAC,KAAA+E,SAAA/E,KAAA+E,SAAA9H,KAAA+C,MACAA,KAAAgF,SAAAhF,KAAAgF,SAAA/H,KAAA+C,MAGAH,OACAG,KAAArC,GAAAqC,KAAAe,GACAf,KAAApC,GAAAoC,KAAAgB,GAGAnB,SAAAnC,GACA,IAAAC,EAAAqC,KAAArC,EACAC,EAAAoC,KAAApC,EACAF,EAAAyD,YAAA,IACAzD,EAAAa,YACAb,EAAAY,YAAA,OACAZ,EAAA0D,OAAAzD,EAAAC,GACAF,EAAA2D,OAAA1D,EAAAC,EAAA,IACAF,EAAAe,SACAf,EAAA6D,UAAA,MACA7D,EAAA0D,OAAAzD,EAAAC,EAAA,IACAF,EAAA2D,OAAA1D,EAAAC,EAAA,IACAF,EAAA2D,OAAA1D,EAAA,GAAAC,EAAA,IACAF,EAAA2D,OAAA1D,EAAAC,EAAA,IACAF,EAAAiE,OAEA9B,SAAAnC,GACA,IAAAC,EAAcA,EAAAC,IAAAkH,SAAY9E,KAC1BA,KAAAF,KAAA8B,KACAlE,EAAAa,YACAb,EAAAY,YAAA,SACAZ,EAAA0D,OAAAzD,EAAAmH,EAAA,EAAAlH,GACAF,EAAA2D,OAAA1D,EAAAmH,EAAA,EAAAlH,GACAF,EAAAe,SACAf,EAAAa,YACAb,EAAA6D,UAAA,QACA7D,EAAA0D,OAAAzD,EAAAmH,EAAA,EAAAlH,GACAF,EAAA2D,OAAA1D,EAAAmH,EAAA,EAAAlH,EAAA,IACAF,EAAA2D,OAAA1D,EAAAmH,EAAA,EAAAlH,EAAA,IACAF,EAAA2D,OAAA1D,EAAAmH,EAAA,EAAAlH,GACAF,EAAAiE,OAIA9B,cACA,IAAAlC,EAAiBA,EAAAC,IAAAkH,QAAA/E,UAAoBC,KACrC4B,EAAA5B,KAAAF,KAAA8B,KAUA,OAFA7B,EAAA,IAAA6B,EAAAjE,KAAAoC,EAAA,IAAA6B,EAAAhE,OACAmC,EAAA,IAAA6B,EAAAjE,EAAAiE,EAAAb,GAAApD,GAAAoC,EAAA,IAAA6B,EAAAhE,EAAAgE,EAAAZ,GAAApD,KACA,GACeoB,EAAkB,CAAA4C,EAAAjE,EAAAiE,EAAAjE,EAAAiE,EAAAb,IAAA,CAAApD,EAAA,GAAAmH,EAAA/E,EAAA,GAAApC,EAAA,GAAAmH,EAAA/E,EAAA,MAClBf,EAAkB,CAAA4C,EAAAhE,EAAAgE,EAAAhE,EAAAgE,EAAAZ,IAAA,CAAApD,EAAA,GAAAkH,EAAA/E,EAAA,GAAAnC,EAAA,GAAAkH,EAAA/E,EAAA,OCnEjC,MAAMkF,EAAK,KAAU,IACrBzF,EADqBC,SAAAC,eAAA,eACrBC,wBACA,OAAQhC,EAAA6B,EAAA7B,EAAAC,EAAA4B,EAAA5B,IA8CO,IAAAsH,EA5Cf,MACArF,YAAAC,EAAAnC,EAAAC,GACAoC,KAAAF,OACAE,KAAAmF,aAAAnF,KAAAmF,aAAAlI,KAAA+C,MACAF,EAAAsF,OAAAC,iBAAA,QAAArF,KAAAmF,cACAnF,KAAAsF,SAAA,EACAtF,KAAArC,IACAqC,KAAApC,IAEAiC,KAAAnC,GACAsC,KAAAsF,UACA5H,EAAAa,YACAb,EAAA6D,UAAA,QACA7D,EAAA8D,KAAA,aACA9D,EAAA+D,SAAA,QACAzB,KAAArC,EAAAqC,KAAApC,GACAF,EAAAiE,OACAjE,EAAAa,YACAb,EAAAY,YAAA,QACAZ,EAAA0D,OAAApB,KAAArC,EAAA,GAAAqC,KAAApC,EAAA,IACAF,EAAA2D,OAAArB,KAAArC,EAAA,GAAAqC,KAAApC,EAAA,IACAF,EAAA2D,OAAArB,KAAArC,EAAA,GAAAqC,KAAApC,EAAA,IACAF,EAAA2D,OAAArB,KAAArC,EAAA,GAAAqC,KAAApC,EAAA,IACAF,EAAA2D,OAAArB,KAAArC,EAAA,GAAAqC,KAAApC,EAAA,IACAF,EAAAe,UAIAoB,aAAAiC,GACA,MAAAC,EAAwBD,EAAAE,QAAkBiD,IAAKtH,EAA/CoE,EAA+CD,EAAAG,QAAyBgD,IAAKrH,EAE7EmE,GAAA/B,KAAArC,EAAA,IAAAoE,GAAA/B,KAAArC,EAAA,IACAoE,GAAA/B,KAAApC,EAAA,IAAAmE,GAAA/B,KAAApC,EAAA,KAEAmF,QAAAC,IAAA,oBACAhD,KAAAF,KAAA8D,iBACA5D,KAAAF,KAAAsF,OAAAG,oBAAA,QAAAvF,KAAAmF,cAAA,GACAnF,KAAAsF,SAAA,KCVe,IAAAE,EAxBf,MACA3F,YAAAC,GACA,MAAA2F,EAAA,EAAAtH,KAAAY,KAAA,GACAiB,KAAA4B,KAAA,IAAwBW,EAAIzC,EAAA,OAAA2F,EAAA,MAAAA,GAC5BzF,KAAA6C,QAAA,yBACA7C,KAAA0D,cAAA,IAAiCQ,EAAYpE,EAAA,uBAC7CE,KAAA0F,YAAA,IAA+BR,EAAWpF,EAAA,SAC1CE,KAAA2D,UAAA,IAA6B/D,EAASE,EAAAE,KAAA4B,KAAAjE,EAAAqC,KAAA4B,KAAAhE,EAAA,CAAA6H,MACtCzF,KAAAkD,QAAA,CACAlD,KAAA0D,cAEA,IAAgBQ,EAAYpE,EAAA,wBAG5BE,KAAA6E,KAAA,IAAwBA,EAAI/E,EAAA,mBAC5BE,KAAA+D,UAAA,GACA/D,KAAA+D,UAAA,CAEA,IAAgBC,EAAQlE,EAAA,iBACxB,IAAgBkE,EAAQlE,EAAA,oBCIT,IAAA6F,EAvBf,MACA9F,YAAAC,GACAE,KAAA4B,KAAA,IAAoBW,EAAIzC,EAAA,SACxBE,KAAA0D,cAAA,IAAiCQ,EAAYpE,EAAA,uBAC7CE,KAAA6C,QAAA,yBACA7C,KAAA2D,UAAA,IAA6B/D,EAASE,EAAA,SACtCE,KAAAkD,QAAA,CACAlD,KAAA0D,cACA,IAAgBQ,EAAYpE,EAAA,YAC5B,IAAgBoE,EAAYpE,EAAA,qBAC5B,IAAgBoE,EAAYpE,EAAA,sBAI5BE,KAAA6E,KAAA,IAAwBA,EAAI/E,EAAA,SAC5BE,KAAA+D,UAAA,GACA/D,KAAA+D,UAAA,CACA,IAAgBC,EAAQlE,EAAA,aACxB,IAAgBkE,EAAQlE,EAAA,mBCNT,IAAA8F,EAnBf,MACA/F,YAAAgG,EAAAC,EAAA,IAAAtE,EAAA,aAAA7D,EAAA,IAAAC,EAAA,KACAoC,KAAA6F,OACA7F,KAAA8F,WACA9F,KAAAwB,OACAxB,KAAArC,IACAqC,KAAApC,IAEAiC,KAAAnC,GACAA,EAAAa,YACAb,EAAA6D,UAAA,UACA7D,EAAA8D,KAAAxB,KAAAwB,KACA9D,EAAA+D,SAAAzB,KAAA6F,KACA7F,KAAArC,EACAqC,KAAApC,GACAF,EAAAiE,SCyLe,IAAAoE,EA9Lf,MAEAlG,cACAG,KAAAoF,OAAA3F,SAAAC,eAAA,eACAM,KAAAoF,OAAAY,aAAA,cACAhG,KAAAtC,IAAAsC,KAAAoF,OAAAa,WAAA,MACAjG,KAAAkG,OAAA,MAA6BV,EAAQG,GACrC3F,KAAAmG,mBAAA,EACAnG,KAAAC,KAAAD,KAAAC,KAAAhD,KAAA+C,MACAA,KAAAoG,cAAApG,KAAAoG,cAAAnJ,KAAA+C,MACAA,KAAA4D,eAAA5D,KAAA4D,eAAA3G,KAAA+C,MACAA,KAAAwC,UAAA,CAA0B6D,IAAA,EAAAC,YAAA,GAC1BtG,KAAAuG,aAAAvG,KAAAuG,aAAAtJ,KAAA+C,MACAA,KAAAwG,WAAA,EACAxG,KAAAyG,iBAAA,KAGA5G,gBAGA,GADAG,KAAAmG,oBAAA,EACAnG,KAAAmG,oBAAAnG,KAAAkG,OAAAQ,OAEA,OADA1G,KAAA4B,KAAAC,SAAA,EACA7B,KAAA2G,iBAEA,MAAAC,EAAA,IAAA5G,KAAAkG,OAAAlG,KAAAmG,oBAAAnG,MACAA,KAAA4B,KAAAgF,EAAAhF,KACA5B,KAAA0D,cAAAkD,EAAAlD,cACA1D,KAAA2D,UAAAiD,EAAAjD,UACA3D,KAAAkD,QAAA0D,EAAA1D,QACAlD,KAAA6E,KAAA+B,EAAA/B,KACA7E,KAAA+D,UAAA6C,EAAA7C,UACA/D,KAAA6C,QAAA+D,EAAA/D,QACA7C,KAAA0F,YAAAkB,EAAAlB,YACA1F,KAAAwC,UAAA,CAA0B6D,IAAA,EAAAC,YAAA,GAE1BtG,KAAAoF,OAAAC,iBAAA,UAAArF,KAAAuG,cAAA,GAEAvG,KAAA0F,aAA+B1F,KAAA4D,iBAC/BiD,sBAAA7G,KAAA8G,QAAA7J,KAAA+C,OAGAH,eACAG,KAAAmG,oBAAA,EACAnG,KAAAoG,gBAGAvG,aAAAiC,GACA,QAAAQ,SAAAR,EAAAO,WACA,KAAAP,EAAAO,UACArC,KAAAwC,UAAA8D,WACA,QAAAhE,SAAAtC,KAAAwC,UAAA6D,KACArG,KAAAwC,UAAA6D,KAAA,EAEA,IAAArG,KAAAwC,UAAA6D,MACArG,KAAAwC,UAAA8D,YAAA,EACAtG,KAAAwC,UAAA6D,IAAA,GAIA,QAAA/D,SAAAtC,KAAAwC,UAAA6D,OACArG,KAAAwC,UAAA6D,KAAA,IAIA,KAAAvE,EAAAO,UACArC,KAAAwC,UAAA8D,WACA,QAAAhE,SAAAtC,KAAAwC,UAAA6D,OACArG,KAAAwC,UAAA6D,KAAA,GAIA,QAAA/D,SAAAtC,KAAAwC,UAAA6D,KACArG,KAAAwC,UAAA6D,KAAA,EAEA,IAAArG,KAAAwC,UAAA6D,MACArG,KAAAwC,UAAA8D,YAAA,EACAtG,KAAAwC,UAAA6D,IAAA,IAIArG,KAAAyG,iBAAA,IAAoCb,gBACV5F,KAAAwC,UAAA8D,YAC1B,EAAAtG,KAAAwC,UAAA6D,KAAA3E,QAAA,GAAA1B,KAAAwC,UAAA6D,QAGAxG,iBACA,MAAAnC,EAAAsC,KAAAtC,IACAA,EAAAa,YACAb,EAAA6D,UAAA,QACA7D,EAAA8D,KAAA,aACA9D,EAAA+D,SAAA,WACA,SACA/D,EAAAiE,OAKA9B,iBACA,IAAAC,EAAAE,KACAoF,EAAAtF,EAAAsF,OACA2B,EAAAC,GAAAhH,KAAA2D,UAAAhD,YAAAqG,GACAC,EAAAD,IAAyChH,KAAA2D,UAAAxD,WACzCiF,EAAAG,oBAAA,YAAAwB,GAAA,GACA3B,EAAAG,oBAAA,QAAA0B,GAAA,GACA7B,EAAAG,oBAAA,UAAA2B,GAAA,KAGAA,EAAAF,IACA5B,EAAAG,oBAAA,YAAAwB,GAAA,GACAjH,EAAA6D,UAAAwD,uBAAAH,EAAA,KACA5B,EAAAG,oBAAA,UAAA2B,GAAA,GACA9B,EAAAG,oBAAA,QAAA0B,GAAA,MAGA7B,EAAAC,iBAAA,YAAA0B,GAAA,GACA3B,EAAAC,iBAAA,UAAA6B,GAAA,GACA9B,EAAAC,iBAAA,QAAA4B,GAAA,GAGApH,KAAAuH,GACApH,KAAAqH,YAAAD,GAGAvH,cACA,IAAA2C,UAAaA,GAAUxC,KACvB,GAAAwC,EAAA8D,YACA,GAAAtG,KAAAwG,WAAAhE,EAAA6D,KAAA,IACArG,KAAA4B,KAAA1B,QACAF,KAAA4B,KAAA0F,eAAAtH,KAAA6C,UAEA,YADA7C,KAAAuH,oBAOA,QAAA9L,EAAA,EAA2BA,GAAA+G,EAAA6D,IAAoB5K,IAE/C,GADAuE,KAAA4B,KAAA1B,QACAF,KAAA4B,KAAA0F,eAAAtH,KAAA6C,SAEA,YADA7C,KAAAuH,eAMA1H,QAAA2H,GACA,GAAAxH,KAAA6E,KAAA4C,cAEA,OADAzH,KAAA4B,KAAAC,SAAA,EACA7B,KAAAoG,gBAEA,MAAAsB,EAAAF,EAAAxH,KAAA2H,SACA3H,KAAA4H,KAAAF,GACA1H,KAAAC,OACAD,KAAA2H,SAAAH,EACAxH,KAAAwG,YAAA,EAGAK,sBAAA7G,KAAA8G,QAAA7J,KAAA+C,OAEAH,OACA,IAAAnC,EAAAsC,KAAAtC,IACAkE,EAAA5B,KAAA4B,KAOA,GANAlE,EAAAoH,MAAA,KACApH,EAAAmK,OAAA,IACAnK,EAAA6D,UAAA,QACA7D,EAAAoK,SAAA,aACA9H,KAAA2D,UAAA1D,KAAAvC,GACAsC,KAAA6E,KAAAE,SAAArH,GACAsC,KAAAwC,UAAA8D,YAAAtG,KAAAwC,UAAA6D,IAAA,GACA,MAAAA,EAAArG,KAAAwC,UAAA6D,IACA0B,EAAA/H,KAAAwG,WAAAH,EACAzE,EAAA3B,KACAvC,EACAqK,EAAA1B,EAAAzE,EAAAjE,GAAA,EAAAoK,EAAA1B,GAAAzE,EAAAe,MACAoF,EAAA1B,EAAAzE,EAAAhE,GAAA,EAAAmK,EAAA1B,GAAAzE,EAAAgB,YAIAhB,EAAA3B,KAAAvC,GAEAsC,KAAA+D,UAAAZ,QAAAa,KAAA/D,KAAAvC,IACAsC,KAAA6E,KAAAG,SAAAtH,GACAsC,KAAAkD,QAAAC,QAAAC,KAAAnD,KAAAvC,IACAsC,KAAA0F,aAAA1F,KAAA0F,YAAAzF,KAAAvC,GACAsC,KAAAyG,kBAAAzG,KAAAyG,iBAAAxG,KAAAvC,KCjMA+B,SAAA4F,iBAAA,mBAAAvD,KACA,IAAqBiE,GACrBK","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const dottedArc = function(ctx, x, y, radius, theta0, theta1, color){\r\n    const a = .1;\r\n    let theta = theta1 - theta0;\r\n    let numPieces = 2* Math.ceil(.5*(theta/a - 1)) + 1;\r\n    let dTheta = theta/numPieces;\r\n    ctx.strokeStyle = color;\r\n    for (let i=0; i < numPieces; i++){ \r\n        ctx.beginPath();\r\n        if (i % 2 == 0){\r\n            ctx.arc(\r\n                x, y, radius, theta0 + i*dTheta, theta0+(i+1)*dTheta \r\n                );\r\n                ctx.stroke();\r\n            \r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const vectorAngle = function(vector){\r\n    const x = vector[0];\r\n    const y = vector[1];\r\n    if (x==0){\r\n        return y > 0 ? Math.PI/2 : -Math.PI/2;\r\n    }\r\n    \r\n    return x > 0 ? Math.atan(y/x) : Math.PI + Math.atan(y/x);\r\n    \r\n}\r\n\r\nexport const vectorLength = function(vector){\r\n    return Math.sqrt(vector[0] ** 2 + vector[1] ** 2);\r\n}\r\n\r\n\r\nexport const intervalsIntersect = function (interval1, interval2){\r\n    let [a1, b1] = interval1;\r\n    let [a2, b2] = interval2;\r\n    return (b2 - a1)*(a2-a1) <= 0 ||  (b2 - b1)*(a2-b1) <= 0\r\n    || (b1 - a2) * (a1-a2) <=0 || (b1 - b2) * (a1-b2) <=0;\r\n}\r\n","import {dottedArc, vectorAngle, vectorLength} from './helper';\r\nconst error = () => {let m = document.getElementById(\"game-canvas\");\r\nlet rect = m.getBoundingClientRect();\r\nreturn {x: rect.x, y: rect.y};\r\n}\r\n\r\nclass LaunchPad {\r\n   constructor(game, x = 0, y = 0, normal = [0,1], radius = 100,  color = \"white\"){\r\n      this.game = game;\r\n      this.x = x;\r\n      this.y = y;\r\n      this.normal = normal;\r\n      this.radius = radius;\r\n      this.color = color;\r\n      this.draw= this.draw.bind(this);\r\n      this.move = this.move.bind(this);\r\n      this.launch = this.launch.bind(this);\r\n      this.arrowVector = this.arrowVector.bind(this);\r\n      this.updatePolar = this.updatePolar.bind(this);\r\n      this.updateArrowTip = this.updateArrowTip.bind(this);\r\n      this.updateLaunchVelocity = this.updateLaunchVelocity.bind(this);\r\n      this.launchVx = 0;\r\n      this.launchVy=0;\r\n      this.normalAngle = vectorAngle(normal);\r\n      this.setVelocity = this.setVelocity.bind(this);\r\n      this.arrowTip = {x: null, y: null};\r\n      this.arrowAngle = this.normalAngle;\r\n      this.arrowLength = 60;\r\n  }\r\n\r\n  move(){\r\n      this.x += this.vx;\r\n      this.y += this.vy;\r\n  }\r\n\r\n  arrowVector(){\r\n     return [this.arrowTip.x-this.x, this.arrowTip.y-this.y];\r\n  }\r\n  updatePolar(){\r\n   this.arrowLength = vectorLength(this.arrowVector());\r\n   this.arrowAngle = vectorAngle(this.arrowVector());\r\n  }\r\n  updateArrowTip(){\r\n     this.arrowTip.x = this.x + this.arrowLength*Math.cos(this.arrowAngle);\r\n     this.arrowTip.y = this.y + this.arrowLength*Math.sin(this.arrowAngle);\r\n  }\r\n  updateLaunchVelocity(){\r\n     this.launchVx = this.arrowVector()[0]/4;\r\n     this.launchVy = this.arrowVector()[1]/4;\r\n  }\r\n  draw(ctx ) {\r\n   // ctx.beginPath();\r\n   // ctx.strokeStyle = this.color;\r\n   // ctx.arc(\r\n   //   this.x, this.y, this.radius, 0,  Math.PI\r\n   // );\r\n   // ctx.stroke();\r\n   //  \r\n   dottedArc(ctx, this.x, this.y, this.radius, \r\n      this.normalAngle - Math.PI/2, this.normalAngle + Math.PI/2, this.color);\r\n   if (this.arrowTip.x !== null){\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = \"white\";\r\n      ctx.setLineDash([5,5]);\r\n     ctx.moveTo(this.x, this.y);\r\n     ctx.lineTo(this.arrowTip.x, this.arrowTip.y)\r\n     ctx.stroke();\r\n     this.drawArrowBits(ctx);\r\n     ctx.beginPath();\r\n        ctx.fillStyle = \"purple\"\r\n        ctx.font = `${21}px Arial`;\r\n        ctx.fillText(`Initial speed: ${(this.arrowLength/4).toFixed(2)}`, \r\n        `${0.5 * (this.x + this.arrowTip.x)}`,\r\n         `${0.5 * (this.y + this.arrowTip.y)}`);\r\n        ctx.fill();\r\n     \r\n   }\r\n}\r\n   drawArrowBits (ctx) {\r\n      let {x, y, arrowTip} = this;\r\n      const theta = vectorAngle([arrowTip.x - x, arrowTip.y -y] );\r\n      ctx.setLineDash([]);\r\n      ctx.beginPath();\r\n      ctx.moveTo(arrowTip.x, arrowTip.y);\r\n      ctx.lineTo(\r\n         arrowTip.x + 12 * Math.cos(theta + 3*Math.PI/4), \r\n         arrowTip.y + 12* Math.sin(theta + 3*Math.PI/4));\r\n      ctx.moveTo(arrowTip.x, arrowTip.y);\r\n      ctx.lineTo(\r\n         arrowTip.x + 12 * Math.cos(theta - 3*Math.PI/4), \r\n         arrowTip.y + 12* Math.sin(theta - 3*Math.PI/4));\r\n      ctx.stroke();\r\n\r\n   }\r\n\r\n    launch(){\r\n       if (this.arrowTip.x === null){\r\n          return false;\r\n       }\r\n       this.game.ball.stopped = false;\r\n       this.game.ball.vx = this.launchVx;\r\n       this.game.ball.vy = this.launchVy;\r\n       return true;\r\n    }\r\n\r\n    setVelocity(event){\r\n\r\n      const cursor = {x: event.clientX -error().x, y: event.clientY - error().y};\r\n      const dx = cursor.x - this.x;\r\n      const dy = cursor.y - this.y;\r\n      if (\r\n         dx**2 + dy**2 <= this.radius ** 2 &&\r\n          dx * this.normal[0] + dy * this.normal[1] >= 0\r\n          ) {\r\n             this.arrowTip.x = cursor.x;\r\n             this.arrowTip.y = cursor.y;\r\n\r\n            this.updateLaunchVelocity();\r\n           \r\n            this.updatePolar();\r\n            \r\n         }   \r\n         else {this.arrowTip.x = null;}\r\n    }\r\n    setVelocityByArrowKeys(event, callback){\r\n       const dVx = .1 * Math.cos(this.arrowAngle);\r\n       const dVy = .1 * Math.sin(this.arrowAngle);\r\n\r\n       if (event.keyCode === 40){\r\n         this.arrowLength -= .5;\r\n       }\r\n       if (event.keyCode === 38){\r\n         this.arrowLength += .5;\r\n       }\r\n       if (event.keyCode === 37){\r\n          this.arrowAngle -= .02;\r\n       }\r\n       if (event.keyCode === 39){\r\n          this.arrowAngle += .02;\r\n      }\r\n      if ([32,13].includes(event.keyCode)){\r\n         if (this.launch()){\r\n            callback();\r\n         }\r\n       }\r\n       this.updateArrowTip();\r\n       this.updateLaunchVelocity();\r\n       \r\n    }\r\n   }\r\n\r\n   export default LaunchPad;\r\n","import LaunchPad from \"./launchpad\";\r\nclass Ball {\r\n    constructor(game, x = 0, y = 0, radius = 5, playSpeed = 1, color = \"white\", vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.playSpeed = playSpeed;\r\n        // this.setPlaySpeed = this.setPlaySpeed.bind(this);\r\n        // this.accelCorrection = 1;\r\n        this.ax = 0;\r\n        this.ay = 0;\r\n        this.stopped = true;\r\n        this.prevx =x ;\r\n        this.prevy = y;\r\n        // this.logging = true;\r\n    }\r\n    \r\n    checkRectangle(corners){\r\n        const {x, y} = this;\r\n        return x > corners[0][0] && x < corners[1][0] && y > corners[0][1] && y < corners[1][1];\r\n    }\r\n\r\n    // setPlaySpeed(event){\r\n    //     if (event.keyCode === 70 && this.playSpeed < 4 ){\r\n    //         this.playSpeed += .2;\r\n    //     }\r\n    //     if (event.keyCode === 83 && this.playSpeed >= .4) {\r\n    //         this.playSpeed -= .2;\r\n    //     } \r\n    //     this.accelCorrection = this.playSpeed ** (-.88);\r\n    // }\r\n    move(){\r\n        if(this.logging){\r\n            console.log(`ballx is ${this.x}`);\r\n            console.log(`bally is ${this.y}`);\r\n        }\r\n\r\n        this.prevx = this.x;\r\n        this.prevy = this.y;\r\n        if (this.stopped) return;\r\n        // this.x += this.playSpeed*this.vx;\r\n        // this.y += this.playSpeed* this.vy;\r\n        // this.vx += this.accelCorrection * this.playSpeed**2 * this.ax;\r\n        // this.vy += this.accelCorrection * this.playSpeed**2 * this.ay;\r\n        this.x += this.vx;\r\n        this.y +=  this.vy;\r\n        this.vx +=  this.ax;\r\n        this.vy +=  this.ay;\r\n        \r\n        if (Math.abs(this.vx) + Math.abs(this.vy) < 0.4\r\n        && Math.abs(this.ax) + Math.abs(this.ay) <0.1){\r\n            this.stopped = true;}\r\n\r\n        this.ax = 0;\r\n        this.ay = 0;\r\n            \r\n        this.game.planets.forEach(planet => {\r\n            const {dx, dy, dz2, dz, normal} = planet.ballData();\r\n            if (dz <=  this.radius + planet.radius){\r\n                let error = this.radius + planet.radius - dz;\r\n                this.x += error * normal[0];\r\n                this.y += error * normal[1];\r\n                this.ax = 0;\r\n                this.ay = 0;\r\n                if (planet.sticky || Math.abs(this.vx) + Math.abs(this.vy)<1 ){\r\n                    this.stopped = true;\r\n                this.game.currentPlanet = planet;\r\n                this.game.launchPad = new LaunchPad(this.game, this.x, this.y, normal);\r\n                this.game.setupLaunchPad();\r\n            }\r\n                else{planet.bounce(normal);}\r\n                \r\n            }\r\n            else{\r\n            this.ax -= (1/dz2)*planet.mass * dx/dz * .2;\r\n            this.ay -= (1/dz2)*planet.mass * dy/dz * .2;\r\n            } \r\n        });\r\n        this.game.obstacles.forEach(obstacle => {\r\n            if (obstacle.checkForBall()){\r\n                obstacle.bounce();\r\n            }\r\n        })\r\n    \r\n    \r\n    }\r\n    draw(ctx, x = this.x, y = this.y ) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          x, y, this.radius, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default Ball;","\r\nclass StickyPlanet {\r\n    constructor(game, x = 0, y = 0, radius = 10, color = \"grey\", density, vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.density = density || 1;\r\n        this.mass = this.density * this.radius**3;\r\n        this.sticky = true;\r\n    }\r\n\r\n    move(){\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n    }\r\n\r\n    ballData(){\r\n      const ball = this.game.ball;\r\n      const dx = ball.x - this.x;\r\n      const dy = ball.y - this.y;\r\n      const dz2 = ((dx)**2 + (dy)**2);\r\n      const dz = Math.sqrt(dz2);\r\n      const normal = [dx/dz, dy/dz];\r\n      return {dx, dy, dz2, dz, normal}\r\n  }\r\n\r\n    draw(ctx ) {\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          this.x, this.y, this.radius, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.font = `${Math.floor(.9 * this.radius)}px Arial`;\r\n        ctx.fill();\r\n        ctx.beginPath();\r\n        ctx.fillStyle = \"#3e78ad\"\r\n        ctx.font = `${14}px Arial`;\r\n        ctx.fillText(`Escape vel. approx. ${(this.radius * this.density **.45 *.504 ).toFixed(2)}`, \r\n        `${this.x +  this.radius + 2}`,\r\n         `${this.y + .5 * this.radius}`);\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default StickyPlanet;","import {intervalsIntersect} from './helper';\r\nclass Obstacle {\r\n    constructor(game, x1 = 0, y1 = 0, x2 = 100, y2 = 100, color = \"orange\"){\r\n        this.game = game;\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        let z = Math.sqrt((y1-y2)**2 + (x2 - x1)**2)\r\n        this.normal = [(y1 - y2)/z, (x2- x1)/z];\r\n        this.bounce = this.bounce.bind(this);\r\n        this.checkForBall = this.checkForBall.bind(this);\r\n    }\r\n    bounce(){\r\n        let ball = this.game.ball;\r\n        let normal = this.normal;\r\n        let vDotNormal = ball.vx * normal[0] + ball.vy * normal[1];\r\n        let new_vx = ball.vx - 2 * vDotNormal * normal[0];\r\n        let new_vy = ball.vy - 2 * vDotNormal * normal[1];\r\n        ball.vx = new_vx;\r\n        ball.vy = new_vy;\r\n    }\r\n    checkForBall(){\r\n        \r\n        let ball = this.game.ball;\r\n        ball.logging = false;\r\n        let {x1, x2, y1, y2} = this;\r\n        let normal = [y1-y2, x2-x1]\r\n        let {x, y, radius, vx, vy} = ball;\r\n        // if (x - radius > Math.max(x1, x2) || x + radius < Math.min(x1, x2)){\r\n        //     return false;\r\n        // }\r\n        // if (y - radius > Math.max(y1, y2) || y + radius < Math.min(y1, y2)){\r\n        //     return false;\r\n        // }\r\n        // let d = ((y2-y1)*x - (x2-x1)*y+x2*y1-y2*x1)/Math.sqrt((y2-y1)**2 + (x2-x1)**2);\r\n        // let result = -1.5*radius <= d && 1.5*radius >= d;\r\n        // if (result) {\r\n        // return result;\r\n        // }\r\n        let perpComponent = normal[0] * (x - x1) + normal[1]*(y-y1);\r\n        let nextPerpComponent = normal[0] * (x + vx - x1) + normal[1]*(y+vy-y1);\r\n        return perpComponent * nextPerpComponent <= 0 \r\n        && intervalsIntersect([x, x+vx], [x1, x2]) \r\n        && intervalsIntersect([y, y+vy], [y1, y2]);\r\n    }\r\n    move(){\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n    }\r\n    draw(ctx ) {\r\n        ctx.setLineDash([]);\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.x1, this.y1);\r\n        ctx.lineTo(this.x2, this.y2);\r\n        ctx.strokeStyle = this.color;\r\n        ctx.stroke();\r\n      };\r\n}\r\n\r\nexport default Obstacle;","import {intervalsIntersect} from './helper';\r\nclass Hole {\r\n    constructor(game, x, y, normal = [0,1], width = 100){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.drawFlag= this.drawFlag.bind(this);\r\n        this.drawHole= this.drawHole.bind(this);\r\n        this.normal = normal;\r\n        this.drawFlag = this.drawFlag.bind(this);\r\n        this.drawHole = this.drawHole.bind(this);\r\n    }\r\n \r\n   move(){\r\n       this.x += this.vx;\r\n       this.y += this.vy;\r\n   }\r\n\r\n   drawFlag(ctx ) {\r\n       let x = this.x;\r\n       let y = this.y;\r\n       ctx.setLineDash([]);\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = \"gold\";\r\n      ctx.moveTo(x, y);\r\n      ctx.lineTo(x, y - 50)\r\n       ctx.stroke();\r\n       ctx.fillStyle = \"red\";\r\n       ctx.moveTo(x, y-50);\r\n       ctx.lineTo(x,y-70);\r\n       ctx.lineTo(x+ 25, y-60);\r\n       ctx.lineTo(x, y-50);\r\n       ctx.fill();\r\n     }\r\n     drawHole(ctx) {\r\n         let {x, y, width} = this;\r\n         let ball = this.game.ball;\r\n             ctx.beginPath();\r\n             ctx.strokeStyle = \"purple\";\r\n             ctx.moveTo(x - width/2, y);\r\n             ctx.lineTo(x + width/2, y);\r\n             ctx.stroke();\r\n             ctx.beginPath();\r\n             ctx.fillStyle = \"black\";\r\n             ctx.moveTo(x + width/2, y);\r\n             ctx.lineTo(x + width/2, y + 30);\r\n             ctx.lineTo(x - width/2, y + 30);\r\n             ctx.lineTo(x - width/2, y );\r\n             ctx.fill();\r\n         \r\n\r\n        }\r\n        checkForWin(){\r\n            let {x, y, width, normal} = this;\r\n            let ball = this.game.ball;\r\n            // let result = ball.y -ball.radius> y \r\n            // && ball.y-2*ball.radius < y\r\n            // && Math.abs(ball.x - x) < width/2\r\n            // && ball.vy >0;\r\n            \r\n            // return result;\r\n\r\n            let perpComponent = normal[0] * (ball.x - x) + normal[1]*(ball.y-y);\r\n            let nextPerpComponent = normal[0] * (ball.x + ball.vx - x) + normal[1]*(ball.y+ball.vy-y);\r\n            return perpComponent * nextPerpComponent <= 0 \r\n            && intervalsIntersect([ball.x, ball.x+ball.vx], [x - 0.5 * width* normal[1], x+ 0.5* width * normal[1]]) \r\n            && intervalsIntersect([ball.y, ball.y+ball.vy], [y - 0.5 * width* normal[0], y + 0.5 * width * normal[0]]);\r\n        }\r\n \r\n    \r\n     \r\n    }\r\n \r\n    export default Hole;\r\n ","const error = () => {let m = document.getElementById(\"game-canvas\");\r\nlet rect = m.getBoundingClientRect();\r\nreturn {x: rect.x, y: rect.y};\r\n}\r\nclass StartButton{\r\n    constructor(game, x, y){\r\n        this.game = game;\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n        game.canvas.addEventListener(\"click\", this.clickHandler);\r\n        this.visible = true;\r\n        this.x =x;\r\n        this.y = y;\r\n    }\r\n    draw(ctx){\r\n        if(this.visible){\r\n            ctx.beginPath();\r\n        ctx.fillStyle = \"white\"\r\n        ctx.font = `${25}px Arial`;\r\n        ctx.fillText(`Start`, \r\n       this.x, this.y);\r\n        ctx.fill();\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = \"white\";\r\n            ctx.moveTo(this.x - 20, this.y+10);\r\n            ctx.lineTo(this.x - 20, this.y - 25);\r\n            ctx.lineTo(this.x + 75, this.y - 25);\r\n            ctx.lineTo(this.x + 75, this.y + 10 );\r\n            ctx.lineTo(this.x - 20, this.y + 10);\r\n            ctx.stroke();\r\n        }\r\n\r\n    }\r\n    clickHandler(event){\r\n        const cursor = {x: event.clientX -error().x, y: event.clientY - error().y};\r\n        if (\r\n            cursor.x >= this.x -20 && cursor.x <= this.x + 75\r\n            && cursor.y >=this.y - 25 && cursor.y <= this.y + 10\r\n            ){\r\n                console.log(\"successful click\");\r\n                this.game.setupLaunchPad();\r\n                this.game.canvas.removeEventListener(\"click\", this.clickHandler, false);\r\n                this.visible = false;\r\n            }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default StartButton;","import Ball from '../ball';\r\nimport LaunchPad from '../launchpad';\r\nimport StickyPlanet from '../Sticky_planet';\r\nimport Obstacle from '../obstacle';\r\nimport BouncyPlanet from '../bouncy_planet';\r\nimport Hole from '../hole';\r\nimport StartButton from '../start_button';\r\nclass Level1 {\r\n    constructor(game){\r\n        const invSqrt = 1/Math.sqrt(2);\r\n        this.ball = new Ball(game, 100 + (25 + 5)*invSqrt, 40 + (25 + 5)*invSqrt);\r\n        this.corners = [[-200, -200], [1200, 900]];\r\n        this.currentPlanet = new StickyPlanet(game, 100, 40, 25, \"#27753a\", 1);\r\n        this.startButton = new StartButton(game, 400, 400);\r\n        this.launchPad = new LaunchPad(game, this.ball.x, this.ball.y, [invSqrt, invSqrt]);\r\n        this.planets = [\r\n            this.currentPlanet,\r\n            // new StickyPlanet(game, 300, 400, 35), \r\n            new StickyPlanet(game, 640, 490, 20, \"orange\", 3),\r\n            \r\n        ]\r\n        this.hole = new Hole(game, 670, 450,  [0,1], 100);\r\n        this.obstacles=[];\r\n        this.obstacles = [\r\n            // new Obstacle(game, 90, 0, 90, 900)   ,\r\n            new Obstacle(game, 350, 280, 680, 420),\r\n            new Obstacle(game, 360, 150, 710, 410)\r\n        ]\r\n        }\r\n}\r\n\r\nexport default Level1;","import Ball from '../ball';\r\nimport LaunchPad from '../launchpad';\r\nimport StickyPlanet from '../Sticky_planet';\r\nimport Obstacle from '../obstacle';\r\nimport BouncyPlanet from '../bouncy_planet';\r\nimport Hole from '../hole';\r\n\r\nclass Level2 {\r\n    constructor(game){\r\n    this.ball = new Ball(game, 300, 100);\r\n        this.currentPlanet = new StickyPlanet(game, 300, 70, 25, \"#27753a\", 1);\r\n        this.corners = [[-200, -200], [1200, 900]];\r\n        this.launchPad = new LaunchPad(game, 300, 100);\r\n        this.planets = [\r\n            this.currentPlanet,\r\n            new StickyPlanet(game, 300, 400, 35), \r\n            new StickyPlanet(game, 520, 250, 30, \"orange\"),\r\n            new StickyPlanet(game, 580, 450, 30, \"orange\"),\r\n\r\n            \r\n        ]\r\n        this.hole = new Hole(game, 700, 500);\r\n        this.obstacles=[];\r\n        this.obstacles = [\r\n            new Obstacle(game, 90, 0, 90, 900)   ,\r\n            new Obstacle(game, 600, 40, 850, 300)\r\n        ]\r\n        }\r\n}\r\n\r\nexport default Level2;","class TimedMessage{\r\n    constructor(text, duration = 300, font = '30px Arial', x = 400, y = 300) {\r\n        this.text = text;\r\n        this.duration = duration;\r\n        this.font = font;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    draw(ctx){\r\n        ctx.beginPath();\r\n        ctx.fillStyle = \"#3e78ad\"\r\n        ctx.font = this.font;\r\n        ctx.fillText(this.text, \r\n        this.x,\r\n        this.y);\r\n        ctx.fill();\r\n    }\r\n}\r\n\r\nexport default TimedMessage;","import Ball from './ball';\r\nimport LaunchPad from './launchpad';\r\nimport StickyPlanet from './Sticky_planet';\r\nimport Obstacle from './obstacle';\r\nimport BouncyPlanet from './bouncy_planet';\r\nimport Hole from './hole';\r\nimport Level1 from './levels/level1';\r\nimport Level2 from './levels/level2';\r\nimport TimedMessage from './timedMessage';\r\n\r\nclass Game {\r\n\r\n    constructor() {\r\n        this.canvas = document.getElementById(\"game-canvas\");\r\n        this.canvas.setAttribute(\"tabindex\", 0);\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        this.levels = [null, Level1, Level2];\r\n        this.currentLevelNumber = 0;\r\n        this.draw = this.draw.bind(this);\r\n        this.initiateLevel = this.initiateLevel.bind(this);\r\n        this.setupLaunchPad = this.setupLaunchPad.bind(this);\r\n        this.playSpeed = {num: 1, fractional: false};\r\n        this.setPlaySpeed = this.setPlaySpeed.bind(this);\r\n        this.frameCount = 0;\r\n        this.playSpeedMessage = null;\r\n    }\r\n\r\n    initiateLevel() {\r\n\r\n        this.currentLevelNumber += 1;\r\n        if (this.currentLevelNumber >= this.levels.length){\r\n            this.ball.stopped = true;\r\n            return this.victoryMessage();\r\n        }\r\n        const level = new this.levels[this.currentLevelNumber](this);\r\n        this.ball = level.ball;\r\n        this.currentPlanet = level.currentPlanet;\r\n        this.launchPad = level.launchPad;\r\n        this.planets=level.planets;\r\n        this.hole = level.hole;\r\n        this.obstacles = level.obstacles;\r\n        this.corners = level.corners;\r\n        this.startButton = level.startButton;\r\n        this.playSpeed = {num: 1, fractional: false};\r\n\r\n        this.canvas.addEventListener(\"keydown\", this.setPlaySpeed, false);\r\n\r\n        if (!this.startButton){this.setupLaunchPad();}\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n\r\n    restartLevel() {\r\n        this.currentLevelNumber -= 1;\r\n        this.initiateLevel();\r\n    }\r\n\r\n    setPlaySpeed(event){\r\n        if (![70,83].includes(event.keyCode)) return;\r\n        if (event.keyCode === 70){\r\n            if (this.playSpeed.fractional){\r\n                if ([2,3,4].includes(this.playSpeed.num)) {\r\n                    this.playSpeed.num -= 1;\r\n                }\r\n                else if (this.playSpeed.num === 1) {\r\n                    this.playSpeed.fractional = false;\r\n                    this.playSpeed.num = 2;\r\n                }   \r\n            }\r\n            else {\r\n                if ([1,2,3].includes(this.playSpeed.num)) {\r\n                    this.playSpeed.num += 1;\r\n            }\r\n            }\r\n        }\r\n        if (event.keyCode === 83) {\r\n            if (this.playSpeed.fractional){\r\n                if ([1,2,3].includes(this.playSpeed.num)) {\r\n                    this.playSpeed.num += 1;\r\n                }\r\n            }\r\n            else {\r\n                if ([2,3,4].includes(this.playSpeed.num)) {\r\n                    this.playSpeed.num -=1;\r\n                }\r\n                else if (this.playSpeed.num === 1){\r\n                    this.playSpeed.fractional = true;\r\n                    this.playSpeed.num = 2;\r\n                }\r\n            }\r\n        } \r\n        this.playSpeedMessage = new TimedMessage(\r\n            `Playspeed: ${this.playSpeed.fractional ? \r\n                (1/this.playSpeed.num).toFixed(2) : this.playSpeed.num}`);\r\n    }\r\n    \r\n    victoryMessage(){\r\n        const ctx = this.ctx;\r\n        ctx.beginPath();\r\n        ctx.fillStyle = \"white\"\r\n        ctx.font = `${30}px Arial`;\r\n        ctx.fillText('You win!', \r\n       400, 400);\r\n        ctx.fill();\r\n    }\r\n\r\n   \r\n        \r\n    setupLaunchPad(){\r\n        let game = this;\r\n        let canvas = game.canvas;\r\n        let setVelocityWithMouse = e => this.launchPad.setVelocity(e);\r\n        let launchBallWithMouse =  e => {if (this.launchPad.launch()){\r\n            canvas.removeEventListener('mousemove', setVelocityWithMouse, false);\r\n            canvas.removeEventListener(\"click\", launchBallWithMouse, false);\r\n            canvas.removeEventListener(\"keydown\", keyDownHandler, false);\r\n\r\n        }}\r\n        let keyDownHandler = e => {\r\n            canvas.removeEventListener('mousemove', setVelocityWithMouse, false);\r\n            game.launchPad.setVelocityByArrowKeys(e, () => {\r\n            canvas.removeEventListener('keydown', keyDownHandler, false); \r\n            canvas.removeEventListener(\"click\", launchBallWithMouse, false);\r\n            });\r\n        }\r\n        canvas.addEventListener(\"mousemove\", setVelocityWithMouse, false);\r\n        canvas.addEventListener('keydown', keyDownHandler, false);\r\n        canvas.addEventListener(\"click\", launchBallWithMouse, false);\r\n    }\r\n    \r\n    step(delta) {\r\n        this.moveObjects(delta);\r\n    }\r\n\r\n    moveObjects() {\r\n        let {playSpeed} = this;\r\n        if (playSpeed.fractional){\r\n            if (this.frameCount % playSpeed.num ===0 ){\r\n                this.ball.move();\r\n              if (!this.ball.checkRectangle(this.corners)){\r\n                this.restartLevel();\r\n                return;\r\n                 }\r\n            }\r\n\r\n        }\r\n        else {\r\n            for (let i = 1; i <= playSpeed.num; i++) {\r\n                this.ball.move();\r\n              if (!this.ball.checkRectangle(this.corners)){\r\n                this.restartLevel();\r\n                return;\r\n                 }\r\n            }\r\n        }\r\n    }\r\n    animate(time) {\r\n        if (this.hole.checkForWin()){\r\n            this.ball.stopped = true;\r\n            return this.initiateLevel();\r\n        }\r\n        const timeDelta = time - this.lastTime;\r\n        this.step(timeDelta);\r\n        this.draw();\r\n        this.lastTime = time;\r\n        this.frameCount += 1;\r\n\r\n        // every call to animate requests causes another call to animate\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n    draw() {\r\n        let ctx=this.ctx;\r\n        let ball = this.ball;\r\n        ctx.width = 1200;\r\n        ctx.height = 600;\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(0, 0, 1000, 600);\r\n        this.launchPad.draw(ctx);\r\n        this.hole.drawFlag(ctx);\r\n        if (this.playSpeed.fractional && this.playSpeed.num > 1){\r\n            const num = this.playSpeed.num;\r\n            const residue = this.frameCount % num;\r\n            ball.draw(\r\n                ctx, \r\n                (residue/num) * ball.x + (1 - residue/num) * ball.prevx,\r\n                (residue/num) * ball.y + (1 - residue/num) * ball.prevy\r\n                )\r\n        }\r\n        else {\r\n            ball.draw(ctx);\r\n        }\r\n        this.obstacles.forEach(obstacle => obstacle.draw(ctx));\r\n        this.hole.drawHole(ctx);\r\n        this.planets.forEach(planet => planet.draw(ctx));\r\n        if(this.startButton) this.startButton.draw(ctx);\r\n        if (this.playSpeedMessage) this.playSpeedMessage.draw(ctx);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Game;","import Game from './game';\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n    const game = new Game();\r\n    game.initiateLevel();\r\n});\r\n"],"sourceRoot":""}