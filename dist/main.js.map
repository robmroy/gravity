{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ball.js","webpack:///./src/launchpad.js","webpack:///./src/planet.js","webpack:///./src/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ball","[object Object]","game","x","y","radius","color","vx","vy","this","draw","move","stopped","logging","console","log","planets","forEach","planet","dx","dy","dz2","dz","Math","sqrt","mass","obstacles","obstacle","checkForBall","bounce","ctx","beginPath","fillStyle","arc","PI","fill","error","rect","document","getElementById","getBoundingClientRect","launchpad","width","height","launch","launchVx","launchVy","fillRect","event","cursor","clientX","clientY","density","font","floor","fillText","src_game","level","canvas","getContext","launchPad","start","func","e","setVelocity","addEventListener","removeEventListener","requestAnimationFrame","animate","delta","moveObjects","time","timeDelta","lastTime","step"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\nclass Ball {\r\n    constructor(game, x = 0, y = 0, radius = 5, color = \"white\", vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.stopped = true;\r\n        this.logging = false;\r\n    }\r\n\r\n    move(){\r\n        if(this.logging){\r\n            console.log(`ballx is ${this.x}`);\r\n            console.log(`bally is ${this.y}`);\r\n        }\r\n        if (!this.stopped){\r\n\r\n            this.x += this.vx;\r\n            this.y += this.vy;\r\n            this.game.planets.forEach(planet => {\r\n                const dx = this.x - planet.x;\r\n                const dy = this.y - planet.y;\r\n                const dz2 = ((dx)**2 + (dy)**2);\r\n                const dz = Math.sqrt(dz2);\r\n        \r\n                if (dz <=  this.radius + planet.radius){\r\n                  this.stopped = true;\r\n                }\r\n                else{\r\n                this.vx -= (1/dz2)*planet.mass * dx/dz * .7;\r\n                this.vy -= (1/dz2)*planet.mass * dy/dz * .7;\r\n                } \r\n        });\r\n        this.game.obstacles.forEach(obstacle => {\r\n            if (obstacle.checkForBall()){\r\n                obstacle.bounce();\r\n            }\r\n        })\r\n    };\r\n    \r\n    }\r\n    draw(ctx ) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          this.x, this.y, this.radius, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default Ball;","const error = () => {let m = document.getElementById(\"game-canvas\");\r\nlet rect = m.getBoundingClientRect();\r\nreturn {x: rect.x, y: rect.y};\r\n}\r\n\r\nclass LaunchPad {\r\n   constructor(game, x = 0, y = 0, width = 100, height = 100, color = \"yellow\"){\r\n      this.game = game;\r\n      this.x = x;\r\n      this.y = y;\r\n      this.width = width;\r\n      this.width = width;\r\n      this.height = height;\r\n      this.color = color;\r\n      this.draw= this.draw.bind(this);\r\n      this.move = this.move.bind(this);\r\n      this.launch = this.launch.bind(this);\r\n      this.launchVx = 0;\r\n      this.launchVy=0;\r\n  }\r\n\r\n  move(){\r\n      this.x += this.vx;\r\n      this.y += this.vy;\r\n  }\r\n  draw(ctx ) {\r\n     ctx.beginPath();\r\n     ctx.fillStyle = this.color;\r\n     ctx.fillRect(this.x, this.y, this.width, this.height);\r\n      ctx.fill();\r\n    }\r\n\r\n    launch(){\r\n       this.game.ball.stopped = false;\r\n       this.game.ball.vx = this.launchVx;\r\n       this.game.ball.vy = this.launchVy;\r\n    }\r\n\r\n    setVelocity(ball, event){\r\n\r\n      const cursor = {x: event.clientX -error().x, y: event.clientY - error().y};\r\n      if (cursor.x>=this.x && cursor.x <= this.x + this.width \r\n         && cursor.y >= this.y && cursor.y <= this.height + this.y) {\r\n            var dx = cursor.x - ball.x ;\r\n            var dy = cursor.y - ball.y ;\r\n        \r\n            var coor = \"Choose Vector. X coords: \" + ball.x + \", Y coords: \" + ball.y;\r\n            coor += `Vector: [${dx}, ${dy}]`;\r\n            this.launchVx = dx/ 5;\r\n            this.launchVy = dy/ 5;\r\n            \r\n            // document.getElementById(\"demo\").innerHTML = coor;\r\n            console.log(`ball.x=${ball.x}`)\r\n            \r\n            \r\n            // var ctx = c.getContext(\"2d\");\r\n            // ctx.fillStyle=\"black\";\r\n            // ctx.fillRect(0,0,900,600);\r\n            // ctx.beginPath();\r\n            // ctx.moveTo(ball.x, ball.y);\r\n            // ctx.lineTo(event.clientX - error().x, event.clientY - error().y);\r\n            // ctx.stroke();\r\n\r\n         }   \r\n    }\r\n   }\r\n\r\n   export default LaunchPad;\r\n","\r\nclass Planet {\r\n    constructor(game, x = 0, y = 0, radius = 10, color = \"grey\", density, vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.density = density || 1;\r\n        this.mass = this.density * this.radius**3;\r\n    }\r\n\r\n    move(){\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n    }\r\n    draw(ctx ) {\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          this.x, this.y, this.radius, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.font = `${Math.floor(.9 * this.radius)}px Arial`;\r\n        ctx.fillText(`Density: ${this.density}`, \r\n        `${this.x - 1.9* this.radius}`,\r\n         `${this.y + 2* this.radius}`);\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default Planet;","import Ball from './ball';\r\nimport LaunchPad from './launchpad';\r\nimport Obstacles from './obstacles';\r\nimport Planets from './planets';\r\nimport Planet from './planet';\r\nimport Obstacle from './obstacle';\r\n\r\nclass Game {\r\n\r\n    constructor(level) {\r\n        this.canvas = document.getElementById(\"game-canvas\");\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n\r\n        this.ball = new Ball(this, 300, 50);\r\n        this.draw = this.draw.bind(this);\r\n        this.launchPad = new LaunchPad(this, 250);\r\n        this.start = this.start.bind(this);\r\n        this.planets = [\r\n            new Planet(this, 300, 520, 22,  \"red\"), \r\n            new Planet(this, 620, 250, 15, \"purple\", 10)\r\n        ]\r\n            this.obstacles=[];\r\n        this.obstacles = [\r\n            // new Obstacle(this, 800, 300, 600, 600)\r\n        ];\r\n        // this.planets = new Planets(level);\r\n        // this.launchpad = new LaunchPad(level);\r\n        // this.obstacles = new Obstacles(level);\r\n    }\r\n    start() {\r\n        // this.bindKeyHandlers();\r\n        // this.lastTime = 0;\r\n        let func = e => this.launchPad.setVelocity(this.ball, e);\r\n        this.canvas.addEventListener(\r\n            'mousemove', \r\n        func\r\n        )\r\n        this.canvas.addEventListener(\r\n            \"click\",\r\n            e => {this.launchPad.launch();\r\n                document.getElementById(\"game-canvas\").removeEventListener('mousemove', func);\r\n            })\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n    step(delta) {\r\n        this.moveObjects(delta);\r\n    }\r\n\r\n    moveObjects() {\r\n        this.ball.move();\r\n    }\r\n    animate(time) {\r\n        const timeDelta = time - this.lastTime;\r\n        this.step(timeDelta);\r\n        this.draw();\r\n        this.lastTime = time;\r\n\r\n        // every call to animate requests causes another call to animate\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n    draw() {\r\n        let ctx=this.ctx;\r\n        ctx.width = 1200;\r\n        ctx.height = 600;\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(0, 0, 1000, 600);\r\n        this.launchPad.draw(ctx);\r\n        this.ball.draw(ctx);\r\n        this.planets.forEach(planet => planet.draw(ctx));\r\n        this.obstacles.forEach(obstacle => obstacle.draw(ctx));\r\n    }\r\n\r\n}\r\n\r\nexport default Game;","import Game from './game';\r\n\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n    const game = new Game(1);\r\n    game.start();\r\n});\r\n"],"sourceRoot":""}