{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/fast-random/index.js","webpack:///./src/helper.js","webpack:///./src/launchpad.js","webpack:///./src/ball.js","webpack:///./src/Sticky_planet.js","webpack:///./src/hole.js","webpack:///./src/levels/level2.js","webpack:///./src/timedMessage.js","webpack:///./src/viewport.js","webpack:///./src/stars.js","webpack:///./src/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","seed","_seed","_nextInt","nextInt","nextFloat","dottedArc","ctx","x","y","radius","theta0","theta1","color","theta","numPieces","Math","ceil","dTheta","strokeStyle","beginPath","arc","stroke","vectorAngle","vector","PI","atan","vectorLength","sqrt","intervalsIntersect","interval1","interval2","a1","b1","a2","b2","launchpad_error","rect","document","getElementById","getBoundingClientRect","launchpad","[object Object]","game","normal","this","draw","move","launch","arrowVector","updatePolar","updateArrowTip","updateLaunchVelocity","launchVx","launchVy","normalAngle","setVelocity","arrowTip","arrowAngle","arrowLength","setVelocityByArrowKeys","vx","vy","vp","displayPos","x1","y1","cos","sin","vpX","vpY","currentPlanet","hideText","setLineDash","moveTo","lineTo","drawArrowBits","textX","textY","fillStyle","font","fillText","toFixed","fill","ball","textPos","stopped","event","cursor","clientX","clientY","dx","dy","callback","al","keyCode","max","min","includes","src_ball","playSpeed","ax","ay","prevx","prevy","drawX","drawY","interpolateX","interpolateY","fractional","num","residue","frameCount","corners","logging","console","log","planets","forEach","planet","dz2","dz","ballData","error","sticky","abs","stop","launchPad","setupLaunchPad","bounce","mass","obstacles","obstacle","checkForBall","setAuxPositions","Sticky_planet","density","floor","hole","width","drawFlag","drawHole","prevPerpComponent","perpComponent","level2","timedMessage","text","duration","viewport","x2","y2","zoom","setMovementStart","moveWithBall","movementStartX","movementStartY","ballX","ballY","ballOvershoot","catchupX","catchupY","pojo","src_stars","level","topLeft","bottomRight","blocks","starsPerBlock","xInThousands","yInThousands","frandom","fast_random_default","stars","Array","length","src_game","canvas","setAttribute","getContext","levels","currentLevelNumber","initiateLevel","setPlaySpeed","restartLevel","keyRestart","timedMessages","addEventListener","window","printo","JSON","stringify","requestAnimationFrame","animate","startButton","generateBlock","viewportMovementStartX","viewportMovementStartY","setVelocityWithMouse","e","launchBallWithMouse","removeEventListener","keyDownHandler","arrowCodes","delta","moveObjects","message","filter","checkRectangle","time","timeDelta","lastTime","step","checkForWin","won","height","fillRect","j","getBlock","drawBlock","victoryMessage"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","function random(seed) {\n\tfunction _seed(s) {\n\t\tif ((seed = (s|0) % 2147483647) <= 0) {\n\t\t\tseed += 2147483646;\n\t\t}\n\t}\n\n\tfunction _nextInt() {\n\t\treturn seed = seed * 48271 % 2147483647;\n\t}\n\n\tfunction _nextFloat() {\n\t\treturn (_nextInt() - 1) / 2147483646;\n\t}\n\n\t_seed(seed);\n\n\treturn {\n\t\tseed: _seed,\n\t\tnextInt: _nextInt,\n\t\tnextFloat: _nextFloat\n\t};\n}\n\nmodule.exports = random;\n","export const dottedArc = function(ctx, x, y, radius, theta0, theta1, color){\r\n    const a = .1;\r\n    let theta = theta1 - theta0;\r\n    let numPieces = 2* Math.ceil(.5*(theta/a - 1)) + 1;\r\n    let dTheta = theta/numPieces;\r\n    ctx.strokeStyle = color;\r\n    for (let i=0; i < numPieces; i++){ \r\n        ctx.beginPath();\r\n        if (i % 2 == 0){\r\n            ctx.arc(\r\n                x, y, radius, theta0 + i*dTheta, theta0+(i+1)*dTheta \r\n                );\r\n                ctx.stroke();\r\n            \r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const vectorAngle = function(vector){\r\n    const x = vector[0];\r\n    const y = vector[1];\r\n    if (x==0){\r\n        return y > 0 ? Math.PI/2 : -Math.PI/2;\r\n    }\r\n    \r\n    return x > 0 ? Math.atan(y/x) : Math.PI + Math.atan(y/x);\r\n    \r\n}\r\n\r\nexport const vectorLength = function(vector){\r\n    return Math.sqrt(vector[0] ** 2 + vector[1] ** 2);\r\n}\r\n\r\n\r\nexport const intervalsIntersect = function (interval1, interval2){\r\n    let [a1, b1] = interval1;\r\n    let [a2, b2] = interval2;\r\n    return (b2 - a1)*(a2-a1) <= 0 ||  (b2 - b1)*(a2-b1) <= 0\r\n    || (b1 - a2) * (a1-a2) <=0 || (b1 - b2) * (a1-b2) <=0;\r\n}\r\n","import {dottedArc, vectorAngle, vectorLength} from './helper';\r\nconst error = () => {let m = document.getElementById(\"game-canvas\");\r\nlet rect = m.getBoundingClientRect();\r\nreturn {x: rect.x, y: rect.y};\r\n}\r\n\r\nclass LaunchPad {\r\n   constructor(game, x = 0, y = 0, normal = [0,1], radius = 80,  color = \"white\"){\r\n      this.game = game;\r\n      this.x = x;\r\n      this.y = y;\r\n      this.normal = normal;\r\n      this.radius = radius;\r\n      this.color = color;\r\n      this.draw= this.draw.bind(this);\r\n      this.move = this.move.bind(this);\r\n      this.launch = this.launch.bind(this);\r\n      this.arrowVector = this.arrowVector.bind(this);\r\n      this.updatePolar = this.updatePolar.bind(this);\r\n      this.updateArrowTip = this.updateArrowTip.bind(this);\r\n      this.updateLaunchVelocity = this.updateLaunchVelocity.bind(this);\r\n      this.launchVx = 0;\r\n      this.launchVy=0;\r\n      this.normalAngle = vectorAngle(normal);\r\n      this.setVelocity = this.setVelocity.bind(this);\r\n      this.arrowTip = {x: null, y: null};\r\n      this.arrowAngle = this.normalAngle;\r\n      this.arrowLength = 60;\r\n      this.setVelocityByArrowKeys = this.setVelocityByArrowKeys.bind(this);\r\n  }\r\n\r\n  move(){\r\n      this.x += this.vx;\r\n      this.y += this.vy;\r\n  }\r\n\r\n  vpX(){\r\n    return this.game.vp.displayPos(this).x;\r\n   }\r\n   vpY(){\r\n      return this.game.vp.displayPos(this).y;\r\n   }\r\n\r\n  arrowVector(){\r\n     const vp = this.game.vp;\r\n     return [this.arrowTip.x-this.x + vp.x1, this.arrowTip.y-this.y + vp.y1];\r\n  }\r\n  updatePolar(){\r\n   this.arrowLength = vectorLength(this.arrowVector());\r\n   this.arrowAngle = vectorAngle(this.arrowVector());\r\n  }\r\n  updateArrowTip(){\r\n     let vp = this.game.vp;\r\n     this.arrowTip.x = this.x -vp.x1 + this.arrowLength*Math.cos(this.arrowAngle);\r\n     this.arrowTip.y = this.y - vp.y1 + this.arrowLength*Math.sin(this.arrowAngle);\r\n  }\r\n  updateLaunchVelocity(){\r\n     this.launchVx = this.arrowVector()[0]/4;\r\n     this.launchVy = this.arrowVector()[1]/4;\r\n  }\r\n  draw(ctx ) {\r\n   let x = this.vpX();\r\n   let y = this.vpY();\r\n   dottedArc(ctx, x, y, this.radius, \r\n      this.normalAngle - Math.PI/2, this.normalAngle + Math.PI/2, this.color);\r\n      let currentPlanet = this.game.currentPlanet;\r\n      if(this.arrowTip.x === null){currentPlanet.hideText = false;}\r\n   if (this.arrowTip.x !== null){\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = \"white\";\r\n      ctx.setLineDash([5,5]);\r\n     ctx.moveTo(x, y);\r\n     ctx.lineTo(this.arrowTip.x, this.arrowTip.y)\r\n     ctx.stroke();\r\n     this.drawArrowBits(ctx);\r\n     ctx.beginPath();\r\n      let textX = 0.5 * (x + this.arrowTip.x);\r\n      let textY = 0.5 * (y + this.arrowTip.y);\r\n        ctx.fillStyle = \"purple\"\r\n        ctx.font = `${21}px Arial`;\r\n        ctx.fillText(`Initial speed: ${(this.arrowLength/4).toFixed(2)}`, \r\n        `${textX}`,\r\n         `${textY}`);\r\n        ctx.fill();\r\n        let vp = this.game.vp;\r\n        let ball = this.game.ball;\r\n        if (textX  >=currentPlanet.textPos.x - vp.x1 - 150  && \r\n           textY >= currentPlanet.textPos.y - vp.y1 - 28 + ball.radius  &&\r\n         textY  <= currentPlanet.textPos.y - vp.y1 + 8 + ball.radius){\r\n            currentPlanet.hideText = true;\r\n         }\r\n         else { currentPlanet.hideText = false;}\r\n     \r\n   }\r\n}\r\n   drawArrowBits(ctx) {\r\n      let {x, y, arrowTip, game} = this;\r\n       x -= game.vp.x1;\r\n      y-= game.vp.y1;\r\n\r\n      const theta = vectorAngle([arrowTip.x - x, arrowTip.y -y] );\r\n      ctx.setLineDash([]);\r\n      ctx.beginPath();\r\n      ctx.moveTo(arrowTip.x, arrowTip.y);\r\n      ctx.lineTo(\r\n         arrowTip.x + 12 * Math.cos(theta + 3*Math.PI/4), \r\n         arrowTip.y + 12* Math.sin(theta + 3*Math.PI/4));\r\n      ctx.moveTo(arrowTip.x, arrowTip.y);\r\n      ctx.lineTo(\r\n         arrowTip.x + 12 * Math.cos(theta - 3*Math.PI/4), \r\n         arrowTip.y + 12* Math.sin(theta - 3*Math.PI/4));\r\n      ctx.stroke();\r\n\r\n   }\r\n\r\n    launch(){\r\n       if (this.arrowTip.x === null){\r\n          return false;\r\n       }\r\n       this.game.ball.stopped = false;\r\n       this.game.ball.vx = this.launchVx;\r\n       this.game.ball.vy = this.launchVy;\r\n       return true;\r\n    }\r\n\r\n    setVelocity(event){\r\n      const vp = this.game.vp;\r\n      const cursor = {x: event.clientX -error().x, y: event.clientY - error().y};\r\n      const dx = cursor.x - this.x +vp.x1;\r\n      const dy = cursor.y - this.y + vp.y1;\r\n      if (\r\n         dx**2 + dy**2 <= this.radius ** 2 &&\r\n          dx * this.normal[0] + dy * this.normal[1] >= 0\r\n          ) {\r\n             this.arrowTip.x = cursor.x;\r\n             this.arrowTip.y = cursor.y;\r\n\r\n            this.updateLaunchVelocity();\r\n           \r\n            this.updatePolar();\r\n            \r\n         }   \r\n         else {this.arrowTip.x = null;}\r\n    }\r\n    setVelocityByArrowKeys(event, callback){\r\n       const al = this.arrowLength;\r\n       if (event.keyCode === 40){\r\n         this.arrowLength = Math.max(al -.4, 0);\r\n       }\r\n       if (event.keyCode === 38){\r\n         this.arrowLength = Math.min(al + .4, this.radius);\r\n       }\r\n       if (event.keyCode === 37){\r\n          this.arrowAngle -= .01;\r\n       }\r\n       if (event.keyCode === 39){\r\n          this.arrowAngle += .01;\r\n      }\r\n      if ([32,13].includes(event.keyCode)){\r\n         if (this.launch()){\r\n            callback();\r\n         }\r\n       }\r\n       this.updateArrowTip();\r\n       this.updateLaunchVelocity();\r\n       \r\n    }\r\n   }\r\n\r\n   export default LaunchPad;\r\n","import LaunchPad from \"./launchpad\";\r\nclass Ball {\r\n    constructor(game, x = 0, y = 0, radius = 5, playSpeed = 1, color = \"white\", vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.ax = 0;\r\n        this.ay = 0;\r\n        this.stopped = true;\r\n        this.prevx =x ;\r\n        this.prevy = y;\r\n        this.drawX = x;\r\n        this.drawY = y;\r\n        this.interpolateX = x;\r\n        this.interpolateY = y;\r\n    }\r\n\r\n    vpX(){\r\n        return this.game.vp.displayPos(this).x;\r\n    }\r\n    vpY(){\r\n        return this.game.vp.displayPos(this).y;\r\n    }\r\n\r\n    setAuxPositions(){\r\n        const playSpeed = this.game.playSpeed;\r\n        const vp = this.game.vp;\r\n        if (playSpeed.fractional && playSpeed.num > 1){\r\n            const num = playSpeed.num;\r\n            const residue = this.game.frameCount % num;\r\n            this.interpolateX =   (residue/num) * this.x + (1 - residue/num) * this.prevx;\r\n            this.interpolateY = (residue/num) * this.y + (1 - residue/num) * this.prevy; \r\n        }\r\n        else {\r\n            this.interpolateX = this.x;\r\n            this.interpolateY = this.y ;\r\n        }\r\n        this.drawX = this.interpolateX - vp.x1;\r\n         this.drawY = this.interpolateY - vp.y1;\r\n    }\r\n    \r\n    checkRectangle(corners){\r\n        const {x, y} = this;\r\n        return x > corners[0][0] && x < corners[1][0] && y > corners[0][1] && y < corners[1][1];\r\n    }\r\n\r\n    // setPlaySpeed(event){\r\n    //     if (event.keyCode === 70 && this.playSpeed < 4 ){\r\n    //         this.playSpeed += .2;\r\n    //     }\r\n    //     if (event.keyCode === 83 && this.playSpeed >= .4) {\r\n    //         this.playSpeed -= .2;\r\n    //     } \r\n    //     this.accelCorrection = this.playSpeed ** (-.88);\r\n    // }\r\n    stop(){\r\n        this.stopped = true;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n    }\r\n    move(){\r\n        if(this.logging){\r\n            console.log(`ballx is ${this.x}`);\r\n            console.log(`bally is ${this.y}`);\r\n        }\r\n\r\n        this.prevx = this.x;\r\n        this.prevy = this.y;\r\n        if (this.stopped) return;\r\n        // this.x += this.playSpeed*this.vx;\r\n        // this.y += this.playSpeed* this.vy;\r\n        // this.vx += this.accelCorrection * this.playSpeed**2 * this.ax;\r\n        // this.vy += this.accelCorrection * this.playSpeed**2 * this.ay;\r\n        this.x += this.vx;\r\n        this.y +=  this.vy;\r\n        this.vx +=  this.ax;\r\n        this.vy +=  this.ay;\r\n        \r\n        // if (Math.abs(this.vx) + Math.abs(this.vy) < 0.4\r\n        // && Math.abs(this.ax) + Math.abs(this.ay) <0.1){\r\n        //     this.stop();}\r\n\r\n        this.ax = 0;\r\n        this.ay = 0;\r\n            \r\n        this.game.planets.forEach(planet => {\r\n            const {dx, dy, dz2, dz, normal} = planet.ballData();\r\n            if (dz <=  this.radius + planet.radius){\r\n                let error = this.radius + planet.radius - dz;\r\n                this.x += error * normal[0];\r\n                this.y += error * normal[1];\r\n                this.ax = 0;\r\n                this.ay = 0;\r\n                if (planet.sticky || Math.abs(this.vx) + Math.abs(this.vy)<1 ){\r\n                    this.stop();\r\n                this.game.currentPlanet = planet;\r\n                this.game.launchPad = new LaunchPad(this.game, this.x, this.y, normal);\r\n                this.game.setupLaunchPad();\r\n            }\r\n                else{planet.bounce(normal);}\r\n                \r\n            }\r\n            else{\r\n            this.ax -= (1/dz2)*planet.mass * dx/dz * .2;\r\n            this.ay -= (1/dz2)*planet.mass * dy/dz * .2;\r\n            } \r\n        });\r\n        this.game.obstacles.forEach(obstacle => {\r\n            if (obstacle.checkForBall()){\r\n                obstacle.bounce();\r\n            }\r\n        })\r\n    \r\n    \r\n    }\r\n    draw(ctx, r = this.radius ) {\r\n        this.setAuxPositions();\r\n        ctx.beginPath();\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          this.drawX, this.drawY, r, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default Ball;","\r\nclass StickyPlanet {\r\n    constructor(game, x = 0, y = 0, radius = 10, color = \"grey\", density, vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.density = density || 1;\r\n        this.mass = this.density * this.radius**3;\r\n        this.sticky = true;\r\n        this.hideText = false;\r\n        this.textPos={x: x + radius + 2, y: y+ radius + .5};\r\n    }\r\n\r\n    vpX(){\r\n      return this.game.vp.displayPos(this).x;\r\n  }\r\n\r\n  vpY(){\r\n      return this.game.vp.displayPos(this).y;\r\n  }\r\n\r\n    move(){\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n    }\r\n\r\n    ballData(){\r\n      const ball = this.game.ball;\r\n      const dx = ball.x - this.x;\r\n      const dy = ball.y - this.y;\r\n      const dz2 = ((dx)**2 + (dy)**2);\r\n      const dz = Math.sqrt(dz2);\r\n      const normal = [dx/dz, dy/dz];\r\n      return {dx, dy, dz2, dz, normal}\r\n  }\r\n\r\n    draw(ctx, x = this.x, y = this.y, r = this.radius ) {\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          x, y, r, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.font = `${Math.floor(.9 * r)}px Arial`;\r\n        ctx.fill();\r\n        if (!this.hideText){\r\n          ctx.beginPath();\r\n        ctx.fillStyle = \"#3e78ad\"\r\n        ctx.font = `${14}px Arial`;\r\n        ctx.fillText(`Escape vel. ${(this.radius * this.density **.45 *.504 ).toFixed(2)}`, \r\n        `${x +  r + 2}`,\r\n         `${y + .5 * r + this.game.ball.radius}`);\r\n        ctx.fill();\r\n      };\r\n    }\r\n}\r\n\r\nexport default StickyPlanet;","import {intervalsIntersect} from './helper';\r\nclass Hole {\r\n    constructor(game, x, y, normal = [0,-1], width = 100){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.drawFlag= this.drawFlag.bind(this);\r\n        this.drawHole= this.drawHole.bind(this);\r\n        this.normal = normal;\r\n        this.drawFlag = this.drawFlag.bind(this);\r\n        this.drawHole = this.drawHole.bind(this);\r\n    }\r\n\r\n    vpX(){\r\n        return this.game.vp.displayPos(this).x;\r\n    }\r\n    vpY(){\r\n        return this.game.vp.displayPos(this).y;\r\n    }\r\n \r\n   move(){\r\n       this.x += this.vx;\r\n       this.y += this.vy;\r\n   }\r\n\r\n   drawFlag(ctx, x = this.x, y = this.y ) {\r\n       let normal = this.normal;\r\n       ctx.setLineDash([]);\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = \"gold\";\r\n      ctx.moveTo(x, y);\r\n      ctx.lineTo(x + 50* normal[0] , y + 50 * normal[1])\r\n       ctx.stroke();\r\n       ctx.fillStyle = \"red\";\r\n       ctx.moveTo(x + 50* normal[0] , y + 50 * normal[1]);\r\n       ctx.lineTo(x + 70* normal[0] , y + 70 * normal[1]);\r\n       ctx.lineTo(x + 60* normal[0] - 20* normal[1], y + 60 * normal[1] + 20 * normal[0]);\r\n       ctx.lineTo(x + 50* normal[0] , y + 50 * normal[1]);\r\n       ctx.fill();\r\n     }\r\n     drawHole(ctx, x = this.x, y = this.y) {\r\n         let {width, normal} = this;\r\n         let ball = this.game.ball;\r\n             ctx.beginPath();\r\n             ctx.strokeStyle = \"purple\";\r\n             ctx.moveTo(x - normal[1] * width/2 , y + normal[0] * width/2 );\r\n             ctx.lineTo(x +  normal[1] * width/2, y - normal[0] * width/2);\r\n             ctx.stroke();\r\n             ctx.beginPath();\r\n             ctx.fillStyle = \"black\";\r\n             ctx.moveTo(x + normal[1] * width/2, y - normal[0] * width/2);\r\n             ctx.lineTo(x + normal[1] * width/2 -30 * normal[0],\r\n                 y - normal[0] * width/2 -30*normal[1]);\r\n             ctx.lineTo(x - normal[1] * width/2 -30 * normal[0],\r\n                y + normal[0] * width/2 -30*normal[1]);\r\n            ctx.lineTo(x - normal[1] * width/2 ,\r\n                y + normal[0] * width/2);\r\n             ctx.lineTo(x + normal[1] * width/2, y - normal[0] * width/2 );\r\n             ctx.fill();\r\n         \r\n\r\n        }\r\n        checkForWin(){\r\n            let {x, y, width, normal} = this;\r\n            let ball = this.game.ball;\r\n            // let result = ball.y -ball.radius> y \r\n            // && ball.y-2*ball.radius < y\r\n            // && Math.abs(ball.x - x) < width/2\r\n            // && ball.vy >0;\r\n            \r\n            // return result;\r\n\r\n            let prevPerpComponent = normal[0] * (ball.prevx - x) + normal[1]*(ball.prevy-y);\r\n            let perpComponent = normal[0] * (ball.x - x) + normal[1]*(ball.y-y);\r\n            return prevPerpComponent < 0  && perpComponent > 0\r\n            && intervalsIntersect([ ball.prevx, ball.x], [x - 0.5 * width* normal[1], x+ 0.5* width * normal[1]]) \r\n            && intervalsIntersect([ ball.prevy, ball.y], [y - 0.5 * width* normal[0], y + 0.5 * width* normal[0]]);\r\n        }\r\n \r\n    \r\n     \r\n    }\r\n \r\n    export default Hole;\r\n ","import Ball from '../ball';\r\nimport LaunchPad from '../launchpad';\r\nimport StickyPlanet from '../Sticky_planet';\r\nimport Obstacle from '../obstacle';\r\nimport BouncyPlanet from '../bouncy_planet';\r\nimport Hole from '../hole';\r\n\r\nclass Level2 {\r\n    constructor(game){\r\n    this.ball = new Ball(game, 600, 440);\r\n        this.currentPlanet = new StickyPlanet(game, 600, 470, 25, \"#27753a\", 1);\r\n        this.corners = [[-200, -200], [2400, 1900]];\r\n        this.launchPad = new LaunchPad(game, 600, 440, [0, -1]);\r\n        this.planets = [\r\n            this.currentPlanet,\r\n            \r\n        ]\r\n        this.hole = new Hole(game, 640, 320);\r\n        this.obstacles=[];\r\n        // this.obstacles = [\r\n        //     new Obstacle(game, 90, 0, 90, 900)   ,\r\n        //     new Obstacle(game, 600, 40, 850, 300)\r\n        // ]\r\n        }\r\n}\r\n\r\nexport default Level2;","class TimedMessage{\r\n    constructor(text, duration = 60, font = '30px Arial', x = 400, y = 300) {\r\n        this.text = text;\r\n        this.duration = duration;\r\n        this.font = font;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    draw(ctx){\r\n        ctx.beginPath();\r\n        ctx.fillStyle = \"#3e78ad\"\r\n        ctx.font = this.font;\r\n        ctx.fillText(this.text, \r\n        this.x,\r\n        this.y);\r\n        ctx.fill();\r\n    }\r\n}\r\n\r\nexport default TimedMessage;","class Viewport {\r\n    constructor(x1 = 0, y1 =0, x2 = 1200 + x1, y2 = 600 + y1, zoom =100){\r\n        this.x1 = x1;\r\n        this.y1= y1;\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n        this.zoom = zoom;\r\n        this.setMovementStart = this.setMovementStart.bind(this);\r\n        this.moveWithBall = this.moveWithBall.bind(this);\r\n    }\r\n    setMovementStart(x,y){\r\n        this.movementStartX = x;\r\n        this.movementStartY = y;\r\n    }\r\n    moveWithBall(ballX, ballY, ball){\r\n        let {x1, x2, y1, y2} = this;\r\n        let ballOvershoot = {x: ballX - .5*(x1+x2), y: ballY - .5 *(y1+y2)};\r\n        if (ballOvershoot.x  > 0 && ballX > this.movementStartX){\r\n            const catchupX = Math.min(ballOvershoot.x, 1.4 * ball.vx);\r\n            this.x1 += catchupX;\r\n            this.x2 += catchupX;\r\n        }\r\n        if (ballOvershoot.y  > 0 && ballY > this.movementStartY){\r\n            const catchupY = Math.min(ballOvershoot.y, 1.4 * ball.vy);\r\n            this.y1 += catchupY;\r\n            this.y2 += catchupY;\r\n        }\r\n    }\r\n\r\n    displayPos(pojo){\r\n        return {x: pojo.x - this.x1, y: pojo.y - this.y1 }\r\n    }\r\n}\r\n\r\nexport default Viewport;","import fastRandom from 'fast-random';\r\n\r\nclass Stars {\r\n    constructor(level){\r\n        this.topLeft = {x: level.corners[0]-600, y: level.corners[0]-300};\r\n        this.bottomRight = {x: level.corners[1]+600, y: level.corners[1]+300};\r\n        this.blocks = {};\r\n        this.starsPerBlock = 100;\r\n    }\r\n\r\n    generateBlock(xInThousands, yInThousands){\r\n        let x = xInThousands;\r\n        let y = yInThousands;\r\n        const seed = 1000*x + y;\r\n        const frandom = fastRandom(seed);\r\n        const stars = new Array(this.starsPerBlock);\r\n        for (let i=0; i< stars.length; i++){\r\n            stars[i] = [\r\n                1000*(x + frandom.nextFloat()), \r\n                1000*(y+frandom.nextFloat()), \r\n                .3 + .8 * (frandom.nextFloat())**9]\r\n        }\r\n        this.blocks[`${x}, ${y}`] = stars;\r\n    }\r\n\r\n    drawBlock(ctx, xInThousands, yInThousands, viewport){\r\n        let stars = this.blocks[`${xInThousands}, ${yInThousands}`];\r\n        ctx.fillStyle = \"white\";\r\n        for (let i=0; i< stars.length; i++){\r\n            let [x, y, r] = stars[i];\r\n            ctx.beginPath();\r\n            \r\n            ctx.arc(\r\n              x - viewport.x1, y - viewport.y1, r, 0, 2 * Math.PI, true\r\n            );\r\n            ctx.fill();\r\n        }\r\n    }\r\n\r\n    getBlock(x, y){\r\n        return this.blocks[`${x}, ${y}`];\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Stars;","import Level1 from './levels/level1';\r\nimport Level2 from './levels/level2';\r\nimport Level3 from './levels/level3';\r\nimport TimedMessage from './timedMessage';\r\nimport Viewport from './viewport';\r\nimport Stars from './stars';\r\n\r\nclass Game {\r\n\r\n    constructor() {\r\n        this.canvas = document.getElementById(\"game-canvas\");\r\n        this.canvas.setAttribute(\"tabindex\", 0);\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        this.levels = [null, \r\n            // Level1, \r\n            // Level2,\r\n            Level2\r\n        ];\r\n        this.currentLevelNumber = 0;\r\n        this.draw = this.draw.bind(this);\r\n        this.initiateLevel = this.initiateLevel.bind(this);\r\n        this.setupLaunchPad = this.setupLaunchPad.bind(this);\r\n        this.playSpeed = {num: 1, fractional: false};\r\n        this.setPlaySpeed = this.setPlaySpeed.bind(this);\r\n        this.frameCount = 0;\r\n        // this.playSpeedMessage = null;\r\n        this.vp = new Viewport();\r\n        this.restartLevel = this.restartLevel.bind(this);\r\n        this.keyRestart = this.keyRestart.bind(this);\r\n        this.timedMessages = [];\r\n        this.canvas.addEventListener(\"keydown\", this.keyRestart);\r\n        window.printo = () => {\r\n        let ball = this.ball;\r\n        console.log(`ballx: ${ball.x}, bpx: ${ball.prevx}, playSpeed: ${\r\n            JSON.stringify(this.playSpeed)}, fC: ${this.frameCount},\r\n            balldrawX: ${ball.drawX}, ballInterX: ${ball.interpolateX}\r\n            viewportx1: ${this.vp.x1}`,\r\n            )}\r\n            requestAnimationFrame(this.animate.bind(this));\r\n        \r\n    }\r\n    keyRestart(event){\r\n        if (event.keyCode === 82) this.restartLevel();\r\n    }\r\n    initiateLevel() {\r\n        \r\n        this.currentLevelNumber += 1;\r\n        \r\n\r\n        this.vp = new Viewport();\r\n        const level = new this.levels[this.currentLevelNumber](this);\r\n        this.ball = level.ball;\r\n        this.currentPlanet = level.currentPlanet;\r\n        this.launchPad = level.launchPad;\r\n        this.planets=level.planets || [];\r\n        this.hole = level.hole;\r\n        this.obstacles = level.obstacles || [];\r\n        this.corners = level.corners;\r\n        this.startButton = level.startButton;\r\n        this.playSpeed = {num: 1, fractional: false};\r\n        this.stars = new Stars(level);\r\n        this.stars.generateBlock(0, 0);\r\n        this.vp.setMovementStart(\r\n            level.viewportMovementStartX || 0,\r\n            level.viewportMovementStartY || 0);\r\n\r\n        this.canvas.addEventListener(\"keydown\", this.setPlaySpeed, false);\r\n\r\n        if (!this.startButton){this.setupLaunchPad();}\r\n    }\r\n\r\n    restartLevel() {\r\n        this.currentLevelNumber -= 1;\r\n        this.initiateLevel();\r\n    }\r\n\r\n    setPlaySpeed(event){\r\n        if (![70,83].includes(event.keyCode)) return;\r\n        if (event.keyCode === 70){\r\n            if (this.playSpeed.fractional){\r\n                if ([2,3,4].includes(this.playSpeed.num)) {\r\n                    this.playSpeed.num -= 1;\r\n                }\r\n                else if (this.playSpeed.num === 1) {\r\n                    this.playSpeed.fractional = false;\r\n                    this.playSpeed.num = 2;\r\n                }   \r\n            }\r\n            else {\r\n                if ([1,2,3].includes(this.playSpeed.num)) {\r\n                    this.playSpeed.num += 1;\r\n            }\r\n            }\r\n        }\r\n        if (event.keyCode === 83) {\r\n            if (this.playSpeed.fractional){\r\n                if ([1,2,3].includes(this.playSpeed.num)) {\r\n                    this.playSpeed.num += 1;\r\n                }\r\n            }\r\n            else {\r\n                if ([2,3,4].includes(this.playSpeed.num)) {\r\n                    this.playSpeed.num -=1;\r\n                }\r\n                else if (this.playSpeed.num === 1){\r\n                    this.playSpeed.fractional = true;\r\n                    this.playSpeed.num = 2;\r\n                }\r\n            }\r\n        } \r\n        this.timedMessages = [ new TimedMessage(\r\n            `Playspeed: ${this.playSpeed.fractional ? \r\n                (1/this.playSpeed.num).toFixed(2) : this.playSpeed.num}`)];\r\n    }\r\n    \r\n    victoryMessage(){\r\n        const ctx = this.ctx;\r\n        ctx.beginPath();\r\n        ctx.fillStyle = \"white\"\r\n        ctx.font = `${30}px Arial`;\r\n        ctx.fillText('You win!', \r\n       400, 400);\r\n        ctx.fill();\r\n    }\r\n\r\n   \r\n        \r\n    setupLaunchPad(){\r\n        let game = this;\r\n        let canvas = game.canvas;\r\n        let setVelocityWithMouse = e => this.launchPad.setVelocity(e);\r\n        let launchBallWithMouse =  e => {if (this.launchPad.launch()){\r\n            canvas.removeEventListener('mousemove', setVelocityWithMouse, false);\r\n            canvas.removeEventListener(\"click\", launchBallWithMouse, false);\r\n            canvas.removeEventListener(\"keydown\", keyDownHandler, false);\r\n            this.launchPad = null;\r\n\r\n        }}\r\n        let arrowCodes = [37, 38, 39, 40];\r\n        let keyDownHandler = e => {\r\n            if (arrowCodes.includes(e.keyCode)){\r\n            canvas.removeEventListener('mousemove', setVelocityWithMouse, false);}\r\n            game.launchPad.setVelocityByArrowKeys(e, () => {\r\n            canvas.removeEventListener('keydown', keyDownHandler, false); \r\n            canvas.removeEventListener(\"click\", launchBallWithMouse, false);\r\n            this.launchPad = null;\r\n            });\r\n        }\r\n        canvas.addEventListener(\"mousemove\", setVelocityWithMouse, false);\r\n        canvas.addEventListener('keydown', keyDownHandler, false);\r\n        canvas.addEventListener(\"click\", launchBallWithMouse, false);\r\n    }\r\n    \r\n    step(delta) {\r\n        this.moveObjects(delta);\r\n        this.vp.moveWithBall(this.ball.interpolateX, this.ball.interpolateY,\r\n            this.ball);\r\n        this.timedMessages.forEach(message => {\r\n            message.duration -= 1;\r\n        });\r\n        this.timedMessages = this.timedMessages.filter(message => \r\n           (message.duration >= 0) );\r\n\r\n    }\r\n\r\n    moveObjects() {\r\n        let {playSpeed} = this;\r\n        if (playSpeed.fractional){\r\n            if (this.frameCount % playSpeed.num ===0 ){\r\n                this.ball.move();\r\n              if (!this.ball.checkRectangle(this.corners)){\r\n                this.restartLevel();\r\n                return;\r\n                 }\r\n            }\r\n\r\n        }\r\n        else {\r\n            for (let i = 1; i <= playSpeed.num; i++) {\r\n                this.ball.move();\r\n              if (!this.ball.checkRectangle(this.corners)){\r\n                this.restartLevel();\r\n                return;\r\n                 }\r\n            }\r\n        }\r\n    }\r\n    animate(time) {\r\n        const timeDelta = time - this.lastTime;\r\n        this.step(timeDelta);\r\n        this.draw();\r\n        if (this.hole.checkForWin()){\r\n            this.ball.stop();\r\n            if(this.currentLevelNumber >= this.levels.length - 1){\r\n                this.won = true;}\r\n                else{\r\n                this.initiateLevel();\r\n                }\r\n        }\r\n        this.lastTime = time;\r\n        this.frameCount += 1;\r\n\r\n        // every call to animate requests causes another call to animate\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n\r\n    \r\n    draw() {\r\n        let {ctx, ball, vp, launchPad, hole} = this;\r\n        \r\n        ctx.width = 1200;\r\n        ctx.height = 600;\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(0, 0, 1200, 600);\r\n        if (this.stars){\r\n            for(let i=Math.floor(vp.x1/1000); i<= Math.ceil(vp.x2/1000); i++){\r\n                for (let j=Math.floor(vp.y1/1000); j<=Math.ceil(vp.y2/1000); j++){\r\n                    if (!this.stars.getBlock(i, j)){\r\n                        this.stars.generateBlock(i, j)\r\n                    }\r\n                    this.stars.drawBlock(ctx, i, j, vp);\r\n                }\r\n            }\r\n        }\r\n        hole.drawFlag(ctx, hole.x - vp.x1, hole.y - vp.y1);\r\n        ball.draw(ctx);\r\n        hole.drawHole(ctx, hole.x - vp.x1, hole.y - vp.y1);\r\n        this.obstacles.forEach(obstacle => obstacle.draw(ctx, vp));\r\n        this.planets.forEach(planet => \r\n            planet.draw(ctx, planet.x - vp.x1, planet.y - vp.y1));\r\n        if(this.startButton) this.startButton.draw(ctx);\r\n        // if (this.playSpeedMessage) this.playSpeedMessage.draw(ctx);\r\n        this.timedMessages.forEach( message => {message.draw(ctx);})\r\n        if(launchPad) {launchPad.draw(ctx);}\r\n        if(this.won) this.victoryMessage();\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Game;","import Game from './game';\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n    const game = new Game();\r\n    game.initiateLevel();\r\n});\r\n"],"sourceRoot":""}