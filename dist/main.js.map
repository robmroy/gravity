{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ball.js","webpack:///./src/launchpad.js","webpack:///./src/obstacle.js","webpack:///./src/Sticky_planet.js","webpack:///./src/bouncy_planet.js","webpack:///./src/hole.js","webpack:///./src/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ball","[object Object]","game","x","y","radius","color","vx","vy","this","draw","move","ax","ay","stopped","logging","console","log","hole","checkForWin","dx","dy","dz","Math","abs","planets","forEach","planet","dz2","sqrt","normal","error","sticky","bounce","mass","obstacles","obstacle","checkForBall","ctx","beginPath","fillStyle","arc","PI","fill","rect","document","getElementById","getBoundingClientRect","launchpad","width","height","launch","launchVx","launchVy","fillRect","event","cursor","clientX","clientY","x1","y1","x2","y2","z","vDotNormal","new_vx","new_vy","max","min","result","moveTo","lineTo","strokeStyle","stroke","Sticky_planet","density","font","floor","fillText","bouncy_planet","bounce_coeff","dampen","vel","exp","flagColor","drawFlag","drawHole","src_game","level","canvas","getContext","launchPad","start","func","e","setVelocity","addEventListener","removeEventListener","requestAnimationFrame","animate","delta","moveObjects","time","timeDelta","lastTime","step"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\nclass Ball {\r\n    constructor(game, x = 0, y = 0, radius = 5, color = \"white\", vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.ax = 0;\r\n        this.ay = 0;\r\n        this.stopped = true;\r\n        this.logging = false;\r\n    }\r\n\r\n    move(){\r\n        if(this.logging){\r\n            console.log(`ballx is ${this.x}`);\r\n            console.log(`bally is ${this.y}`);\r\n        }\r\n        if (this.game.hole.checkForWin()){\r\n            this.stopped = true;\r\n        }\r\n        if (!this.stopped){\r\n            this.x += this.vx;\r\n            this.y += this.vy;\r\n            this.vx += this.ax;\r\n            this.vy +=this.ay;\r\n            // console.log(`vy is ${this.vy}`);\r\n            // console.log(`ay is ${this.ay}`);\r\n            \r\n\r\n            if (Math.abs(this.vx) + Math.abs(this.vy) < 0.4\r\n            && Math.abs(this.ax) + Math.abs(this.ay) <0.1){\r\n                this.stopped = true;}\r\n            this.ax = 0;\r\n            this.ay = 0;\r\n            let dx;\r\n            let dy;\r\n            let dz;\r\n            this.game.planets.forEach(planet => {\r\n                dx = this.x - planet.x;\r\n                dy = this.y - planet.y;\r\n                const dz2 = ((dx)**2 + (dy)**2);\r\n                 dz = Math.sqrt(dz2);\r\n                let normal = [dx/dz, dy/dz];\r\n                if (dz <=  this.radius + planet.radius){\r\n                    let error = this.radius + planet.radius - dz;\r\n                    this.x += error * normal[0];\r\n                    this.y += error * normal[1];\r\n                    this.ax = 0;\r\n                    this.ay = 0;\r\n                  if (planet.sticky || Math.abs(this.vx) + Math.abs(this.vy)<1 ){this.stopped = true;}\r\n                  else{planet.bounce(normal);}\r\n                    \r\n                }\r\n                else{\r\n                this.ax -= (1/dz2)*planet.mass * dx/dz * .2;\r\n                this.ay -= (1/dz2)*planet.mass * dy/dz * .2;\r\n                } \r\n        });\r\n        this.game.obstacles.forEach(obstacle => {\r\n            if (obstacle.checkForBall()){\r\n                obstacle.bounce();\r\n            }\r\n        })\r\n    };\r\n    \r\n    }\r\n    draw(ctx ) {\r\n        ctx.beginPath();\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          this.x, this.y, this.radius, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default Ball;","const error = () => {let m = document.getElementById(\"game-canvas\");\r\nlet rect = m.getBoundingClientRect();\r\nreturn {x: rect.x, y: rect.y};\r\n}\r\n\r\nclass LaunchPad {\r\n   constructor(game, x = 0, y = 0, width = 100, height = 100, color = \"yellow\"){\r\n      this.game = game;\r\n      this.x = x;\r\n      this.y = y;\r\n      this.width = width;\r\n      this.width = width;\r\n      this.height = height;\r\n      this.color = color;\r\n      this.draw= this.draw.bind(this);\r\n      this.move = this.move.bind(this);\r\n      this.launch = this.launch.bind(this);\r\n      this.launchVx = 0;\r\n      this.launchVy=0;\r\n  }\r\n\r\n  move(){\r\n      this.x += this.vx;\r\n      this.y += this.vy;\r\n  }\r\n  draw(ctx ) {\r\n     ctx.beginPath();\r\n     ctx.fillStyle = this.color;\r\n     ctx.fillRect(this.x, this.y, this.width, this.height);\r\n      ctx.fill();\r\n    }\r\n\r\n    launch(){\r\n       this.game.ball.stopped = false;\r\n       this.game.ball.vx = this.launchVx;\r\n       this.game.ball.vy = this.launchVy;\r\n    }\r\n\r\n    setVelocity(ball, event){\r\n\r\n      const cursor = {x: event.clientX -error().x, y: event.clientY - error().y};\r\n      if (cursor.x>=this.x && cursor.x <= this.x + this.width \r\n         && cursor.y >= this.y && cursor.y <= this.height + this.y) {\r\n            var dx = cursor.x - ball.x ;\r\n            var dy = cursor.y - ball.y ;\r\n        \r\n            var coor = \"Choose Vector. X coords: \" + ball.x + \", Y coords: \" + ball.y;\r\n            coor += `Vector: [${dx}, ${dy}]`;\r\n            this.launchVx = dx/ 5;\r\n            this.launchVy = dy/ 5;\r\n            \r\n            \r\n\r\n         }   \r\n    }\r\n   }\r\n\r\n   export default LaunchPad;\r\n","\r\nclass Obstacle {\r\n    constructor(game, x1 = 0, y1 = 0, x2 = 100, y2 = 100, color = \"orange\"){\r\n        this.game = game;\r\n        this.x1 = x1;\r\n        this.y1 = y1;\r\n        this.x2 = x2;\r\n        this.y2 = y2;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        let z = Math.sqrt((y1-y2)**2 + (x2 - x1)**2)\r\n        this.normal = [(y1 - y2)/z, (x2- x1)/z];\r\n        this.bounce = this.bounce.bind(this);\r\n        this.checkForBall = this.checkForBall.bind(this);\r\n    }\r\n    bounce(){\r\n        let ball = this.game.ball;\r\n        let normal = this.normal;\r\n        let vDotNormal = ball.vx * normal[0] + ball.vy * normal[1];\r\n        let new_vx = ball.vx - 2 * vDotNormal * normal[0];\r\n        let new_vy = ball.vy - 2 * vDotNormal * normal[1];\r\n        ball.vx = new_vx;\r\n        ball.vy = new_vy;\r\n    }\r\n    checkForBall(){\r\n        \r\n        let ball = this.game.ball;\r\n        ball.logging = false;\r\n        let {x1, x2, y1, y2} = this;\r\n        let {x, y, radius} = ball;\r\n        if (x - radius > Math.max(x1, x2) || x + radius < Math.min(x1, x2)){\r\n            return false;\r\n        }\r\n        if (y - radius > Math.max(y1, y2) || y + radius < Math.min(y1, y2)){\r\n            return false;\r\n        }\r\n        let d = ((y2-y1)*x - (x2-x1)*y+x2*y1-y2*x1)/Math.sqrt((y2-y1)**2 + (x2-x1)**2);\r\n        let result = -radius <= d && radius >= d;\r\n        if (result) {\r\n        return result;\r\n        }\r\n    }\r\n    move(){\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n    }\r\n    draw(ctx ) {\r\n        ctx.beginPath();\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.x1, this.y1);\r\n        ctx.lineTo(this.x2, this.y2);\r\n        ctx.strokeStyle = this.color;\r\n        ctx.stroke();\r\n      };\r\n}\r\n\r\nexport default Obstacle;","\r\nclass StickyPlanet {\r\n    constructor(game, x = 0, y = 0, radius = 10, color = \"grey\", density, vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.density = density || 1;\r\n        this.mass = this.density * this.radius**3;\r\n        this.sticky = true;\r\n    }\r\n\r\n    move(){\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n    }\r\n    draw(ctx ) {\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          this.x, this.y, this.radius, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.font = `${Math.floor(.9 * this.radius)}px Arial`;\r\n        ctx.fillText(`Density: ${this.density}`, \r\n        `${this.x - 1.9* this.radius}`,\r\n         `${this.y + 2* this.radius}`);\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default StickyPlanet;","\r\nclass BouncyPlanet {\r\n    constructor(game, x = 0, y = 0, radius = 10, color = \"pink\", density, \r\n    bounce_coeff, vx=0, vy=0){\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.color = color;\r\n        this.draw= this.draw.bind(this);\r\n        this.move = this.move.bind(this);\r\n        this.vx = vx;\r\n        this.vy = vy;\r\n        this.density = density || 1;\r\n        this.mass = this.density * this.radius**3;\r\n        this.sticky = false;\r\n        this.bounce_coeff = bounce_coeff || .9;\r\n    }\r\n\r\n    bounce(normal){\r\n        let ball = this.game.ball;\r\n        const dampen = vel => 1 - Math.exp(-.5*Math.abs(vel));\r\n        let vDotNormal = ball.vx * normal[0] + ball.vy * normal[1];\r\n        let new_vx = this.bounce_coeff*(dampen(ball.vx))*(ball.vx - 2 * vDotNormal * normal[0]);\r\n        let new_vy = this.bounce_coeff*(dampen(ball.vy))*(ball.vy - 2 * vDotNormal * normal[1]);\r\n        ball.vx = new_vx;\r\n        ball.vy = new_vy;\r\n    }\r\n    \r\n    move(){\r\n        this.x += this.vx;\r\n        this.y += this.vy;\r\n    }\r\n    draw(ctx ) {\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          this.x, this.y, this.radius, 0, 2 * Math.PI, true\r\n        );\r\n        ctx.font = `${Math.floor(.9 * this.radius)}px Arial`;\r\n        ctx.fillText(`Density: ${this.density}`, \r\n        `${this.x - 1.9* this.radius}`,\r\n         `${this.y + 2* this.radius}`);\r\n        ctx.fill();\r\n      };\r\n}\r\n\r\nexport default BouncyPlanet;","class Hole {\r\n    constructor(game, x = 600, y = 500, width = 100,  flagColor = \"red\"){\r\n       this.game = game;\r\n       this.x = x;\r\n       this.y = y;\r\n       this.width = width;\r\n       this.flagColor = flagColor;\r\n       this.drawFlag= this.drawFlag.bind(this);\r\n       this.drawHole= this.drawHole.bind(this);\r\n       this.move = this.move.bind(this);\r\n       this.launchVx = 0;\r\n       this.launchVy=0;\r\n   }\r\n \r\n   move(){\r\n       this.x += this.vx;\r\n       this.y += this.vy;\r\n   }\r\n   drawFlag(ctx ) {\r\n       let x = this.x;\r\n       let y = this.y;\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = \"gold\";\r\n      ctx.moveTo(x, y);\r\n      ctx.lineTo(x, y - 50)\r\n       ctx.stroke();\r\n       ctx.fillStyle = \"red\";\r\n       ctx.moveTo(x, y-50);\r\n       ctx.lineTo(x,y-70);\r\n       ctx.lineTo(x+ 25, y-60);\r\n       ctx.lineTo(x, y-50);\r\n       ctx.fill();\r\n     }\r\n     drawHole(ctx) {\r\n         let {x, y, width} = this;\r\n         let ball = this.game.ball;\r\n         if (ball.y - ball.radius <= y +20 && ball.vy > 0){\r\n             ctx.beginPath();\r\n             ctx.fillStyle = \"black\";\r\n             ctx.moveTo(x - width/2, y);\r\n             ctx.lineTo(x + width/2, y);\r\n             ctx.lineTo(x + width/2, y + 30);\r\n             ctx.lineTo(x - width/2, y + 30);\r\n             ctx.lineTo(x - width/2, y );\r\n             ctx.fill();\r\n         }\r\n         \r\n\r\n         \r\n        }\r\n        checkForWin(){\r\n            let {x, y, width} = this;\r\n            let ball = this.game.ball;\r\n            let result = ball.y -ball.radius> y \r\n            && ball.y-5*ball.radius < y\r\n            && Math.abs(ball.x - x) < width/2\r\n            && ball.vy >0;\r\n            if (result){\r\n                console.log('won, supposedly');\r\n            }\r\n            return result;\r\n        }\r\n \r\n    \r\n     \r\n    }\r\n \r\n    export default Hole;\r\n ","import Ball from './ball';\r\nimport LaunchPad from './launchpad';\r\nimport Obstacles from './obstacles';\r\nimport Planets from './planets';\r\nimport StickyPlanet from './Sticky_planet';\r\nimport Obstacle from './obstacle';\r\nimport BouncyPlanet from './bouncy_planet';\r\nimport Hole from './hole';\r\n\r\nclass Game {\r\n\r\n    constructor(level) {\r\n        this.canvas = document.getElementById(\"game-canvas\");\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n\r\n        this.ball = new Ball(this, 300, 50);\r\n        this.draw = this.draw.bind(this);\r\n        this.launchPad = new LaunchPad(this, 250);\r\n        this.start = this.start.bind(this);\r\n        this.planets = [\r\n            new BouncyPlanet(this, 300, 400, 35), \r\n            new StickyPlanet(this, 620, 250, 15, \"purple\", 3),\r\n            \r\n        ]\r\n        this.hole = new Hole(this, 200, 200);\r\n            this.obstacles=[];\r\n        this.obstacles = [\r\n            new Obstacle(this, 90, 0, 90, 900)   \r\n        ];\r\n        // this.planets = new Planets(level);\r\n        // this.launchpad = new LaunchPad(level);\r\n        // this.obstacles = new Obstacles(level);\r\n    }\r\n    start() {\r\n        // this.bindKeyHandlers();\r\n        // this.lastTime = 0;\r\n        let func = e => this.launchPad.setVelocity(this.ball, e);\r\n        this.canvas.addEventListener(\r\n            'mousemove', \r\n        func\r\n        )\r\n        this.canvas.addEventListener(\r\n            \"click\",\r\n            e => {this.launchPad.launch();\r\n                document.getElementById(\"game-canvas\").removeEventListener('mousemove', func);\r\n            })\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n    step(delta) {\r\n        this.moveObjects(delta);\r\n    }\r\n\r\n    moveObjects() {\r\n        this.ball.move();\r\n    }\r\n    animate(time) {\r\n        const timeDelta = time - this.lastTime;\r\n        this.step(timeDelta);\r\n        this.draw();\r\n        this.lastTime = time;\r\n\r\n        // every call to animate requests causes another call to animate\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n    draw() {\r\n        let ctx=this.ctx;\r\n        ctx.width = 1200;\r\n        ctx.height = 600;\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillRect(0, 0, 1000, 600);\r\n        this.launchPad.draw(ctx);\r\n        this.hole.drawFlag(ctx);\r\n        this.ball.draw(ctx);\r\n        this.planets.forEach(planet => planet.draw(ctx));\r\n        this.obstacles.forEach(obstacle => obstacle.draw(ctx));\r\n        this.hole.drawHole(ctx);\r\n    }\r\n\r\n}\r\n\r\nexport default Game;","import Game from './game';\r\n\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n    const game = new Game(1);\r\n    game.start();\r\n});\r\n"],"sourceRoot":""}